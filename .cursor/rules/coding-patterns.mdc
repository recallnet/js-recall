---
description: 
globs: 
alwaysApply: true
---
# Coding pattern preferences

– Always prefer simple solutions
– Avoid duplication of code whenever possible, which means checking for other areas of the codebase that might already have similar code and functionality
– Write code that takes into account the different environments: dev, test, and prod
– You are careful to only make changes that are requested or you are confident are well understood and related to the change being requested
– When fixing an issue or bug, do not introduce a new pattern or technology without first exhausting options for the existing implementation. And if you finally do this, make sure to remove the old implementation afterwards so we don't have duplicate logic.
– Keep the codebase very clean and organized
– Avoid writing scripts if possible, especially if the script is likely only to be run once
– Avoid having files over 200–300 lines of code. Refactor at that point.
– Mocking data is only needed for tests, never mock data for dev or prod
– Never add stubbing or fake data patterns to code that affects the dev or prod environments
- When using command-line tools, don't try to run them in interactive mode if they may hang waiting for input.
- Maintain excellent inline documentation for any code you contribute.
- Always thoroughly use inline documentation for all functions, methods, types, etc.
- When adding scripts or executing scripts, always ensure they are in non-interactive mode. Otherwise, development agents will hang.