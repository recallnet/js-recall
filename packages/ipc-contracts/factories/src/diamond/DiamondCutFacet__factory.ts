/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  DiamondCutFacet,
  DiamondCutFacetInterface,
} from "../../../src/diamond/DiamondCutFacet";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_selector",
        type: "bytes4",
      },
    ],
    name: "CannotAddFunctionToDiamondThatAlreadyExists",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4[]",
        name: "_selectors",
        type: "bytes4[]",
      },
    ],
    name: "CannotAddSelectorsToZeroAddress",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_selector",
        type: "bytes4",
      },
    ],
    name: "CannotRemoveFunctionThatDoesNotExist",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_selector",
        type: "bytes4",
      },
    ],
    name: "CannotRemoveImmutableFunction",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_selector",
        type: "bytes4",
      },
    ],
    name: "CannotReplaceFunctionThatDoesNotExists",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_selector",
        type: "bytes4",
      },
    ],
    name: "CannotReplaceFunctionWithTheSameFunctionFromTheSameFacet",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4[]",
        name: "_selectors",
        type: "bytes4[]",
      },
    ],
    name: "CannotReplaceFunctionsFromFacetWithZeroAddress",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_selector",
        type: "bytes4",
      },
    ],
    name: "CannotReplaceImmutableFunction",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "enum IDiamond.FacetCutAction",
        name: "_action",
        type: "uint8",
      },
    ],
    name: "IncorrectFacetCutAction",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_initializationContractAddress",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_calldata",
        type: "bytes",
      },
    ],
    name: "InitializationFunctionReverted",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contractAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "_message",
        type: "string",
      },
    ],
    name: "NoBytecodeAtAddress",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_facetAddress",
        type: "address",
      },
    ],
    name: "NoSelectorsProvidedForFacetForCut",
    type: "error",
  },
  {
    inputs: [],
    name: "NotOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_facetAddress",
        type: "address",
      },
    ],
    name: "RemoveFacetAddressMustBeZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address",
          },
          {
            internalType: "enum IDiamond.FacetCutAction",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]",
          },
        ],
        indexed: false,
        internalType: "struct IDiamond.FacetCut[]",
        name: "_diamondCut",
        type: "tuple[]",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_init",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_calldata",
        type: "bytes",
      },
    ],
    name: "DiamondCut",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address",
          },
          {
            internalType: "enum IDiamond.FacetCutAction",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]",
          },
        ],
        internalType: "struct IDiamond.FacetCut[]",
        name: "_diamondCut",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "_init",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_calldata",
        type: "bytes",
      },
    ],
    name: "diamondCut",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001657610d2f908161001c8239f35b600080fdfe608080604052600436101561001357600080fd5b60003560e01c631f931c1c1461002857600080fd5b346109ea5760603660031901126109ea5767ffffffffffffffff600435116109ea573660236004350112156109ea5767ffffffffffffffff60043560040135116109ea573660246004356004013560051b6004350101116109ea576024356001600160a01b03811690036109ea5767ffffffffffffffff604435116109ea573660236044350112156109ea5767ffffffffffffffff60443560040135116109ea57366024604435600401356044350101116109ea577f806e0cbb9fce296bbc336a48f42bf1dbc69722d18d90d6fe705b7582c2bb4bd5546001600160a01b031633036109ef5761012561012060043560040135610a64565b610a3e565b602081600435600401358152019081602460043501905b60246004356004013560051b600435010182106108ad57505061016761012060443560040135610a7c565b6044356004810135808352919291906024016020840137600060206044356004013584010152805160005b8181106102b05750506040519060608201906060835251809152608090608083019160808260051b85010195926000915b838310610221576024356001600160a01b03166020870152858803604087015261021f877f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb67388806102148d85610acf565b0390a1602435610ba1565b005b9091929396607f1986820301835287516020836040606085019360018060a01b0381511686526102578482015185880190610ac2565b015193606060408201528451809452019201906000905b80821061028d57505050602080600192990193019301919392906101c3565b82516001600160e01b03191684526020938401939092019160019091019061026e565b60406102bc8285610a98565b5101516001600160a01b036102d18386610a98565b515116908051156108945760206102e88487610a98565b510151600381101561087e57806104fc575081156104db5761ffff600080516020610cba833981519152541661035961031f610a1e565b602181527f6469616d6f6e644375743a2041646420666163657420686173206e6f20636f646020820152606560f81b604082015284610c7a565b8151916000915b8383106103765750505050506001905b01610192565b6001600160e01b03196103898484610a98565b51166000818152600080516020610cda83398151915260205260409020549091906001600160a01b03166104c2576104226103c26109fe565b87815261ffff9290921660208084018281526000868152600080516020610cda83398151915290925260409091209351845491516001600160b01b03199092166001600160a01b03919091161760a09190911b61ffff60a01b1617909255565b600080516020610cba8339815191525491680100000000000000008310156104ac5761048390610466600194858101600080516020610cba83398151915255610b0f565b90919063ffffffff83549160031b9260e01c831b921b1916179055565b61ffff8114610496578101920191610360565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b60405163ebbf5d0760e01b815260048101839052602490fd5b6040516302b8da0760e21b81529081906104f89060048301610b5b565b0390fd5b600181036106575750811561063a57610557610516610a1e565b602881527f4c69624469616d6f6e644375743a205265706c61636520666163657420686173602082015267206e6f20636f646560c01b604082015283610c7a565b80519060005b8281106105705750505050600190610370565b6001600160e01b03196105838284610a98565b51166000818152600080516020610cda83398151915260205260409020546001600160a01b03163081146106215785811461060857156105f0576000908152600080516020610cda8339815191526020526040902080546001600160a01b0319168517905560010161055d565b60249060405190637479f93960e01b82526004820152fd5b604051631ac6ce8d60e11b815260048101839052602490fd5b604051632901806d60e11b815260048101839052602490fd5b60405163cd98a96f60e01b81529081906104f89060048301610b5b565b6002810361085e5750600080516020610cba833981519152549180610846575080519060005b8281106106905750505050600190610370565b6001600160e01b03196106a38284610a98565b51169081600052600080516020610cda8339815191526020526040600020946106ca6109fe565b95546001600160a01b03811680885260a09190911c61ffff1660208801521561082d5785516001600160a01b031630146108145780156104965760001901948561ffff60208301511603610799575b50600080516020610cba83398151915254918215610783576001926000190161074181610b0f565b63ffffffff82549160031b1b19169055600080516020610cba83398151915255600052600080516020610cda833981519152602052600060408120550161067d565b634e487b7160e01b600052603160045260246000fd5b61080e9061ffff60206107ab89610b0f565b90549060031b1c60e01b926107c884610466858585015116610b0f565b01516001600160e01b03199092166000908152600080516020610cda83398151915260205260409020805461ffff60a01b19169190921660a01b61ffff60a01b16179055565b8a610719565b604051630df5fd6160e31b815260048101849052602490fd5b604051637a08a22d60e01b815260048101849052602490fd5b6024906040519063d091bc8160e01b82526004820152fd5b604051633ff4d20f60e11b815260249161087c906004830190610ac2565bfd5b634e487b7160e01b600052602160045260246000fd5b60405163e767f91f60e01b815260048101839052602490fd5b67ffffffffffffffff8235116109ea576060600435833501360360231901126109ea5760405180606081011067ffffffffffffffff6060830111176104ac5760608101604052600435833501602401356001600160a01b03811681036109ea57815260036044843560043501013510156109ea57600435833501604481013560208301526064013567ffffffffffffffff81116109ea5736604382863560043501010112156109ea576024818535600435010101359061096f61012083610a64565b91602083828152013660448360051b858a3560043501010101116109ea576044838835600435010101905b60448360051b858a356004350101010182106109c75750505050604082015281526020918201910161013c565b81356001600160e01b0319811690036109ea57813581526020918201910161099a565b600080fd5b6330cd747160e01b8152600490fd5b604051906040820182811067ffffffffffffffff8211176104ac57604052565b604051906060820182811067ffffffffffffffff8211176104ac57604052565b6040519190601f01601f1916820167ffffffffffffffff8111838210176104ac57604052565b67ffffffffffffffff81116104ac5760051b60200190565b67ffffffffffffffff81116104ac57601f01601f191660200190565b8051821015610aac5760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b90600382101561087e5752565b919082519283825260005b848110610afb575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610ada565b90600080516020610cba8339815191528054831015610aac57600052601c8260031c7fb65beca8b6fa788bcb1528c2ab5f4dc6bc98e5896550baa013d8330fab0b86f4019260021b1690565b602090602060408183019282815285518094520193019160005b828110610b83575050505090565b83516001600160e01b03191685529381019392810192600101610b75565b6001600160a01b03811691908215610c755760008091610c00610bc2610a1e565b602581527f6469616d6f6e644375743a205f696e6974206164647265737320686173206e6f60208201526420636f646560d81b604082015282610c7a565b83519060208501905af4913d15610c6d573d92610c1f61012085610a7c565b9384523d6000602086013e5b15610c3557505050565b825115610c4457825160208401fd5b6104f860405192839263192105d760e01b84526004840152604060248401526044830190610acf565b606092610c2b565b505050565b803b15610c85575050565b6040805163919834b960e01b81526001600160a01b03909216600483015260248201529081906104f8906044830190610acf56fe806e0cbb9fce296bbc336a48f42bf1dbc69722d18d90d6fe705b7582c2bb4bd3806e0cbb9fce296bbc336a48f42bf1dbc69722d18d90d6fe705b7582c2bb4bd2a26469706673582212205fa061f04cb71744e99d32e2293868296da3f806c54c3eb82630c8c604d3193a64736f6c63430008170033";

type DiamondCutFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DiamondCutFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DiamondCutFacet__factory extends ContractFactory {
  constructor(...args: DiamondCutFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      DiamondCutFacet & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DiamondCutFacet__factory {
    return super.connect(runner) as DiamondCutFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DiamondCutFacetInterface {
    return new Interface(_abi) as DiamondCutFacetInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): DiamondCutFacet {
    return new Contract(address, _abi, runner) as unknown as DiamondCutFacet;
  }
}
