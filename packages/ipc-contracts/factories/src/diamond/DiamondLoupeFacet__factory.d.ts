import { ContractFactory, ContractTransactionResponse } from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type { DiamondLoupeFacet, DiamondLoupeFacetInterface } from "../../../src/diamond/DiamondLoupeFacet";
type DiamondLoupeFacetConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class DiamondLoupeFacet__factory extends ContractFactory {
    constructor(...args: DiamondLoupeFacetConstructorParams);
    getDeployTransaction(overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<ContractDeployTransaction>;
    deploy(overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<DiamondLoupeFacet & {
        deploymentTransaction(): ContractTransactionResponse;
    }>;
    connect(runner: ContractRunner | null): DiamondLoupeFacet__factory;
    static readonly bytecode = "0x608080604052346100165761084f908161001c8239f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c806301ffc9a71461006757806352ef6b2c146100625780637a0ed6271461005d578063adfca15e146100585763cdffacc61461005357600080fd5b6105ed565b610532565b6102fc565b610127565b346100ba576001600160e01b031961007e366100bf565b166000527f806e0cbb9fce296bbc336a48f42bf1dbc69722d18d90d6fe705b7582c2bb4bd460205260ff60406000205416151560805260206080f35b600080fd5b60209060031901126100ba576004356001600160e01b0319811681036100ba5790565b602090602060408183019282815285518094520193019160005b82811061010a575050505090565b83516001600160a01b0316855293810193928101926001016100fc565b346100ba5760008060031936011261023f576000805160206107fa8339815191525490610153826106a3565b9080805b848210610173578284526040518061016f86826100e2565b0390f35b90916101a6610199610194610187866106e6565b90549060031b1c60e01b90565b610612565b546001600160a01b031690565b826001600160a01b038216815b8481106101fc575b50506101f257816101e46101e9926101d560019589610744565b6001600160a01b039091169052565b61076e565b925b0190610157565b50916001906101eb565b61022561021961020c838b610744565b516001600160a01b031690565b6001600160a01b031690565b8214610233576001016101b3565b505050600138806101bb565b80fd5b6020808201908083528351809252604092604081018260408560051b840101960194600080935b86851061027b57505050505050505090565b909192939480969798603f198382030186528951826060818885019360018060a01b038151168652015193888382015284518094520192019085905b8082106102d85750505090806001929a019501950193969594929190610269565b82516001600160e01b03191684528a949384019390920191600191909101906102b7565b346100ba5760008060031936011261023f576000805160206107fa8339815191525461032781610782565b90610331816106a3565b92809181905b8082106103915750505b818110610359578183526040518061016f8582610242565b8061037b61037461036c60019488610744565b5161ffff1690565b61ffff1690565b60206103878387610744565b5101515201610341565b909261039f610187856106e6565b6103ab61019982610612565b846001600160a01b038216815b858110610455575b505061044a579161042e610441926103ee6001956103de858c610744565b516001600160a01b039091169052565b61041e836103fb886106a3565b8b6104096020938492610744565b510152610416858c610744565b510151610737565b6001600160e01b03199091169052565b6101e461043b828a610744565b60019052565b935b0190610337565b505092600190610443565b8a858b846104776102196104698785610744565b51516001600160a01b031690565b14610487575050506001016103b8565b6104e39550838095506104d3936104c96104ce9461041e60206104b06104da9a61036c98610744565b5101516104c361037461036c8888610744565b90610744565b610744565b6107e6565b918b610744565b9061ffff169052565b600138806103c0565b602090602060408183019282815285518094520193019160005b828110610514575050505090565b83516001600160e01b03191685529381019392810192600101610506565b346100ba5760203660031901126100ba576001600160a01b03600435818116908190036100ba576000805160206107fa8339815191525491600090610576846106a3565b9260005b858110610592578385526040518061016f87826104ec565b61059b816106e6565b90549060031b1c60e01b836105af82610612565b541683146105c1575b5060010161057a565b846105e6916105d36001949789610744565b6001600160e01b0319909116905261076e565b93906105b8565b346100ba5760206001600160a01b03610608610194366100bf565b5416604051908152f35b63ffffffff60e01b166000527f806e0cbb9fce296bbc336a48f42bf1dbc69722d18d90d6fe705b7582c2bb4bd2602052604060002090565b634e487b7160e01b600052604160045260246000fd5b6040519190601f01601f1916820167ffffffffffffffff81118382101761068657604052565b61064a565b67ffffffffffffffff81116106865760051b60200190565b906106b56106b08361068b565b610660565b82815280926106c6601f199161068b565b0190602036910137565b634e487b7160e01b600052603260045260246000fd5b906000805160206107fa833981519152805483101561073257600052601c8260031c7fb65beca8b6fa788bcb1528c2ab5f4dc6bc98e5896550baa013d8330fab0b86f4019260021b1690565b6106d0565b8051156107325760200190565b80518210156107325760209160051b010190565b634e487b7160e01b600052601160045260246000fd5b600019811461077d5760010190565b610758565b9061078f6106b08361068b565b82815280926107a0601f199161068b565b016000805b8281106107b25750505050565b604090815182810181811067ffffffffffffffff8211176106865760209352838152826060818301528287010152016107a5565b61ffff80911690811461077d576001019056fe806e0cbb9fce296bbc336a48f42bf1dbc69722d18d90d6fe705b7582c2bb4bd3a2646970667358221220eb972012d92e5bd04c1467edb99619a653afe98945417824ab55e57a971a93be64736f6c63430008170033";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "bytes4";
            readonly name: "_functionSelector";
            readonly type: "bytes4";
        }];
        readonly name: "facetAddress";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "facetAddress_";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "facetAddresses";
        readonly outputs: readonly [{
            readonly internalType: "address[]";
            readonly name: "facetAddresses_";
            readonly type: "address[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_facet";
            readonly type: "address";
        }];
        readonly name: "facetFunctionSelectors";
        readonly outputs: readonly [{
            readonly internalType: "bytes4[]";
            readonly name: "_facetFunctionSelectors";
            readonly type: "bytes4[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "facets";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "facetAddress";
                readonly type: "address";
            }, {
                readonly internalType: "bytes4[]";
                readonly name: "functionSelectors";
                readonly type: "bytes4[]";
            }];
            readonly internalType: "struct IDiamondLoupe.Facet[]";
            readonly name: "facets_";
            readonly type: "tuple[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes4";
            readonly name: "_interfaceId";
            readonly type: "bytes4";
        }];
        readonly name: "supportsInterface";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    static createInterface(): DiamondLoupeFacetInterface;
    static connect(address: string, runner?: ContractRunner | null): DiamondLoupeFacet;
}
export {};
//# sourceMappingURL=DiamondLoupeFacet__factory.d.ts.map