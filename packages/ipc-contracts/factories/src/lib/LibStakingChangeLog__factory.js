"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.LibStakingChangeLog__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "enum StakingOperation",
                name: "op",
                type: "uint8",
            },
            {
                indexed: false,
                internalType: "address",
                name: "validator",
                type: "address",
            },
            {
                indexed: false,
                internalType: "bytes",
                name: "payload",
                type: "bytes",
            },
            {
                indexed: false,
                internalType: "uint64",
                name: "configurationNumber",
                type: "uint64",
            },
        ],
        name: "NewStakingChangeRequest",
        type: "event",
    },
];
const _bytecode = "0x60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220b87f87ffc786c37548730f0f16d9bd36eb863e96d3164dea0656c0bcbbd4438a64736f6c63430008170033";
const isSuperArgs = (xs) => xs.length > 1;
class LibStakingChangeLog__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    connect(runner) {
        return super.connect(runner);
    }
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.LibStakingChangeLog__factory = LibStakingChangeLog__factory;
LibStakingChangeLog__factory.bytecode = _bytecode;
LibStakingChangeLog__factory.abi = _abi;
//# sourceMappingURL=LibStakingChangeLog__factory.js.map