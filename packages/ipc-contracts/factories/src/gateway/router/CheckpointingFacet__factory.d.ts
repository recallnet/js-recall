import { ContractFactory, ContractTransactionResponse } from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type { CheckpointingFacet, CheckpointingFacetInterface } from "../../../../src/gateway/router/CheckpointingFacet";
type CheckpointingFacetConstructorParams = [linkLibraryAddresses: CheckpointingFacetLibraryAddresses, signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class CheckpointingFacet__factory extends ContractFactory {
    constructor(...args: CheckpointingFacetConstructorParams);
    static linkBytecode(linkLibraryAddresses: CheckpointingFacetLibraryAddresses): string;
    getDeployTransaction(overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<ContractDeployTransaction>;
    deploy(overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<CheckpointingFacet & {
        deploymentTransaction(): ContractTransactionResponse;
    }>;
    connect(runner: ContractRunner | null): CheckpointingFacet__factory;
    static readonly bytecode = "0x6080806040523461001657613c2a908161001c8239f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c806353b4e7bf14610ab7578063ac818379146108b3578063dc749b05146104265763fba0fa4d1461004857600080fd5b3461030357600319602036820112610303576001600160401b0380600435116103035760a08260043536030112610303576100b66020610095366100906004803501806115b7565b61138e565b60405180938192632cff562160e11b835284600484015260248301906115e0565b038173__$a0fe38a9a81205afccc10810b09a4d3f45$__5af4908115610366576000916103ec575b50336001600160a01b03909116036103da5733156103c8576101256000610103611cd4565b6040518093819263aa5106cb60e01b83526040600484015260448301906115e0565b336024830152038173__$a0fe38a9a81205afccc10810b09a4d3f45$__5af480156103665761015c916000916103a5575b50611f03565b9290156103945761019c919061017a366100906004803501806115b7565b9160405193849363c836244d60e01b85526040600486015260448501906115e0565b9183830301602484015260048501541681526005840190604060208201526060825491826040820152019160005260206000209060005b818110610372575050509080602092038173__$a0fe38a9a81205afccc10810b09a4d3f45$$e800e3908cdbb6b1b5bd452383a17b18f7$__5af4908115610366576000916117b2575b50156117a057565b60405163f0d97f3b60e01b8152600490fd5b90506020813d6020116117e4575b816117cd60209383610f91565b81010312610303576117de90611638565b38611798565b3d91506117c0565b80518210156118005760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b805482101561180057600052600c602060002091020190600090565b815161183d816112c0565b611846816112c0565b60ff199060ff828454169116178255600180830160209182860151948551926001600160401b039586855116916001600160401b0319928382541617905585600284019501518051908882116107745787906118a2838961107b565b01600096875287872086885b848110611c7657505050505085600384019801519760ff895116828254161790558560048401980151978851888111611ba8576118eb82546110af565b99601f9a8b8111611c4a575b5088908b8311600114611beb576119259291899183611a575750508160011b916000199060031b1c19161790565b90555b6005830160408a01519081519089825116858254161790558760068601910151908151918a8311611bd757899061195f848461107b565b0190885288882087895b848110611bbc57505050505086600785019101519160ff835116908254161790558560088401910151805190888211611ba8576119a683546110af565b8a8111611b7c575b5087908a8311600114611b105782600b959360a09795936119e4938b92611a575750508160011b916000199060031b1c19161790565b90555b60098201908860608c015116908254161790556080890151600a82015501960151928351948511611afc57611a1c87546110af565b868111611ac6575b5080958511600114611a62575050928291611a539492611a575750508160011b916000199060031b1c19161790565b9055565b015190503880610ceb565b8683528083209195919391928591601f19831691905b88838310611aac5750505010611a93575b505050811b019055565b015160001960f88460031b161c19169055388080611a89565b858701518855909601959485019487935090810190611a78565b611aed908885528285208880890160051c820192858a10611af3575b0160051c019061103e565b38611a24565b92508192611ae2565b634e487b7160e01b83526041600452602483fd5b8388528888208793929091601f1984168a5b8c828210611b6657505091600b979593918560a09a98969410611b4d575b505050811b0190556119e7565b015160001960f88460031b161c19169055388080611b40565b8385015186558b97909501949384019301611b22565b611ba2908489528989208c80860160051c8201928c8710611af3570160051c019061103e565b386119ae565b634e487b7160e01b87526041600452602487fd5b83516001600160a01b031683820155928b0192899101611969565b634e487b7160e01b89526041600452602489fd5b8389528989208893929091601f1984168b5b8d828210611c345750508411611c1b575b505050811b019055611928565b015160001960f88460031b161c19169055388080611c0e565b8385015186558c97909501949384019301611bfd565b611c7090848a528a8a208d80860160051c8201928d8710611af3570160051c019061103e565b386118f7565b83516001600160a01b031683820155928a01928891016118ae565b8054600160401b81101561077457611cae91600182018155611816565b919091611cbe5761107991611832565b634e487b7160e01b600052600060045260246000fd5b60405190611ce182610f40565b816001600160401b036012541681526040518091826013549283815260208091019360136000527f66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a090916000905b828210611d4b5750505050611d47906020930384610f91565b0152565b83546001600160a01b031687529586019587945060019384019390910190611d2e565b9060405191611d7c83610f40565b826001600160401b0382541681526001809201916040519283849282548083526020809301936000526020600020926000905b828210611dca57505050505060209291611d47910384610f91565b84546001600160a01b03168652889650948501949383019390830190611daf565b51906001600160401b038216820361030357565b91906040838203126103035760405192611e1884610f40565b83611e2282611deb565b815260209182810151906001600160401b03821161030357019280601f85011215610303578351611e5281610fb2565b94611e606040519687610f91565b818652848087019260051b8201019283116103035784809101915b838310611e8a57505050500152565b8190611e95846115cc565b8152019101908490611e7b565b906020828203126103035781516001600160401b0381116103035761138b9201611dff565b8151919060418303611ef857611ef192506020820151906060604084015193015160001a90612012565b9192909190565b505060009160029190565b611f4173__$a0fe38a9a81205afccc10810b09a4d3f45$__91604051906390ba52cf60e01b82528180602094859384600484015260248301906115e0565b0381865af490811561036657600091611fe5575b50600052601f8152611f9681604060002093611f7360048601611d6e565b906040518080958194630c133d1360e31b835286600484015260248301906115e0565b03915af491821561036657600092611faf575b50501591565b90809250813d8311611fde575b611fc68183610f91565b8101031261030357611fd790611638565b3880611fa9565b503d611fbc565b90508181813d831161200b575b611ffc8183610f91565b81010312610303575138611f55565b503d611ff2565b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841161209657926020929160ff608095604051948552168484015260408301526060820152600092839182805260015afa1561208a5780516001600160a01b0381161561208157918190565b50809160019190565b604051903d90823e3d90fd5b50505060009160039190565b600e5481101561180057600e6000527fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd0190600090565b80548210156118005760005260206000200190600090565b6000818152600f602052604081205461216957600e54600160401b81101561215557908261214161212a84600160409601600e556120a2565b819391549060031b91821b91600019901b19161790565b9055600e54928152600f6020522055600190565b634e487b7160e01b82526041600452602482fd5b905090565b60008281526001820160205260409020546121be57805490600160401b82101561077457826121a761212a8460018096018555846120d9565b905580549260005201602052604060002055600190565b5050600090565b6000818152600f602052604081205490919080156122aa576000199080820181811161229657600e54908382019182116122825781810361224e575b505050600e54801561223a57810190612219826120a2565b909182549160031b1b19169055600e558152600f6020526040812055600190565b634e487b7160e01b84526031600452602484fd5b61226c61225d61212a936120a2565b90549060031b1c9283926120a2565b90558452600f6020526040842055388080612201565b634e487b7160e01b86526011600452602486fd5b634e487b7160e01b85526011600452602485fd5b505090565b906001820190600092818452826020526040842054908115156000146123985760001991808301818111612384578254908482019182116123705781810361233b575b505050805480156123275782019161230a83836120d9565b909182549160031b1b191690555582526020526040812055600190565b634e487b7160e01b86526031600452602486fd5b61235b61234b61212a93866120d9565b90549060031b1c928392866120d9565b905586528460205260408620553880806122f2565b634e487b7160e01b88526011600452602488fd5b634e487b7160e01b87526011600452602487fd5b5050505090565b90816020910312610303575160028110156103035790565b60005b8381106123ca5750506000910152565b81810151838201526020016123ba565b906020916123f3815180928185528580860191016123b7565b601f01601f1916010190565b6040602061138b93816124198551858452858401906115e0565b940151908281860391015260ff815116845201519181602082015201906123da565b61138b91815161244a816112c0565b815260a061247c61246a602085015160c0602086015260c08501906123ff565b604085015184820360408601526123ff565b926001600160401b0360608201511660608401526080810151608084015201519060a08184039101526123da565b6116da61138b9260408352604083019061243b565b9060016001600160401b03809316019182116102ab57565b9081604091031261030357604051906124ef82610f40565b80516002811015610303578252612508906020016115cc565b602082015290565b602090818301918251519173__$a0fe38a9a81205afccc10810b09a4d3f45$__604093845192630c133d1360e31b845260049385818061255a602496848a840152878301906115e0565b0381875af49081156129b657600091612981575b50612957578551600061258082610f40565b80825286820152865163855f7e4560e01b81528681806125a28d8a83016124aa565b038173__$33b79814e84bf6cf5e47244090b19ce5f8$__5af490811561294c5760009161291f575b506125d48161172a565b600181036128415750506125e790611f03565b901561283757600381016001600160401b03808254891c168160608c0151160361280657858793838a67ffffffffffffffff60401b61263261264d9661266d9a985480941c166124bf565b8d1b169067ffffffffffffffff60401b191617905501611d6e565b8751632cff562160e11b81528681018490529384928392908301906115e0565b0381855af49081156127c257839186916000916127cd575b5081516380875df760e01b815292839182906001600160a01b03165afa9081156127c257916126d993918593600091612795575b50965b5151865163c836244d60e01b8152948593849283929183016116c5565b03915af490811561278a57600091612755575b50156127165750506126fe9082612dca565b901561270d5761107991612c8f565b61107991612c21565b6110799392506021908251818101908282526127468161273887820189612d89565b03601f198101835282610f91565b51902060005252600020611832565b90508181813d8311612783575b61276c8183610f91565b810103126103035761277d90611638565b386126ec565b503d612762565b83513d6000823e3d90fd5b6127b59150873d89116127bb575b6127ad8183610f91565b8101906124d7565b386126b9565b503d6127a3565b85513d6000823e3d90fd5b925050508381813d83116127ff575b6127e68183610f91565b8101031261030357846127f984926115cc565b38612685565b503d6127dc565b50505092945050506110799391519263bc0f01cf60e01b90840152600281840152825261283282610f76565b612a8a565b5050505050505050565b909792915061284f8161172a565b15612862575b509183916126d9936126bc565b9095506001600160401b039081600354871c168260608a015116036128f557509183916128c361289a6126d995600354891c166124bf565b67ffffffffffffffff60401b6003549160401b169067ffffffffffffffff60401b191617600355565b60008387516128d181610f40565b828152015285516128e181610f40565b600081526000848201529691935091612855565b9395505050506110799391519263bc0f01cf60e01b90840152600281840152825261283282610f76565b61293f9150873d8911612945575b6129378183610f91565b81019061239f565b386125ca565b503d61292d565b88513d6000823e3d90fd5b5092945050506110799391519263bc0f01cf60e01b90840152600181840152825261283282610f76565b90508581813d83116129af575b6129988183610f91565b81010312610303576129a990611638565b3861256e565b503d61298e565b87513d6000823e3d90fd5b81601f820112156103035780516129d781610fc9565b926129e56040519485610f91565b818452602082840101116103035761138b91602080850191016123b7565b91906040838203126103035760405192612a1c84610f40565b838151916001600160401b03928381116103035784612a3c918301611dff565b825260208101519083821161030357016040818503126103035760405193612a6385610f40565b815160ff811681036103035785526020820151938411610303576020936114b592016129c1565b612a9381612ecb565b612c1d5760028151612aa4816112c0565b612aad816112c0565b14612c1d57604051634dbefc2d60e11b81526060600482015290612ad590606483019061243b565b91600160248301526003198284030160448301528180612af860009586946123da565b038173__$33b79814e84bf6cf5e47244090b19ce5f8$__5af4908115612c12578291612b2d575b50612b2a9150612ef5565b50565b90503d8083833e612b3e8183610f91565b810190602081830312612c0e5780516001600160401b0391828211612c0a570160c081840312612c065760405193612b7585610f5b565b81516003811015612c025785526020820151838111612c025784612b9a918401612a03565b60208601526040820151838111612c025784612bb7918401612a03565b6040860152612bc860608301611deb565b60608601526080820151608086015260a0820151928311612bff575091612bf491612b2a9493016129c1565b60a082015238612b1f565b80fd5b5080fd5b8380fd5b8480fd5b8280fd5b6040513d84823e3d90fd5b5050565b612c2a81612ecb565b612c1d5760028151612c3b816112c0565b612c44816112c0565b14612c1d57604051634dbefc2d60e11b81526060600482015290612c6c90606483019061243b565b91600260248301526003198284030160448301528180612af860009586946123da565b612c9881612ecb565b612c1d5760028151612ca9816112c0565b612cb2816112c0565b14612c1d57604051634dbefc2d60e11b81526060600482015290612cda90606483019061243b565b918180612af860009586948560248501526003198483030160448501526123da565b91908251906040815260808101936001600160401b038351166040830152602080930151946040606084015285518091528360a0840196019060005b818110612d6c575050509360408381938161138b97980151908281860391015260ff815116845201519382015201906123da565b82516001600160a01b031688529685019691850191600101612d38565b61138b918151612d98816112c0565b815260a061247c612db8602085015160c0602086015260c0850190612cfc565b60408501518482036040860152612cfc565b9190604051612e2881602093612df88583019763065c4c3160e11b8952606060248501526084840190612d89565b908051612e048161172a565b60448401528501516001600160a01b0316606483015203601f198101835282610f91565b600080948192519073__$33b79814e84bf6cf5e47244090b19ce5f8$__5af4903d15612ec3573d93612e5985610fc9565b94612e676040519687610f91565b85523d818387013e5b8483612e7d575050509190565b9194509291508051810193604082860312612c0657612e9d818301611638565b936040830151906001600160401b038211612bff57508161138b949596019201016129c1565b606093612e70565b8051612ed6816112c0565b612edf816112c0565b15612eed5760a00151511590565b608001511590565b906020918281019283515173__$a0fe38a9a81205afccc10810b09a4d3f45$__90604091825191630c133d1360e31b83526004906024938683820152868180612f40888201866115e0565b0381875af490811561368e57600091613659575b5061364357845163c836244d60e01b80825290878180612f76868883016116c5565b0381885af49081156129b65760009161360e575b506135fe5785880151519086519263855f7e4560e01b8452888480612fb18d8983016124aa565b038173__$33b79814e84bf6cf5e47244090b19ce5f8$__5af493841561294c576000946135df575b508751631ccc893360e11b81528581018990526000818061301161300060448301876115e0565b828103600319018d840152886115e0565b03818a5af49081156134835761304195949392918b916000916135c4575b508a51809781928683528a83016116c5565b03818a5af49485156134835760009561358d575b506000906130628561172a565b6001850361348e57505087516308c7427760e11b81528581018a9052906000828061308f8b8201876115e0565b03818a5af491821561348357918a916130bd9493600092613466575b508a51948592839283528983016116c5565b0381895af491821561294c5790899160009361342e575b50826133b1575b50505b613318575b6130ec8161172a565b15908115613310575b50613114575050505050608091925061310d816138a4565b0151151590565b6001600160401b0395949580600354861c168181146132fc5761317f97989961316560016000930167ffffffffffffffff60401b6003549160401b169067ffffffffffffffff60401b191617600355565b515186518099819263089032d560e01b83528683016116c5565b0381865af49687156127c2576000976132df575b5061319d87611f03565b9190156132cf579181899594936003879401908154906131c660608c83851691829101526124bf565b16906001600160401b0319161790556131e9600260808a0151920191825461171d565b905561320c8651988995869485946304e384ff60e21b86528501528301906115e0565b03915af49283156132c45760009361326a575b50518381526001600160a01b03909216927ffdd39ce2560484814971f663392e78ae37dc62ba184b3370d830371dd271a8b7929182916132629190830190612d89565b0390a2600090565b92508383813d83116132bd575b6132818183610f91565b81010312610303576132626132b67ffdd39ce2560484814971f663392e78ae37dc62ba184b3370d830371dd271a8b7946115cc565b935061321f565b503d613277565b50513d6000823e3d90fd5b8551630e991abd60e41b81528390fd5b6132f59197503d806000833e6103ba8183610f91565b9538613193565b84601184634e487b7160e01b600052526000fd5b9050386130f5565b8751613323816112c0565b61332c816112c0565b6130e357855163015538b160e01b8152808401889052604f818701527f70726f7061676174696f6e206f6620605472616e7366657260206d657373616760448201527f6573206e6f742073757070706f7274656420666f72207375626e65747320776960648201526e746820455243323020737570706c7960881b608482015260a490fd5b6133d49250885180938192632cff562160e11b835284898401528a8301906115e0565b0381885af480156129b6576000906133f8575b6133f19150613699565b87386130db565b508781813d8311613427575b61340e8183610f91565b81010312610303576134226133f1916115cc565b6133e7565b503d613404565b8281939294503d831161345f575b6134468183610f91565b81010312610303576134588991611638565b91386130d4565b503d61343c565b61347c9192503d806000833e6103ba8183610f91565b90386130ab565b89513d6000823e3d90fd5b9150915061349b8361172a565b8183156134aa575b50506130de565b885163089032d560e01b815291829081906134c7908983016116c5565b0381895af49081156135835782918a916135009491613569575b50895180948192632cff562160e11b8352848a8401528b8301906115e0565b0381895af490811561355e578091613525575b5061351e9150613699565b38816134a3565b90508882813d8311613557575b61353c8183610f91565b81010312612bff575061355161351e916115cc565b38613513565b503d613532565b8851903d90823e3d90fd5b61357d91503d8085833e6103ba8183610f91565b386134e1565b88513d84823e3d90fd5b9094508981813d83116135bd575b6135a58183610f91565b81010312610303576135b690611638565b9338613055565b503d61359b565b6135d991503d806000833e6103ba8183610f91565b3861302f565b6135f7919450893d8b11612945576129378183610f91565b9238612fd9565b8551632f3335ff60e21b81528390fd5b90508781813d831161363c575b6136258183610f91565b810103126103035761363690611638565b38612f8a565b503d61361b565b845163bc0f01cf60e01b81526001818401528490fd5b90508681813d8311613687575b6136708183610f91565b810103126103035761368190611638565b38612f54565b503d613666565b86513d6000823e3d90fd5b604080516380875df760e01b815291829060049082906001600160a01b03165afa8015610366576001916000916136e3575b50516136d68161172a565b6136df8161172a565b1490565b6136fc915060403d6040116127bb576127ad8183610f91565b386136cb565b60138114612b2a57601354906001600160401b03821161077457613726828261107b565b6000908152602081207f66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a09080545b848410613761575050505050565b600191820180546001600160a01b0390921684860155939091019290613753565b6040519061378f82610f40565b6060602083600081520152565b604051906137a982610f40565b816137b2613782565b815260206137be613782565b910152565b906040519182600082546137d6816110af565b908184526020946001916001811690816000146138445750600114613805575b50505061107992500383610f91565b600090815285812095935091905b81831061382c57505061107993508201013880806137f6565b85548884018501529485019487945091830191613813565b9250505061107994925060ff191682840152151560051b8201013880806137f6565b906040519161387483610f40565b60208361388083611d6e565b81526114b560036040519461389486610f40565b60ff6002820154168652016137c3565b60019081546001600160401b03908015613bde578082431604908482018092116102ab576138d19161102b565b600380549280841690806138ec6060938060608a01526124bf565b166001600160401b03198096161783556000948486526020602381526040958688209060028201805415613ba05750508501958654865460c01c14600014613b8e5786549861393a8a610fb2565b976139478351998a610f91565b8a8952601f196139568c610fb2565b01848b898c825b858410613b465750505050505082519a60608c018c811088821117613b3257978d8c9b868f9b818a8e81938352613992611cd4565b8152019d8e439052019e8f938452925b8c878510613aa1575050505050505050906139ea91437f4ecfe3c1ed32ef0a63d3801d51eb20214db90b14dc5fd1ca58a9de54f16f46a68c80a26139e581611155565b611c91565b845188526023825287209751918383511690895416178855808989019201518051938411613a8d578190613a2185859b9a9b61107b565b019188528088209089895b858110613a7257505050505050516002840155815151939201915b838110613a55575050505050565b80613a6c613a65879385516117ec565b5185611c91565b01613a47565b84516001600160a01b031684820155938201938b9101613a2c565b634e487b7160e01b88526041600452602488fd5b91613b11600b613b2695938795613ab8878e611816565b50915195805195613ac887610f5b565b60ff845416613ad6816112c0565b8752613ae38c8501613866565b90870152613af360058401613866565b908601526009820154168a850152600a8101546080850152016137c3565b60a0820152613b2083836117ec565b526117ec565b50018e9086888e6139a2565b634e487b7160e01b8c52604160045260248cfd5b84918185928b5195613b5787610f5b565b818752613b6261379c565b86880152613b6e61379c565b8d88015286015260808501528d60a0850152010152018590898c8e61395d565b50505050505090506110799250611c91565b9550959750955050966110799760128603613bc0575b5050505501611c91565b613bd69260125416908654161785558401613702565b388080613bb6565b634e487b7160e01b600052601260045260246000fdfea26469706673582212201718a0b627ab810d004bda36c3307a4c745763ca3f43fcd7fa61cc0f0d10c18f64736f6c63430008170033";
    static readonly abi: readonly [{
        readonly inputs: readonly [];
        readonly name: "CannotSendCrossMsgToItself";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "CheckpointAlreadyExists";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "CheckpointNotCreated";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "FailedAddIncompleteQuorum";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "FailedAddSignatory";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "FailedRemoveIncompleteQuorum";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidActorAddress";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidCheckpointSource";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidRetentionHeight";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidSignature";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidSubnet";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "enum InvalidXnetMessageReason";
            readonly name: "reason";
            readonly type: "uint8";
        }];
        readonly name: "InvalidXnetMessage";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "MaxMsgsPerBatchExceeded";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "string";
            readonly name: "reason";
            readonly type: "string";
        }];
        readonly name: "MethodNotAllowed";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "NotAuthorized";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NotEnoughSubnetCircSupply";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NotRegisteredSubnet";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NotSystemActor";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "QuorumAlreadyProcessed";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "SignatureReplay";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "SubnetNotFound";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "ZeroMembershipWeight";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "epoch";
            readonly type: "uint256";
        }];
        readonly name: "NewBottomUpMsgBatch";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "subnet";
            readonly type: "address";
        }, {
            readonly components: readonly [{
                readonly internalType: "enum IpcMsgKind";
                readonly name: "kind";
                readonly type: "uint8";
            }, {
                readonly components: readonly [{
                    readonly components: readonly [{
                        readonly internalType: "uint64";
                        readonly name: "root";
                        readonly type: "uint64";
                    }, {
                        readonly internalType: "address[]";
                        readonly name: "route";
                        readonly type: "address[]";
                    }];
                    readonly internalType: "struct SubnetID";
                    readonly name: "subnetId";
                    readonly type: "tuple";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "uint8";
                        readonly name: "addrType";
                        readonly type: "uint8";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "payload";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct FvmAddress";
                    readonly name: "rawAddress";
                    readonly type: "tuple";
                }];
                readonly internalType: "struct IPCAddress";
                readonly name: "to";
                readonly type: "tuple";
            }, {
                readonly components: readonly [{
                    readonly components: readonly [{
                        readonly internalType: "uint64";
                        readonly name: "root";
                        readonly type: "uint64";
                    }, {
                        readonly internalType: "address[]";
                        readonly name: "route";
                        readonly type: "address[]";
                    }];
                    readonly internalType: "struct SubnetID";
                    readonly name: "subnetId";
                    readonly type: "tuple";
                }, {
                    readonly components: readonly [{
                        readonly internalType: "uint8";
                        readonly name: "addrType";
                        readonly type: "uint8";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "payload";
                        readonly type: "bytes";
                    }];
                    readonly internalType: "struct FvmAddress";
                    readonly name: "rawAddress";
                    readonly type: "tuple";
                }];
                readonly internalType: "struct IPCAddress";
                readonly name: "from";
                readonly type: "tuple";
            }, {
                readonly internalType: "uint64";
                readonly name: "nonce";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint256";
                readonly name: "value";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "message";
                readonly type: "bytes";
            }];
            readonly indexed: false;
            readonly internalType: "struct IpcEnvelope";
            readonly name: "message";
            readonly type: "tuple";
        }];
        readonly name: "NewTopDownMessage";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "enum QuorumObjKind";
            readonly name: "objKind";
            readonly type: "uint8";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "height";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "bytes32";
            readonly name: "objHash";
            readonly type: "bytes32";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "quorumWeight";
            readonly type: "uint256";
        }];
        readonly name: "QuorumReached";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "enum QuorumObjKind";
            readonly name: "objKind";
            readonly type: "uint8";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "height";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "bytes32";
            readonly name: "objHash";
            readonly type: "bytes32";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "newWeight";
            readonly type: "uint256";
        }];
        readonly name: "QuorumWeightUpdated";
        readonly type: "event";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "height";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes32[]";
            readonly name: "membershipProof";
            readonly type: "bytes32[]";
        }, {
            readonly internalType: "uint256";
            readonly name: "weight";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes";
            readonly name: "signature";
            readonly type: "bytes";
        }];
        readonly name: "addCheckpointSignature";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly components: readonly [{
                    readonly internalType: "uint64";
                    readonly name: "root";
                    readonly type: "uint64";
                }, {
                    readonly internalType: "address[]";
                    readonly name: "route";
                    readonly type: "address[]";
                }];
                readonly internalType: "struct SubnetID";
                readonly name: "subnetID";
                readonly type: "tuple";
            }, {
                readonly internalType: "uint256";
                readonly name: "blockHeight";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes32";
                readonly name: "blockHash";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint64";
                readonly name: "nextConfigurationNumber";
                readonly type: "uint64";
            }, {
                readonly components: readonly [{
                    readonly internalType: "enum IpcMsgKind";
                    readonly name: "kind";
                    readonly type: "uint8";
                }, {
                    readonly components: readonly [{
                        readonly components: readonly [{
                            readonly internalType: "uint64";
                            readonly name: "root";
                            readonly type: "uint64";
                        }, {
                            readonly internalType: "address[]";
                            readonly name: "route";
                            readonly type: "address[]";
                        }];
                        readonly internalType: "struct SubnetID";
                        readonly name: "subnetId";
                        readonly type: "tuple";
                    }, {
                        readonly components: readonly [{
                            readonly internalType: "uint8";
                            readonly name: "addrType";
                            readonly type: "uint8";
                        }, {
                            readonly internalType: "bytes";
                            readonly name: "payload";
                            readonly type: "bytes";
                        }];
                        readonly internalType: "struct FvmAddress";
                        readonly name: "rawAddress";
                        readonly type: "tuple";
                    }];
                    readonly internalType: "struct IPCAddress";
                    readonly name: "to";
                    readonly type: "tuple";
                }, {
                    readonly components: readonly [{
                        readonly components: readonly [{
                            readonly internalType: "uint64";
                            readonly name: "root";
                            readonly type: "uint64";
                        }, {
                            readonly internalType: "address[]";
                            readonly name: "route";
                            readonly type: "address[]";
                        }];
                        readonly internalType: "struct SubnetID";
                        readonly name: "subnetId";
                        readonly type: "tuple";
                    }, {
                        readonly components: readonly [{
                            readonly internalType: "uint8";
                            readonly name: "addrType";
                            readonly type: "uint8";
                        }, {
                            readonly internalType: "bytes";
                            readonly name: "payload";
                            readonly type: "bytes";
                        }];
                        readonly internalType: "struct FvmAddress";
                        readonly name: "rawAddress";
                        readonly type: "tuple";
                    }];
                    readonly internalType: "struct IPCAddress";
                    readonly name: "from";
                    readonly type: "tuple";
                }, {
                    readonly internalType: "uint64";
                    readonly name: "nonce";
                    readonly type: "uint64";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "value";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "message";
                    readonly type: "bytes";
                }];
                readonly internalType: "struct IpcEnvelope[]";
                readonly name: "msgs";
                readonly type: "tuple[]";
            }];
            readonly internalType: "struct BottomUpCheckpoint";
            readonly name: "checkpoint";
            readonly type: "tuple";
        }];
        readonly name: "commitCheckpoint";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly components: readonly [{
                    readonly internalType: "uint64";
                    readonly name: "root";
                    readonly type: "uint64";
                }, {
                    readonly internalType: "address[]";
                    readonly name: "route";
                    readonly type: "address[]";
                }];
                readonly internalType: "struct SubnetID";
                readonly name: "subnetID";
                readonly type: "tuple";
            }, {
                readonly internalType: "uint256";
                readonly name: "blockHeight";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes32";
                readonly name: "blockHash";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint64";
                readonly name: "nextConfigurationNumber";
                readonly type: "uint64";
            }, {
                readonly components: readonly [{
                    readonly internalType: "enum IpcMsgKind";
                    readonly name: "kind";
                    readonly type: "uint8";
                }, {
                    readonly components: readonly [{
                        readonly components: readonly [{
                            readonly internalType: "uint64";
                            readonly name: "root";
                            readonly type: "uint64";
                        }, {
                            readonly internalType: "address[]";
                            readonly name: "route";
                            readonly type: "address[]";
                        }];
                        readonly internalType: "struct SubnetID";
                        readonly name: "subnetId";
                        readonly type: "tuple";
                    }, {
                        readonly components: readonly [{
                            readonly internalType: "uint8";
                            readonly name: "addrType";
                            readonly type: "uint8";
                        }, {
                            readonly internalType: "bytes";
                            readonly name: "payload";
                            readonly type: "bytes";
                        }];
                        readonly internalType: "struct FvmAddress";
                        readonly name: "rawAddress";
                        readonly type: "tuple";
                    }];
                    readonly internalType: "struct IPCAddress";
                    readonly name: "to";
                    readonly type: "tuple";
                }, {
                    readonly components: readonly [{
                        readonly components: readonly [{
                            readonly internalType: "uint64";
                            readonly name: "root";
                            readonly type: "uint64";
                        }, {
                            readonly internalType: "address[]";
                            readonly name: "route";
                            readonly type: "address[]";
                        }];
                        readonly internalType: "struct SubnetID";
                        readonly name: "subnetId";
                        readonly type: "tuple";
                    }, {
                        readonly components: readonly [{
                            readonly internalType: "uint8";
                            readonly name: "addrType";
                            readonly type: "uint8";
                        }, {
                            readonly internalType: "bytes";
                            readonly name: "payload";
                            readonly type: "bytes";
                        }];
                        readonly internalType: "struct FvmAddress";
                        readonly name: "rawAddress";
                        readonly type: "tuple";
                    }];
                    readonly internalType: "struct IPCAddress";
                    readonly name: "from";
                    readonly type: "tuple";
                }, {
                    readonly internalType: "uint64";
                    readonly name: "nonce";
                    readonly type: "uint64";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "value";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "message";
                    readonly type: "bytes";
                }];
                readonly internalType: "struct IpcEnvelope[]";
                readonly name: "msgs";
                readonly type: "tuple[]";
            }];
            readonly internalType: "struct BottomUpCheckpoint";
            readonly name: "checkpoint";
            readonly type: "tuple";
        }, {
            readonly internalType: "bytes32";
            readonly name: "membershipRootHash";
            readonly type: "bytes32";
        }, {
            readonly internalType: "uint256";
            readonly name: "membershipWeight";
            readonly type: "uint256";
        }];
        readonly name: "createBottomUpCheckpoint";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "newRetentionHeight";
            readonly type: "uint256";
        }];
        readonly name: "pruneBottomUpCheckpoints";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): CheckpointingFacetInterface;
    static connect(address: string, runner?: ContractRunner | null): CheckpointingFacet;
}
export interface CheckpointingFacetLibraryAddresses {
    ["src/lib/SubnetIDHelper.sol:SubnetIDHelper"]: string;
    ["src/lib/AccountHelper.sol:AccountHelper"]: string;
    ["src/lib/CrossMsgHelper.sol:CrossMsgHelper"]: string;
}
export {};
//# sourceMappingURL=CheckpointingFacet__factory.d.ts.map