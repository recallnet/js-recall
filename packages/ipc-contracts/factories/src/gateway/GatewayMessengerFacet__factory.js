"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GatewayMessengerFacet__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [],
        name: "CallFailed",
        type: "error",
    },
    {
        inputs: [],
        name: "CannotSendCrossMsgToItself",
        type: "error",
    },
    {
        inputs: [],
        name: "InsufficientFunds",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "enum InvalidXnetMessageReason",
                name: "reason",
                type: "uint8",
            },
        ],
        name: "InvalidXnetMessage",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "string",
                name: "reason",
                type: "string",
            },
        ],
        name: "MethodNotAllowed",
        type: "error",
    },
    {
        inputs: [],
        name: "NotRegisteredSubnet",
        type: "error",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint256",
                name: "epoch",
                type: "uint256",
            },
        ],
        name: "NewBottomUpMsgBatch",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "subnet",
                type: "address",
            },
            {
                components: [
                    {
                        internalType: "enum IpcMsgKind",
                        name: "kind",
                        type: "uint8",
                    },
                    {
                        components: [
                            {
                                components: [
                                    {
                                        internalType: "uint64",
                                        name: "root",
                                        type: "uint64",
                                    },
                                    {
                                        internalType: "address[]",
                                        name: "route",
                                        type: "address[]",
                                    },
                                ],
                                internalType: "struct SubnetID",
                                name: "subnetId",
                                type: "tuple",
                            },
                            {
                                components: [
                                    {
                                        internalType: "uint8",
                                        name: "addrType",
                                        type: "uint8",
                                    },
                                    {
                                        internalType: "bytes",
                                        name: "payload",
                                        type: "bytes",
                                    },
                                ],
                                internalType: "struct FvmAddress",
                                name: "rawAddress",
                                type: "tuple",
                            },
                        ],
                        internalType: "struct IPCAddress",
                        name: "to",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                components: [
                                    {
                                        internalType: "uint64",
                                        name: "root",
                                        type: "uint64",
                                    },
                                    {
                                        internalType: "address[]",
                                        name: "route",
                                        type: "address[]",
                                    },
                                ],
                                internalType: "struct SubnetID",
                                name: "subnetId",
                                type: "tuple",
                            },
                            {
                                components: [
                                    {
                                        internalType: "uint8",
                                        name: "addrType",
                                        type: "uint8",
                                    },
                                    {
                                        internalType: "bytes",
                                        name: "payload",
                                        type: "bytes",
                                    },
                                ],
                                internalType: "struct FvmAddress",
                                name: "rawAddress",
                                type: "tuple",
                            },
                        ],
                        internalType: "struct IPCAddress",
                        name: "from",
                        type: "tuple",
                    },
                    {
                        internalType: "uint64",
                        name: "nonce",
                        type: "uint64",
                    },
                    {
                        internalType: "uint256",
                        name: "value",
                        type: "uint256",
                    },
                    {
                        internalType: "bytes",
                        name: "message",
                        type: "bytes",
                    },
                ],
                indexed: false,
                internalType: "struct IpcEnvelope",
                name: "message",
                type: "tuple",
            },
        ],
        name: "NewTopDownMessage",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "msgCid",
                type: "bytes32",
            },
        ],
        name: "propagate",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "enum IpcMsgKind",
                        name: "kind",
                        type: "uint8",
                    },
                    {
                        components: [
                            {
                                components: [
                                    {
                                        internalType: "uint64",
                                        name: "root",
                                        type: "uint64",
                                    },
                                    {
                                        internalType: "address[]",
                                        name: "route",
                                        type: "address[]",
                                    },
                                ],
                                internalType: "struct SubnetID",
                                name: "subnetId",
                                type: "tuple",
                            },
                            {
                                components: [
                                    {
                                        internalType: "uint8",
                                        name: "addrType",
                                        type: "uint8",
                                    },
                                    {
                                        internalType: "bytes",
                                        name: "payload",
                                        type: "bytes",
                                    },
                                ],
                                internalType: "struct FvmAddress",
                                name: "rawAddress",
                                type: "tuple",
                            },
                        ],
                        internalType: "struct IPCAddress",
                        name: "to",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                components: [
                                    {
                                        internalType: "uint64",
                                        name: "root",
                                        type: "uint64",
                                    },
                                    {
                                        internalType: "address[]",
                                        name: "route",
                                        type: "address[]",
                                    },
                                ],
                                internalType: "struct SubnetID",
                                name: "subnetId",
                                type: "tuple",
                            },
                            {
                                components: [
                                    {
                                        internalType: "uint8",
                                        name: "addrType",
                                        type: "uint8",
                                    },
                                    {
                                        internalType: "bytes",
                                        name: "payload",
                                        type: "bytes",
                                    },
                                ],
                                internalType: "struct FvmAddress",
                                name: "rawAddress",
                                type: "tuple",
                            },
                        ],
                        internalType: "struct IPCAddress",
                        name: "from",
                        type: "tuple",
                    },
                    {
                        internalType: "uint64",
                        name: "nonce",
                        type: "uint64",
                    },
                    {
                        internalType: "uint256",
                        name: "value",
                        type: "uint256",
                    },
                    {
                        internalType: "bytes",
                        name: "message",
                        type: "bytes",
                    },
                ],
                internalType: "struct IpcEnvelope",
                name: "envelope",
                type: "tuple",
            },
        ],
        name: "sendContractXnetMessage",
        outputs: [
            {
                components: [
                    {
                        internalType: "enum IpcMsgKind",
                        name: "kind",
                        type: "uint8",
                    },
                    {
                        components: [
                            {
                                components: [
                                    {
                                        internalType: "uint64",
                                        name: "root",
                                        type: "uint64",
                                    },
                                    {
                                        internalType: "address[]",
                                        name: "route",
                                        type: "address[]",
                                    },
                                ],
                                internalType: "struct SubnetID",
                                name: "subnetId",
                                type: "tuple",
                            },
                            {
                                components: [
                                    {
                                        internalType: "uint8",
                                        name: "addrType",
                                        type: "uint8",
                                    },
                                    {
                                        internalType: "bytes",
                                        name: "payload",
                                        type: "bytes",
                                    },
                                ],
                                internalType: "struct FvmAddress",
                                name: "rawAddress",
                                type: "tuple",
                            },
                        ],
                        internalType: "struct IPCAddress",
                        name: "to",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                components: [
                                    {
                                        internalType: "uint64",
                                        name: "root",
                                        type: "uint64",
                                    },
                                    {
                                        internalType: "address[]",
                                        name: "route",
                                        type: "address[]",
                                    },
                                ],
                                internalType: "struct SubnetID",
                                name: "subnetId",
                                type: "tuple",
                            },
                            {
                                components: [
                                    {
                                        internalType: "uint8",
                                        name: "addrType",
                                        type: "uint8",
                                    },
                                    {
                                        internalType: "bytes",
                                        name: "payload",
                                        type: "bytes",
                                    },
                                ],
                                internalType: "struct FvmAddress",
                                name: "rawAddress",
                                type: "tuple",
                            },
                        ],
                        internalType: "struct IPCAddress",
                        name: "from",
                        type: "tuple",
                    },
                    {
                        internalType: "uint64",
                        name: "nonce",
                        type: "uint64",
                    },
                    {
                        internalType: "uint256",
                        name: "value",
                        type: "uint256",
                    },
                    {
                        internalType: "bytes",
                        name: "message",
                        type: "bytes",
                    },
                ],
                internalType: "struct IpcEnvelope",
                name: "committed",
                type: "tuple",
            },
        ],
        stateMutability: "payable",
        type: "function",
    },
];
const _bytecode = "0x6080806040523461001657612224908161001c8239f35b600080fdfe608060408181526004908136101561001657600080fd5b600092833560e01c90816325bf0db6146104625750633eeb723f1461003a57600080fd5b60209160031990838236011261045e5780356001600160401b039485821161045a578183019082360360c08682011261045657610075610b36565b5060ff60065460081c16156103d757333b156103c057346084850135036103a957823560038110156103a55760010361038e5760a48401936100b78585610b77565b8196910195848188031261034e578035908b821161038a5701898188031261034e578951906100e5826106ab565b80358c811161035257886100fa918301610be5565b825285810135908c8211610352578c9887926101169201610be5565b910152610121610afa565b506101a689513360601b868201526014815261013c816106ab565b6101988b519161014b836106dc565b600a83526fffffffffffffffffffffffffffffffff8d898501906014825280860193845280519c8d968c8089015251169086015251166060840152516060608084015260a083019061055e565b03601f198101885287610712565b8851956101b2876106ab565b878752848701528851956101c5876106ab565b6101cd61074e565b87528487015260249282840135906042190181121561034e576101f1920194610b77565b9690958851996102008b6106f7565b60018b528983873603011261034e5789519561021b876106ab565b828101358281116103525781018b858236030112610352578b519061023f826106ab565b84810135848116810361038657825286810135908482116103865701366023820112156103825780858e92013561028161027882610c00565b93519384610712565b808352888a84019160051b8301019136831161037c578901905b8282106103565750505087820152875284810135828111610352578b910193843603011261034e578951936102cf856106ab565b8284013560ff8116810361035257855283013590811161034e57926103086103409998969361034a9d969361032b999636920101610be5565b828201528183015289015286880152606087015260808601923484523691610bae565b60a085015261033984610e24565b9051611865565b519182918261062e565b0390f35b8b80fd5b8d80fd5b81356001600160a01b0381168103610375578152908a01908a0161029b565b5050508f80fd5b50508f80fd5b8e80fd5b8f80fd5b8c80fd5b865163bc0f01cf60e01b8152808601869052602490fd5b8980fd5b865163bc0f01cf60e01b8152600381870152602490fd5b865163bc0f01cf60e01b81528086018a9052602490fd5b5083610452878051906103e9826106dc565b603a82527f537570706f727420666f722067656e6572616c2d707572706f73652063726f73858301527f732d6e6574206d657373616765732069732064697361626c6564000000000000818301525193849363015538b160e01b8552840152602483019061055e565b0390fd5b8880fd5b8680fd5b8480fd5b84838560203660031901126105375780359060ff60065460101c16156104c4575090816104c192845260216020526104bc82852092600a6104aa6104a586610978565b610e24565b94015492865260216020528520610ac4565b611865565b80f35b60209061045286856104d5826106dc565b603682527f537570706f727420666f72206d756c74692d6c6576656c2063726f73732d6e6585830152751d081b595cdcd859d95cc81a5cc8191a5cd8589b195960521b818301525193849363015538b160e01b8552840152602483019061055e565b8280fd5b9060038210156105485752565b634e487b7160e01b600052602160045260246000fd5b919082519283825260005b84811061058a575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610569565b91908251906040815260808101936001600160401b038351166040830152602080930151946040606084015285518091528360a0840196019060005b818110610611575050509360408381938161060e97980151908281860391015260ff8151168452015193820152019061055e565b90565b82516001600160a01b0316885296850196918501916001016105da565b9061060e916020815261064560208201835161053b565b61065e602083015160c0604084015260e083019061059e565b9060c060a061067f604086015194601f19958686830301606087015261059e565b946001600160401b0360608201511660808501526080810151828501520151928285030191015261055e565b604081019081106001600160401b038211176106c657604052565b634e487b7160e01b600052604160045260246000fd5b606081019081106001600160401b038211176106c657604052565b60c081019081106001600160401b038211176106c657604052565b90601f801991011681019081106001600160401b038211176106c657604052565b6001600160401b0381116106c657601f01601f191660200190565b6040519061075b826106ab565b816001600160401b036012541681526040518091826013549283815260208091019360136000526000805160206121cf833981519152916000905b8282106107b357505050506107af906020930384610712565b0152565b83546001600160a01b031687529586019587945060019384019390910190610796565b90604051916107e4836106ab565b826001600160401b0382541681526001809201916040519283849282548083526020809301936000526020600020926000905b828210610832575050505050602092916107af910384610712565b84546001600160a01b03168652889650948501949383019390830190610817565b90600182811c92168015610883575b602083101461086d57565b634e487b7160e01b600052602260045260246000fd5b91607f1691610862565b906040519182600082546108a081610853565b9081845260209460019160018116908160001461091057506001146108d1575b5050506108cf92500383610712565b565b600090815285812095935091905b8183106108f85750506108cf93508201013880806108c0565b855488840185015294850194879450918301916108df565b925050506108cf94925060ff191682840152151560051b8201013880806108c0565b9060405191610940836106ab565b60208361094c836107d6565b8152610970600360405194610960866106ab565b60ff60028201541686520161088d565b828401520152565b90604051610985816106f7565b809260ff81541690600382101561054857600b6109e69160a09385526109ad60018201610932565b60208601526109be60058201610932565b60408601526001600160401b036009820154166060860152600a81015460808601520161088d565b910152565b8181106109f6575050565b600081556001016109eb565b90600160401b81116106c657815490808355818110610a2057505050565b6108cf92600052602060002091820191016109eb565b610a408154610853565b9081610a4a575050565b81601f60009311600114610a5c575055565b908083918252610a7b601f60208420940160051c8401600185016109eb565b5555565b60036108cf91600081556001810180546000825580610aa8575b50506000600282015501610a36565b610abd916000526020600020908101906109eb565b3880610a99565b600b6108cf9160008155610ada60018201610a7f565b610ae660058201610a7f565b600060098201556000600a82015501610a36565b60405190610b07826106ab565b6060602083600081520152565b60405190610b21826106ab565b81610b2a610afa565b815260206109e6610afa565b60405190610b43826106f7565b606060a08360008152610b54610b14565b6020820152610b61610b14565b6040820152600083820152600060808201520152565b903590601e1981360301821215610ba957018035906001600160401b038211610ba957602001918136038313610ba957565b600080fd5b929192610bba82610733565b91610bc86040519384610712565b829481845281830111610ba9578281602093846000960137010152565b9080601f83011215610ba95781602061060e93359101610bae565b6001600160401b0381116106c65760051b60200190565b90816020910312610ba957518015158103610ba95790565b604082016001600160401b0382511683526020606081809401519460408382015285518094520193019160005b828110610c6a575050505090565b83516001600160a01b031685529381019392810192600101610c5c565b90610c9a90604083526040830190610c2f565b906020906020818403910152606060408301926001600160401b0360125416815260406020820152601354809452019160136000526000805160206121cf833981519152916000905b828210610cf1575050505090565b83546001600160a01b031685529384019360019384019390910190610ce3565b6040602061060e9381610d2b855185845285840190610c2f565b940151908281860391015260ff8151168452015191816020820152019061055e565b51906001600160a01b0382168203610ba957565b9060208083830312610ba95782516001600160401b0393848211610ba9570192604084840312610ba95760405193610d98856106ab565b80518281168103610ba957855282810151918211610ba957019180601f84011215610ba9578251610dc881610c00565b93610dd66040519586610712565b818552838086019260051b820101928311610ba95783809101915b838310610e02575050505082015290565b8190610e0d84610d4d565b8152019101908390610df1565b6002111561054857565b9060208201515191604051630c133d1360e31b81526020600482015260208180610e516024820188610c2f565b038173__$a0fe38a9a81205afccc10810b09a4d3f45$__5af49081156113fc57600091611846575b5061182d5760405163c836244d60e01b815260208180610e9c8760048301610c87565b038173__$a0fe38a9a81205afccc10810b09a4d3f45$__5af49081156113fc5760009161180e575b506117fc5760408101805151610f59610f266040519363855f7e4560e01b855260406004860152610ef960448601875161053b565b610f13602087015160c06064880152610104870190610d11565b9051858203604319016084870152610d11565b60608501516001600160401b031660a4850152608085015160c485015260a08501518482036043190160e486015261055e565b94826003199687828203016024830152606060408201916001600160401b0360125416815260406020820152601354809352019060136000526000805160206121cf8339815191529060005b8181106117da575050509080602092038173__$33b79814e84bf6cf5e47244090b19ce5f8$__5af49283156113fc57600093611798575b50600061101a94959660405180968192631ccc893360e11b83526040600484015261100a6044840187610c2f565b9083820301602484015286610c2f565b038173__$a0fe38a9a81205afccc10810b09a4d3f45$__5af49384156113fc576110649460209160009161177d575b506040518096819263c836244d60e01b835260048301610c87565b038173__$a0fe38a9a81205afccc10810b09a4d3f45$__5af49384156113fc5760009461175c575b5060009061109984610e1a565b600184036116265750506040516308c7427760e11b81526020600482015290600082806110c96024820185610c2f565b038173__$a0fe38a9a81205afccc10810b09a4d3f45$__5af49182156113fc576111139260209160009161160b575b506040518094819263c836244d60e01b835260048301610c87565b038173__$a0fe38a9a81205afccc10810b09a4d3f45$__5af49182156113fc576000926115ea575b508161154f575b505b6114bc575b61115281610e1a565b159081156114b4575b50611173578061116c608092611eeb565b0151151590565b6003546001600160401b038160401c166001600160401b03811461140857600167ffffffffffffffff60401b910160401b169067ffffffffffffffff60401b1916176003556111dd60006020830151516040518093819263089032d560e01b835260048301610c87565b038173__$a0fe38a9a81205afccc10810b09a4d3f45$__5af49081156113fc57600091611491575b506040516390ba52cf60e01b8152602060048201819052818061122b6024820186610c2f565b038173__$a0fe38a9a81205afccc10810b09a4d3f45$__5af49081156113fc5760009161145f575b50600052601f6020526040600020906112946020611273600485016107d6565b60405180938192630c133d1360e31b83528460048401526024830190610c2f565b038173__$a0fe38a9a81205afccc10810b09a4d3f45$__5af49081156113fc57600091611430575b5061141e576003820180546001600160401b036112e081831680606089015261198a565b16906001600160401b0319161790556002608084015192019081549283018093116114085761132e9260209255604051809381926304e384ff60e21b83528460048401526024830190610c2f565b038173__$a0fe38a9a81205afccc10810b09a4d3f45$__5af49081156113fc5760009161139d575b506040516001600160a01b03909116917ffdd39ce2560484814971f663392e78ae37dc62ba184b3370d830371dd271a8b791908190611395908261062e565b0390a2600090565b90506020813d6020116113f4575b816113b860209383610712565b81010312610ba9576113956113ed7ffdd39ce2560484814971f663392e78ae37dc62ba184b3370d830371dd271a8b792610d4d565b9150611356565b3d91506113ab565b6040513d6000823e3d90fd5b634e487b7160e01b600052601160045260246000fd5b604051630e991abd60e41b8152600490fd5b611452915060203d602011611458575b61144a8183610712565b810190610c17565b386112bc565b503d611440565b90506020813d602011611489575b8161147a60209383610712565b81010312610ba9575138611253565b3d915061146d565b6114ae91503d806000833e6114a68183610712565b810190610d61565b38611205565b90503861115b565b82516003811015610548576111495760405163015538b160e01b815260206004820152604f60248201527f70726f7061676174696f6e206f6620605472616e7366657260206d657373616760448201527f6573206e6f742073757070706f7274656420666f72207375626e65747320776960648201526e746820455243323020737570706c7960881b608482015260a490fd5b611578915060209060405180938192632cff562160e11b83528460048401526024830190610c2f565b038173__$a0fe38a9a81205afccc10810b09a4d3f45$__5af480156113fc576000906115af575b6115a991506118d7565b38611142565b506020813d6020116115e2575b816115c960209383610712565b81010312610ba9576115dd6115a991610d4d565b61159f565b3d91506115bc565b61160491925060203d6020116114585761144a8183610712565b903861113b565b61162091503d806000833e6114a68183610712565b386110f8565b90915061163283610e1a565b818315611641575b5050611144565b60405163089032d560e01b815291829081906116609060048301610c87565b038173__$a0fe38a9a81205afccc10810b09a4d3f45$__5af49081156117515782916020916116b19491611737575b5060405180948192632cff562160e11b83528460048401526024830190610c2f565b038173__$a0fe38a9a81205afccc10810b09a4d3f45$__5af490811561172b5780916116ea575b506116e391506118d7565b388161163a565b90506020823d602011611723575b8161170560209383610712565b81010312611720575061171a6116e391610d4d565b386116d8565b80fd5b3d91506116f8565b604051903d90823e3d90fd5b61174b91503d8085833e6114a68183610712565b3861168f565b6040513d84823e3d90fd5b61177691945060203d6020116114585761144a8183610712565b923861108c565b61179291503d806000833e6114a68183610712565b38611049565b6020969396813d6020116117d2575b816117b460209383610712565b8101031261045a575195600287101561172057509194916000610fdc565b3d91506117a7565b82546001600160a01b0316845287945060209093019260019283019201610fa5565b604051632f3335ff60e21b8152600490fd5b611827915060203d6020116114585761144a8183610712565b38610ec4565b60405163bc0f01cf60e01b815260016004820152602490fd5b61185f915060203d6020116114585761144a8183610712565b38610e79565b9061186d5750565b8047106118c55760008080809360635af13d156118c0573d61188e81610733565b9061189c6040519283610712565b8152600060203d92013e5b156118ae57565b604051633204506f60e01b8152600490fd5b6118a7565b60405163356680b760e01b8152600490fd5b604080516380875df760e01b815290918290829060049082906001600160a01b03165afa91821561198057600092611926575b50506001905161191981610e1a565b61192281610e1a565b1490565b8082813d8311611979575b61193b8183610712565b8101031261053757519161194e836106ab565b815190600282101561172057506020839261196d926001955201610d4d565b6020820152903861190a565b503d611931565b513d6000823e3d90fd5b9060016001600160401b038093160191821161140857565b60138114611a1057601354906001600160401b0382116106c6576119c68282610a02565b6000908152602081206000805160206121cf83398151915280545b8484106119ef575050505050565b600191820180546001600160a01b03909216848601559390910192906119e1565b50565b8054821015611a2f57600052600c602060002091020190600090565b634e487b7160e01b600052603260045260246000fd5b8054600160401b8110156106c657611a64906001928382018155611a13565b919091611ec15782519060038210156105485760ff199160ff83855416911617835580830160209182860151948551926001600160401b039586855116916001600160401b0319928382541617905585600284019501518051908882116106c6578790611ad18389610a02565b01600096875287872086885b848110611ea657505050505085600384019801519760ff895116828254161790558560048401980151978851888111611dd857611b1a8254610853565b99601f9a8b8111611e7a575b5088908b8311600114611e1b57611b559291899183611c87575b50508160011b916000199060031b1c19161790565b90555b6005830160408a01519081519089825116858254161790558760068601910151908151918a8311611e07578990611b8f8484610a02565b0190885288882087895b848110611dec57505050505086600785019101519160ff835116908254161790558560088401910151805190888211611dd857611bd68354610853565b8a8111611dac575b5087908a8311600114611d405782600b959360a0979593611c14938b92611c875750508160011b916000199060031b1c19161790565b90555b60098201908860608c015116908254161790556080890151600a82015501960151928351948511611d2c57611c4c8754610853565b868111611cf6575b5080958511600114611c92575050928291611c839492611c875750508160011b916000199060031b1c19161790565b9055565b015190503880611b40565b8683528083209195919391928591601f19831691905b88838310611cdc5750505010611cc3575b505050811b019055565b015160001960f88460031b161c19169055388080611cb9565b858701518855909601959485019487935090810190611ca8565b611d1d908885528285208880890160051c820192858a10611d23575b0160051c01906109eb565b38611c54565b92508192611d12565b634e487b7160e01b83526041600452602483fd5b8388528888208793929091601f1984168a5b8c828210611d9657505091600b979593918560a09a98969410611d7d575b505050811b019055611c17565b015160001960f88460031b161c19169055388080611d70565b8385015186558b97909501949384019301611d52565b611dd2908489528989208c80860160051c8201928c8710611d23570160051c01906109eb565b38611bde565b634e487b7160e01b87526041600452602487fd5b83516001600160a01b031683820155928b0192899101611b99565b634e487b7160e01b89526041600452602489fd5b8389528989208893929091601f1984168b5b8d828210611e645750508411611e4b575b505050811b019055611b58565b015160001960f88460031b161c19169055388080611e3e565b8385015186558c97909501949384019301611e2d565b611ea090848a528a8a208d80860160051c8201928d8710611d23570160051c01906109eb565b38611b26565b83516001600160a01b031683820155928a0192889101611add565b634e487b7160e01b600052600060045260246000fd5b8051821015611a2f5760209160051b010190565b6001908154906001600160401b039082156121b85782824316048481018091116114085783810293818504149015171561140857600380549383611f3681871680606087015261198a565b166001600160401b03198096161782556000938185526020916023835260408620906002820180541561217b5750508301958654845460c01c1460001461216a57865492611f8384610c00565b95611f916040519788610712565b848752601f19611fa086610c00565b0182895b8281106121545750505060405198611fbb8a6106dc565b611fc361074e565b8a52828a019543875260408b019889528b8a5b828110612120575050437f4ecfe3c1ed32ef0a63d3801d51eb20214db90b14dc5fd1ca58a9de54f16f46a68b80a2898255806120d1575b509061201891611a45565b83518752602381526040872097519183835116908954161788558089890192015180519384116120bd57819061205185859b9a9b610a02565b019188528088209089895b8581106120a257505050505050516002840155815151939201915b838110612085575050505050565b8061209c61209587938551611ed7565b5185611a45565b01612077565b84516001600160a01b031684820155938201938b910161205c565b634e487b7160e01b88526041600452602488fd5b600c9080600c0290600c82040361210c57828b52848b20908101905b8181106120fb57505061200d565b806121068492610ac4565b016120ed565b634e487b7160e01b8b52601160045260248bfd5b61214b818c61213b6121328389611a13565b50915191610978565b6121458383611ed7565b52611ed7565b50018c90611fd6565b61215c610b36565b82828c010152018390611fa4565b505050509190506108cf9250611a45565b93509395509395966108cf976012860361219a575b5050505501611a45565b6121b092601254169086541617855584016119a2565b388080612190565b634e487b7160e01b600052601260045260246000fdfe66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a090a2646970667358221220bfc44c6639462b14bf17a0018cefa617cb5c6d7874b0eb8d4dec578df71847f464736f6c63430008170033";
const isSuperArgs = (xs) => {
    return (typeof xs[0] === "string" ||
        Array.isArray(xs[0]) ||
        "_isInterface" in xs[0]);
};
class GatewayMessengerFacet__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            const [linkLibraryAddresses, signer] = args;
            super(_abi, GatewayMessengerFacet__factory.linkBytecode(linkLibraryAddresses), signer);
        }
    }
    static linkBytecode(linkLibraryAddresses) {
        let linkedBytecode = _bytecode;
        linkedBytecode = linkedBytecode.replace(new RegExp("__\\$a0fe38a9a81205afccc10810b09a4d3f45\\$__", "g"), linkLibraryAddresses["src/lib/SubnetIDHelper.sol:SubnetIDHelper"]
            .replace(/^0x/, "")
            .toLowerCase());
        linkedBytecode = linkedBytecode.replace(new RegExp("__\\$33b79814e84bf6cf5e47244090b19ce5f8\\$__", "g"), linkLibraryAddresses["src/lib/CrossMsgHelper.sol:CrossMsgHelper"]
            .replace(/^0x/, "")
            .toLowerCase());
        return linkedBytecode;
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    connect(runner) {
        return super.connect(runner);
    }
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.GatewayMessengerFacet__factory = GatewayMessengerFacet__factory;
GatewayMessengerFacet__factory.bytecode = _bytecode;
GatewayMessengerFacet__factory.abi = _abi;
//# sourceMappingURL=GatewayMessengerFacet__factory.js.map