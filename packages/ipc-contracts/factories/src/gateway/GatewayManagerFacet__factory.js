"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GatewayManagerFacet__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "target",
                type: "address",
            },
        ],
        name: "AddressEmptyCode",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "AddressInsufficientBalance",
        type: "error",
    },
    {
        inputs: [],
        name: "AlreadyRegisteredSubnet",
        type: "error",
    },
    {
        inputs: [],
        name: "CallFailed",
        type: "error",
    },
    {
        inputs: [],
        name: "CannotReleaseZero",
        type: "error",
    },
    {
        inputs: [],
        name: "FailedInnerCall",
        type: "error",
    },
    {
        inputs: [],
        name: "InsufficientFunds",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidActorAddress",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "enum InvalidXnetMessageReason",
                name: "reason",
                type: "uint8",
            },
        ],
        name: "InvalidXnetMessage",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "string",
                name: "reason",
                type: "string",
            },
        ],
        name: "MethodNotAllowed",
        type: "error",
    },
    {
        inputs: [],
        name: "NoBalanceIncrease",
        type: "error",
    },
    {
        inputs: [],
        name: "NotEmptySubnetCircSupply",
        type: "error",
    },
    {
        inputs: [],
        name: "NotEnoughFunds",
        type: "error",
    },
    {
        inputs: [],
        name: "NotEnoughFundsToRelease",
        type: "error",
    },
    {
        inputs: [],
        name: "NotRegisteredSubnet",
        type: "error",
    },
    {
        inputs: [],
        name: "ReentrancyError",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "token",
                type: "address",
            },
        ],
        name: "SafeERC20FailedOperation",
        type: "error",
    },
    {
        inputs: [],
        name: "UnexpectedSupplySource",
        type: "error",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint256",
                name: "epoch",
                type: "uint256",
            },
        ],
        name: "NewBottomUpMsgBatch",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "subnet",
                type: "address",
            },
            {
                components: [
                    {
                        internalType: "enum IpcMsgKind",
                        name: "kind",
                        type: "uint8",
                    },
                    {
                        components: [
                            {
                                components: [
                                    {
                                        internalType: "uint64",
                                        name: "root",
                                        type: "uint64",
                                    },
                                    {
                                        internalType: "address[]",
                                        name: "route",
                                        type: "address[]",
                                    },
                                ],
                                internalType: "struct SubnetID",
                                name: "subnetId",
                                type: "tuple",
                            },
                            {
                                components: [
                                    {
                                        internalType: "uint8",
                                        name: "addrType",
                                        type: "uint8",
                                    },
                                    {
                                        internalType: "bytes",
                                        name: "payload",
                                        type: "bytes",
                                    },
                                ],
                                internalType: "struct FvmAddress",
                                name: "rawAddress",
                                type: "tuple",
                            },
                        ],
                        internalType: "struct IPCAddress",
                        name: "to",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                components: [
                                    {
                                        internalType: "uint64",
                                        name: "root",
                                        type: "uint64",
                                    },
                                    {
                                        internalType: "address[]",
                                        name: "route",
                                        type: "address[]",
                                    },
                                ],
                                internalType: "struct SubnetID",
                                name: "subnetId",
                                type: "tuple",
                            },
                            {
                                components: [
                                    {
                                        internalType: "uint8",
                                        name: "addrType",
                                        type: "uint8",
                                    },
                                    {
                                        internalType: "bytes",
                                        name: "payload",
                                        type: "bytes",
                                    },
                                ],
                                internalType: "struct FvmAddress",
                                name: "rawAddress",
                                type: "tuple",
                            },
                        ],
                        internalType: "struct IPCAddress",
                        name: "from",
                        type: "tuple",
                    },
                    {
                        internalType: "uint64",
                        name: "nonce",
                        type: "uint64",
                    },
                    {
                        internalType: "uint256",
                        name: "value",
                        type: "uint256",
                    },
                    {
                        internalType: "bytes",
                        name: "message",
                        type: "bytes",
                    },
                ],
                indexed: false,
                internalType: "struct IpcEnvelope",
                name: "message",
                type: "tuple",
            },
        ],
        name: "NewTopDownMessage",
        type: "event",
    },
    {
        inputs: [],
        name: "addStake",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "uint64",
                        name: "root",
                        type: "uint64",
                    },
                    {
                        internalType: "address[]",
                        name: "route",
                        type: "address[]",
                    },
                ],
                internalType: "struct SubnetID",
                name: "subnetId",
                type: "tuple",
            },
            {
                components: [
                    {
                        internalType: "uint8",
                        name: "addrType",
                        type: "uint8",
                    },
                    {
                        internalType: "bytes",
                        name: "payload",
                        type: "bytes",
                    },
                ],
                internalType: "struct FvmAddress",
                name: "to",
                type: "tuple",
            },
        ],
        name: "fund",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "uint64",
                        name: "root",
                        type: "uint64",
                    },
                    {
                        internalType: "address[]",
                        name: "route",
                        type: "address[]",
                    },
                ],
                internalType: "struct SubnetID",
                name: "subnetId",
                type: "tuple",
            },
            {
                components: [
                    {
                        internalType: "uint8",
                        name: "addrType",
                        type: "uint8",
                    },
                    {
                        internalType: "bytes",
                        name: "payload",
                        type: "bytes",
                    },
                ],
                internalType: "struct FvmAddress",
                name: "to",
                type: "tuple",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "fundWithToken",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "kill",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "genesisCircSupply",
                type: "uint256",
            },
        ],
        name: "register",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "uint8",
                        name: "addrType",
                        type: "uint8",
                    },
                    {
                        internalType: "bytes",
                        name: "payload",
                        type: "bytes",
                    },
                ],
                internalType: "struct FvmAddress",
                name: "to",
                type: "tuple",
            },
        ],
        name: "release",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "releaseStake",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x60808060405234610016576128e4908161001c8239f35b600080fdfe60806040908082526004918236101561001757600080fd5b600091823560e01c9081630517e1aa14610a4a5750806318f44b701461080d57806341c0e1b51461069657806345f544851461052f5780635a627dbc146104df5780636b2c1eef1461034f5763f207564e1461007257600080fd5b6020908160031936011261022057833591601354926001936001810180911161033c5760ff6006541611156102af5780341061029f576100f1956100b682346113d5565b916100bf61125f565b928773__$a0fe38a9a81205afccc10810b09a4d3f45$__948751809b819263aa5106cb60e01b8352339088840161144f565b0381875af4988915610295578899610271575b5061010e896114a7565b919061026157838201976001600160401b0398898c51166001600160401b031982541617905560058301878c0151908151918b831161024e57899061015384846113a1565b01908c52888c208c5b8381106102345750505091835550504360018201556002015583516390ba52cf60e01b8152908101839052949593949382918591829081906101a2906024830190610e20565b03915af491821561022b575084916101f7575b506101c091506127c5565b50600354906101de6001600160401b0360801b918360801c16611477565b60801b16906001600160401b0360801b19161760035580f35b905081813d8311610224575b61020d8183610d04565b81010312610220576101c09051386101b5565b8280fd5b503d610203565b513d86823e3d90fd5b82516001600160a01b031682820155918a0191840161015c565b634e487b7160e01b8d526041885260248dfd5b8651631b538cdf60e11b81528490fd5b61028e9199503d808a833e6102868183610d04565b81019061142a565b9738610104565b86513d8a823e3d90fd5b8251631036b5ad60e31b81528690fd5b5084828593519060608201948286106001600160401b0387111761032957506103259293948152602382527f5375626e657420646f6573206e6f7420616c6c6f77206368696c64207375626e858301526265747360e81b818301525193849363015538b160e01b85528401526024830190611405565b0390fd5b634e487b7160e01b815260418452602490fd5b634e487b7160e01b865260118752602486fd5b508290600319602036820181136104db5783356001600160401b03928382116104d757848183360301126104d75734156104c057928692918551948593630c30422f60e11b855260808986015260c48501936012541660848601528760a486015260135480945260e48501936013875260008051602061288f8339815191529187905b828210610499575050336024870152505083830301604484015282916103f9918801611130565b346064830152038173__$33b79814e84bf6cf5e47244090b19ce5f8$__5af490811561048f579061043191859161046d575b506122d6565b34471061046057828080803460635af1610449611b46565b5015610453578280f35b51633204506f60e01b8152fd5b5163356680b760e01b8152fd5b61048991503d8087833e6104818183610d04565b81019061107a565b8561042b565b82513d86823e3d90fd5b83546001600160a01b031687528c98508997509586019560019384019391909101906103d2565b845163bc0f01cf60e01b8152600381880152602490fd5b8680fd5b8480fd5b508282600319360112610220573415610521576104fb33611aac565b92901561051457505061050f3482546113f8565b905580f35b51630e991abd60e41b8152fd5b9051631036b5ad60e31b8152fd5b503461069257602092836003193601126102205780357f691bb03ffc16c56fc96b82fd16cd1b3715f0bc3cdc6407005f49bb6205860095926001845414610683576001845581156106745761058333611aac565b96901561066457865483811061065457816105ad86899a6105a58885966113d5565b8155016112e7565b956105cf85519788938493632cff562160e11b85528401526024830190610e20565b038173__$a0fe38a9a81205afccc10810b09a4d3f45$__5af491821561064b5750859161060f575b5061060b92506001600160a01b0316611b76565b5580f35b905082813d8311610644575b6106258183610d04565b8101031261063f5761063961060b92610e0c565b386105f7565b505050fd5b503d61061b565b513d87823e3d90fd5b82516379b33e7960e01b81528590fd5b8151630e991abd60e41b81528490fd5b5163c79cad7b60e01b81529050fd5b516329f745a760e01b81529050fd5b5080fd5b50346106925781600319360112610692576106b033611aac565b9190156107fe5760028201546107ef576106cd84835493016112e7565b906106f48151926390ba52cf60e01b845283806020938493848b8401526024830190610e20565b038173__$a0fe38a9a81205afccc10810b09a4d3f45$__5af49283156107e55785936107b6575b506003546001600160401b03600019818360801c16019081116107a35796866107999594601f610794956005956107a09b9c6001600160401b0360801b9060801b16906001600160401b0360801b191617600355878452528120918183558160018401558160028401558160038401558201550161137b565b6126c4565b5033611b76565b80f35b634e487b7160e01b875260118852602487fd5b9080935081813d83116107de575b6107ce8183610d04565b810103126104db5751913861071b565b503d6107c4565b82513d87823e3d90fd5b51637c67c70160e11b81528390fd5b51630e991abd60e41b81528390fd5b50600319833682018313610a46578035906001600160401b0392838311610a0b5784818484019436030112610a0b57602435938411610a0b57849084360301126104db573415610a2f576108696108643684610d69565b6114a7565b5015610a215761089e84602061087f3686610d69565b825180948192632cff562160e11b835284888401526024830190610e20565b038173__$a0fe38a9a81205afccc10810b09a4d3f45$__5af48015610a1757839288916109d5575b5081516380875df760e01b815292839182906001600160a01b03165afa9081156109cb57869161099e575b5051600281101561098b5761097d579084916109258551948593849363266a83ad60e21b855234928101913391860161119b565b038173__$33b79814e84bf6cf5e47244090b19ce5f8$__5af4908115610971576107a092508391610957575b50611812565b61096b91503d8085833e6104818183610d04565b83610951565b505051903d90823e3d90fd5b83516340772cb360e11b8152fd5b634e487b7160e01b865260218252602486fd5b6109be9150853d87116109c4575b6109b68183610d04565b810190610e78565b866108f1565b503d6109ac565b85513d88823e3d90fd5b925050506020813d602011610a0f575b816109f260209383610d04565b81010312610a0b5784610a058392610e0c565b886108c6565b8580fd5b3d91506109e5565b81513d89823e3d90fd5b8351630e991abd60e41b8152fd5b602490600385519163bc0f01cf60e01b8352820152fd5b8380fd5b9190503461022057600319606036820112610a46578435906001600160401b0390818311610a0b5783818489019436030112610a0b57602435918211610a0b57839082360301126104db576044357f691bb03ffc16c56fc96b82fd16cd1b3715f0bc3cdc6407005f49bb6205860095946001865414610caa5750600185558015610c9357610adb6108643685610d69565b5015610c8357610b0f6020610af03686610d69565b865180938192632cff562160e11b8352848d8401526024830190610e20565b038173__$a0fe38a9a81205afccc10810b09a4d3f45$__5af4908115610c3b57889186918991610c45575b5081516380875df760e01b815292839182906001600160a01b03165afa908115610c3b578791610c1e575b5080516002811015610c0b57600103610bfb5791610ba6610b8988999389956115b9565b865163266a83ad60e21b815295869485948101913391860161119b565b038173__$33b79814e84bf6cf5e47244090b19ce5f8$__5af4918215610bf257509061060b918491610bd85750611812565b610bec91503d8086833e6104818183610d04565b38610951565b513d85823e3d90fd5b84516340772cb360e11b81528890fd5b634e487b7160e01b885260218952602488fd5b610c359150853d87116109c4576109b68183610d04565b38610b65565b85513d89823e3d90fd5b925050506020813d602011610c7b575b81610c6260209383610d04565b810103126104d75784610c758992610e0c565b38610b3a565b3d9150610c55565b8351630e991abd60e41b81528790fd5b835163bc0f01cf60e01b8152600381890152602490fd5b6329f745a760e01b81528790fd5b604081019081106001600160401b03821117610cd357604052565b634e487b7160e01b600052604160045260246000fd5b60c081019081106001600160401b03821117610cd357604052565b90601f801991011681019081106001600160401b03821117610cd357604052565b35906001600160401b0382168203610d3957565b600080fd5b6001600160401b038111610cd35760051b60200190565b35906001600160a01b0382168203610d3957565b9190604083820312610d395760405192610d8284610cb8565b83610d8c82610d25565b815260209182810135906001600160401b038211610d3957019280601f85011215610d39578335610dbc81610d3e565b94610dca6040519687610d04565b818652848087019260051b820101928311610d395784809101915b838310610df457505050500152565b8190610dff84610d55565b8152019101908490610de5565b51906001600160a01b0382168203610d3957565b604082016001600160401b0382511683526020606081809401519460408382015285518094520193019160005b828110610e5b575050505090565b83516001600160a01b031685529381019392810192600101610e4d565b90816040910312610d395760405190610e9082610cb8565b80516002811015610d39578252610ea990602001610e0c565b602082015290565b51906001600160401b0382168203610d3957565b9190604083820312610d395760405192610ede84610cb8565b83610ee882610eb1565b815260209182810151906001600160401b038211610d3957019280601f85011215610d39578351610f1881610d3e565b94610f266040519687610d04565b818652848087019260051b820101928311610d395784809101915b838310610f5057505050500152565b8190610f5b84610e0c565b8152019101908490610f41565b6001600160401b038111610cd357601f01601f191660200190565b60005b838110610f965750506000910152565b8181015183820152602001610f86565b81601f82011215610d39578051610fbc81610f68565b92610fca6040519485610d04565b81845260208284010111610d3957610fe89160208085019101610f83565b90565b9190604083820312610d39576040519261100484610cb8565b838151916001600160401b0392838111610d395784611024918301610ec5565b8252602081015190838211610d395701604081850312610d39576040519361104b85610cb8565b815160ff81168103610d395785526020820151938411610d39576020936110729201610fa6565b828401520152565b90602082820312610d395781516001600160401b0392838211610d3957019060c082820312610d3957604051926110b084610ce9565b82516003811015610d395784526020830151818111610d3957826110d5918501610feb565b60208501526040830151818111610d3957826110f2918501610feb565b604085015261110360608401610eb1565b60608501526080830151608085015260a0830151908111610d39576111289201610fa6565b60a082015290565b803560ff8116809103610d395782526020810135601e1982360301811215610d39570190602082359201916001600160401b038111610d39578036038313610d39578060609360406020850152816040850152848401376000828201840152601f01601f1916010190565b94939290916080865260c086016001600160401b0393846111bb82610d25565b1660808901526020906020810135601e1982360301811215610d39570191602083359301958311610d39578260051b36038613610d3957604060a08a015282905260e0880194919060005b82811061123857505050506001600160a01b03166020860152848203604086015260609161123391611130565b930152565b909192958280600192838060a01b036112508b610d55565b16815201970193929101611206565b6040519061126c82610cb8565b816001600160401b0360125416815260405180918260135492838152602080910193601360005260008051602061288f833981519152916000905b8282106112c457505050506112c0906020930384610d04565b0152565b83546001600160a01b0316875295860195879450600193840193909101906112a7565b90604051916112f583610cb8565b826001600160401b0382541681526001809201916040519283849282548083526020809301936000526020600020926000905b828210611343575050505050602092916112c0910384610d04565b84546001600160a01b03168652889650948501949383019390830190611328565b81811061136f575050565b60008155600101611364565b8054600082558061138a575050565b61139f91600052602060002090810190611364565b565b90600160401b8111610cd3578154908083558181106113bf57505050565b61139f9260005260206000209182019101611364565b919082039182116113e257565b634e487b7160e01b600052601160045260246000fd5b919082018092116113e257565b9060209161141e81518092818552858086019101610f83565b601f01601f1916010190565b90602082820312610d395781516001600160401b038111610d3957610fe89201610ec5565b90611467602091949394604084526040840190610e20565b6001600160a01b03909416910152565b9060016001600160401b03809316019182116113e257565b90816020910312610d3957518015158103610d395790565b6114e573__$a0fe38a9a81205afccc10810b09a4d3f45$__91604051906390ba52cf60e01b8252818060209485938460048401526024830190610e20565b0381865af49081156115805760009161158c575b50600052601f815261153a81604060002093611517600486016112e7565b906040518080958194630c133d1360e31b83528660048401526024830190610e20565b03915af491821561158057600092611553575b50501591565b6115729250803d10611579575b61156a8183610d04565b81019061148f565b388061154d565b503d611560565b6040513d6000823e3d90fd5b90508181813d83116115b2575b6115a38183610d04565b81010312610d395751386114f9565b503d611599565b8051600281101561176f576001146115cf575090565b602090810151604080516370a0823160e01b8082523060048301529195949093926001600160a01b031691908385602481865afa94851561176457600095611735575b508651848101916323b872dd60e01b835233602483015230604483015260648201526064815260a081018181106001600160401b03821117610cd35788525161166d91600091829182875af1611666611b46565b908461282b565b80519084821515928361171c575b505050611704578290602487518094819382523060048301525afa9182156116f9576000926116cb575b5050818111156116ba57610fe89293506113d5565b83516304b1353560e21b8152600490fd5b90809250813d83116116f2575b6116e28183610d04565b81010312610d39575138806116a5565b503d6116d8565b85513d6000823e3d90fd5b8551635274afe760e01b815260048101839052602490fd5b61172c935082018101910161148f565b1538848161167b565b9094508381813d831161175d575b61174d8183610d04565b81010312610d3957519338611612565b503d611743565b87513d6000823e3d90fd5b634e487b7160e01b600052602160045260246000fd5b91908251906040815260808101936001600160401b038351166040830152602080930151946040606084015285518091528360a0840196019060005b8181106117f55750505093604083819381610fe897980151908281860391015260ff81511684520151938201520190611405565b82516001600160a01b0316885296850196918501916001016117c1565b6020808201918251519073__$a0fe38a9a81205afccc10810b09a4d3f45$__9160409461185586519263089032d560e01b84528760048501526044840190610e20565b9060031983830301602484015286820160606001600160401b039384601254168152898982015260135480935201908460009283926013845260008051602061288f83398151915290845b8c828210611a89575050505081900381895af4938415611a7d578194611a61575b506118cb846114a7565b949015611a5057908785949392600361194198970198895499868b169a876118f98d60608d019e8f52611477565b16906001600160401b031916179055608088019661191e6002895192019182546113f8565b90558b5180809a81946304e384ff60e21b83528660048401526024830190610e20565b03915af4958615611a44578196611a0d575b5088519780895285519160038310156119f9575093889794936119cb6119b38c60c060a0976119f49b977ffdd39ce2560484814971f663392e78ae37dc62ba184b3370d830371dd271a8b79f9d9a8e015251918c015260e08b0190611785565b9b8401519b601f199c8d8b83030160608c0152611785565b95511660808801525182870152015184830390970160c08501526001600160a01b031695611405565b0390a2565b634e487b7160e01b81526021600452602490fd5b9095508781813d8311611a3d575b611a258183610d04565b81010312610a0b57611a3690610e0c565b9438611953565b503d611a1b565b508851903d90823e3d90fd5b8851630e991abd60e41b8152600490fd5b611a769194503d8086833e6102868183610d04565b92386118c1565b508751903d90823e3d90fd5b83546001600160a01b031685528796508a955090930192600192830192016118a0565b6001600160a01b03811615611b34576000611ae491611ac961125f565b60405163aa5106cb60e01b815293849283926004840161144f565b038173__$a0fe38a9a81205afccc10810b09a4d3f45$__5af4801561158057611b1591600091611b19575b506114a7565b9091565b611b2e91503d806000833e6102868183610d04565b38611b0f565b6040516370e4510960e01b8152600490fd5b3d15611b71573d90611b5782610f68565b91611b656040519384610d04565b82523d6000602084013e565b606090565b814710611bb3576000918291829182916001600160a01b03165af1611b99611b46565b5015611ba157565b604051633204506f60e01b8152600490fd5b60405163356680b760e01b8152600490fd5b60138114611c3357601354906001600160401b038211610cd357611be982826113a1565b60009081526020812060008051602061288f83398151915280545b848410611c12575050505050565b600191820180546001600160a01b0390921684860155939091019290611c04565b50565b8054821015611c5257600052600c602060002091020190600090565b634e487b7160e01b600052603260045260246000fd5b90600182811c92168015611c98575b6020831014611c8257565b634e487b7160e01b600052602260045260246000fd5b91607f1691611c77565b8054600160401b811015610cd357611cc1906001928382018155611c36565b91909161211e57825190600382101561176f5760ff199160ff83855416911617835580830160209182860151948551926001600160401b039586855116916001600160401b031992838254161790558560028401950151805190888211610cd3578790611d2e83896113a1565b01600096875287872086885b84811061210357505050505085600384019801519760ff89511682825416179055856004840198015197885188811161203557611d778254611c68565b99601f9a8b81116120d7575b5088908b831160011461207857611db29291899183611ee4575b50508160011b916000199060031b1c19161790565b90555b6005830160408a01519081519089825116858254161790558760068601910151908151918a8311612064578990611dec84846113a1565b0190885288882087895b84811061204957505050505086600785019101519160ff83511690825416179055856008840191015180519088821161203557611e338354611c68565b8a8111612009575b5087908a8311600114611f9d5782600b959360a0979593611e71938b92611ee45750508160011b916000199060031b1c19161790565b90555b60098201908860608c015116908254161790556080890151600a82015501960151928351948511611f8957611ea98754611c68565b868111611f53575b5080958511600114611eef575050928291611ee09492611ee45750508160011b916000199060031b1c19161790565b9055565b015190503880611d9d565b8683528083209195919391928591601f19831691905b88838310611f395750505010611f20575b505050811b019055565b015160001960f88460031b161c19169055388080611f16565b858701518855909601959485019487935090810190611f05565b611f7a908885528285208880890160051c820192858a10611f80575b0160051c0190611364565b38611eb1565b92508192611f6f565b634e487b7160e01b83526041600452602483fd5b8388528888208793929091601f1984168a5b8c828210611ff357505091600b979593918560a09a98969410611fda575b505050811b019055611e74565b015160001960f88460031b161c19169055388080611fcd565b8385015186558b97909501949384019301611faf565b61202f908489528989208c80860160051c8201928c8710611f80570160051c0190611364565b38611e3b565b634e487b7160e01b87526041600452602487fd5b83516001600160a01b031683820155928b0192899101611df6565b634e487b7160e01b89526041600452602489fd5b8389528989208893929091601f1984168b5b8d8282106120c157505084116120a8575b505050811b019055611db5565b015160001960f88460031b161c1916905538808061209b565b8385015186558c9790950194938401930161208a565b6120fd90848a528a8a208d80860160051c8201928d8710611f80570160051c0190611364565b38611d83565b83516001600160a01b031683820155928a0192889101611d3a565b634e487b7160e01b600052600060045260246000fd5b6040519061214182610cb8565b6060602083600081520152565b6040519061215b82610cb8565b81612164612134565b81526020612170612134565b910152565b8051821015611c525760209160051b010190565b9060405191826000825461219c81611c68565b9081845260209460019160018116908160001461220a57506001146121cb575b50505061139f92500383610d04565b600090815285812095935091905b8183106121f257505061139f93508201013880806121bc565b855488840185015294850194879450918301916121d9565b9250505061139f94925060ff191682840152151560051b8201013880806121bc565b906040519161223a83610cb8565b602083612246836112e7565b815261107260036040519461225a86610cb8565b60ff600282015416865201612189565b6122748154611c68565b908161227e575050565b81601f60009311600114612290575055565b9080839182526122af601f60208420940160051c840160018501611364565b5555565b600361139f91600081556122c96001820161137b565b600060028201550161226a565b600154906001600160401b03908215612677578282431604600181018091116113e2578381029381850414901517156113e257600354928261231f818616806060860152611477565b166001600160401b03198095161760035560009281845260209460238652604092838620906002820180541561263857505060030195865460035460c01c146000146126295786549361237185610d3e565b9561237e82519788610d04565b858752601f1961238d87610d3e565b0183895b8281106125e25750505081519860608a018a8110878211176125ce5783526123b761125f565b8a52838a0196438852838b01988952895b8181106125265750437f4ecfe3c1ed32ef0a63d3801d51eb20214db90b14dc5fd1ca58a9de54f16f46a68b80a2898255806124ad575b509061240991611ca2565b8451875260238252862096519183835116908854161787558060018801920151805193841161203557819061244185859a999a6113a1565b0191875280872090875b8481106124925750505050505160028301556003815151939201915b8381106124745750505050565b8061248c6124856001938551612175565b5185611ca2565b01612467565b83516001600160a01b0316838201559281019260010161244b565b600c9080600c0290600c82040361251257828b52858b20908101905b8181106124d75750506123fe565b808c8492556124e8600182016122b3565b6124f4600582016122b3565b8c60098201558c600a82015561250c600b820161226a565b016124c9565b634e487b7160e01b8b52601160045260248bfd5b6125308184611c36565b508a519086519061254082610ce9565b60ff81541660038110156125ba57928261259e600b8796948f8e60019a976125b3995261256e8b840161222c565b908601528d61257f6005840161222c565b908601526009820154166060850152600a810154608085015201612189565b60a08201526125ad8383612175565b52612175565b50016123c8565b634e487b7160e01b8f52602160045260248ffd5b634e487b7160e01b8a52604160045260248afd5b84516125ed81610ce9565b8b81526125f861214e565b8382015261260461214e565b868201528b60608201528b6080820152606060a082015282828c010152018490612391565b50505050905061139f91611ca2565b929194509261139f9750600395965060128503612659575b50505501611ca2565b601254169084541617835561267060018401611bc5565b3880612650565b634e487b7160e01b600052601260045260246000fd5b602454811015611c525760246000527f7cd332d19b93bcabe3cce7ca0c18a052f57e5fd03b4758a09f30f5ddc4b22ec40190600090565b60008181526025602052604081205490919080156127c057600019908082018181116127ac57602454908382019182116127985781810361274d575b5050506024548015612739578101906127188261268d565b909182549160031b1b19169055602455815260256020526040812055600190565b634e487b7160e01b84526031600452602484fd5b61278261275c61276b9361268d565b90549060031b1c92839261268d565b819391549060031b91821b91600019901b19161790565b9055845260256020526040842055388080612700565b634e487b7160e01b86526011600452602486fd5b634e487b7160e01b85526011600452602485fd5b505090565b60008181526025602052604081205461282657602454600160401b8110156128125790826127fe61276b8460016040960160245561268d565b905560245492815260256020522055600190565b634e487b7160e01b82526041600452602482fd5b905090565b90612852575080511561284057805190602001fd5b604051630a12f52160e11b8152600490fd5b81511580612885575b612863575090565b604051639996b31560e01b81526001600160a01b039091166004820152602490fd5b50803b1561285b56fe66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a090a2646970667358221220bed73aa876b51486a140102482fa8eafe625382476454ccf6e217b34955612c264736f6c63430008170033";
const isSuperArgs = (xs) => {
    return (typeof xs[0] === "string" ||
        Array.isArray(xs[0]) ||
        "_isInterface" in xs[0]);
};
class GatewayManagerFacet__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            const [linkLibraryAddresses, signer] = args;
            super(_abi, GatewayManagerFacet__factory.linkBytecode(linkLibraryAddresses), signer);
        }
    }
    static linkBytecode(linkLibraryAddresses) {
        let linkedBytecode = _bytecode;
        linkedBytecode = linkedBytecode.replace(new RegExp("__\\$a0fe38a9a81205afccc10810b09a4d3f45\\$__", "g"), linkLibraryAddresses["src/lib/SubnetIDHelper.sol:SubnetIDHelper"]
            .replace(/^0x/, "")
            .toLowerCase());
        linkedBytecode = linkedBytecode.replace(new RegExp("__\\$33b79814e84bf6cf5e47244090b19ce5f8\\$__", "g"), linkLibraryAddresses["src/lib/CrossMsgHelper.sol:CrossMsgHelper"]
            .replace(/^0x/, "")
            .toLowerCase());
        return linkedBytecode;
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    connect(runner) {
        return super.connect(runner);
    }
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.GatewayManagerFacet__factory = GatewayManagerFacet__factory;
GatewayManagerFacet__factory.bytecode = _bytecode;
GatewayManagerFacet__factory.abi = _abi;
//# sourceMappingURL=GatewayManagerFacet__factory.js.map