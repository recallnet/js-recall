"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GatewayDiamond__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "facetAddress",
                        type: "address",
                    },
                    {
                        internalType: "enum IDiamond.FacetCutAction",
                        name: "action",
                        type: "uint8",
                    },
                    {
                        internalType: "bytes4[]",
                        name: "functionSelectors",
                        type: "bytes4[]",
                    },
                ],
                internalType: "struct IDiamond.FacetCut[]",
                name: "_diamondCut",
                type: "tuple[]",
            },
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "bottomUpCheckPeriod",
                        type: "uint256",
                    },
                    {
                        internalType: "uint16",
                        name: "activeValidatorsLimit",
                        type: "uint16",
                    },
                    {
                        internalType: "uint8",
                        name: "majorityPercentage",
                        type: "uint8",
                    },
                    {
                        components: [
                            {
                                internalType: "uint64",
                                name: "root",
                                type: "uint64",
                            },
                            {
                                internalType: "address[]",
                                name: "route",
                                type: "address[]",
                            },
                        ],
                        internalType: "struct SubnetID",
                        name: "networkName",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                internalType: "uint256",
                                name: "weight",
                                type: "uint256",
                            },
                            {
                                internalType: "address",
                                name: "addr",
                                type: "address",
                            },
                            {
                                internalType: "bytes",
                                name: "metadata",
                                type: "bytes",
                            },
                        ],
                        internalType: "struct Validator[]",
                        name: "genesisValidators",
                        type: "tuple[]",
                    },
                    {
                        internalType: "bytes32",
                        name: "commitSha",
                        type: "bytes32",
                    },
                ],
                internalType: "struct GatewayDiamond.ConstructorParams",
                name: "params",
                type: "tuple",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [
            {
                internalType: "bytes4",
                name: "_selector",
                type: "bytes4",
            },
        ],
        name: "CannotAddFunctionToDiamondThatAlreadyExists",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "bytes4[]",
                name: "_selectors",
                type: "bytes4[]",
            },
        ],
        name: "CannotAddSelectorsToZeroAddress",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "bytes4",
                name: "_selector",
                type: "bytes4",
            },
        ],
        name: "CannotRemoveFunctionThatDoesNotExist",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "bytes4",
                name: "_selector",
                type: "bytes4",
            },
        ],
        name: "CannotRemoveImmutableFunction",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "bytes4",
                name: "_selector",
                type: "bytes4",
            },
        ],
        name: "CannotReplaceFunctionThatDoesNotExists",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "bytes4",
                name: "_selector",
                type: "bytes4",
            },
        ],
        name: "CannotReplaceFunctionWithTheSameFunctionFromTheSameFacet",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "bytes4[]",
                name: "_selectors",
                type: "bytes4[]",
            },
        ],
        name: "CannotReplaceFunctionsFromFacetWithZeroAddress",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "bytes4",
                name: "_selector",
                type: "bytes4",
            },
        ],
        name: "CannotReplaceImmutableFunction",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "bytes4",
                name: "_functionSelector",
                type: "bytes4",
            },
        ],
        name: "FunctionNotFound",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "enum IDiamond.FacetCutAction",
                name: "_action",
                type: "uint8",
            },
        ],
        name: "IncorrectFacetCutAction",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_initializationContractAddress",
                type: "address",
            },
            {
                internalType: "bytes",
                name: "_calldata",
                type: "bytes",
            },
        ],
        name: "InitializationFunctionReverted",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidMajorityPercentage",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidSubmissionPeriod",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_contractAddress",
                type: "address",
            },
            {
                internalType: "string",
                name: "_message",
                type: "string",
            },
        ],
        name: "NoBytecodeAtAddress",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_facetAddress",
                type: "address",
            },
        ],
        name: "NoSelectorsProvidedForFacetForCut",
        type: "error",
    },
    {
        inputs: [],
        name: "OldConfigurationNumber",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_facetAddress",
                type: "address",
            },
        ],
        name: "RemoveFacetAddressMustBeZeroAddress",
        type: "error",
    },
    {
        anonymous: false,
        inputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "facetAddress",
                        type: "address",
                    },
                    {
                        internalType: "enum IDiamond.FacetCutAction",
                        name: "action",
                        type: "uint8",
                    },
                    {
                        internalType: "bytes4[]",
                        name: "functionSelectors",
                        type: "bytes4[]",
                    },
                ],
                indexed: false,
                internalType: "struct IDiamond.FacetCut[]",
                name: "_diamondCut",
                type: "tuple[]",
            },
            {
                indexed: false,
                internalType: "address",
                name: "_init",
                type: "address",
            },
            {
                indexed: false,
                internalType: "bytes",
                name: "_calldata",
                type: "bytes",
            },
        ],
        name: "DiamondCut",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                components: [
                    {
                        components: [
                            {
                                internalType: "uint256",
                                name: "weight",
                                type: "uint256",
                            },
                            {
                                internalType: "address",
                                name: "addr",
                                type: "address",
                            },
                            {
                                internalType: "bytes",
                                name: "metadata",
                                type: "bytes",
                            },
                        ],
                        internalType: "struct Validator[]",
                        name: "validators",
                        type: "tuple[]",
                    },
                    {
                        internalType: "uint64",
                        name: "configurationNumber",
                        type: "uint64",
                    },
                ],
                indexed: false,
                internalType: "struct Membership",
                name: "",
                type: "tuple",
            },
        ],
        name: "MembershipUpdated",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "oldOwner",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "OwnershipTransferred",
        type: "event",
    },
    {
        stateMutability: "payable",
        type: "fallback",
    },
    {
        stateMutability: "payable",
        type: "receive",
    },
];
const _bytecode = "0x60806040523462000daf5762001b6d80380380916200002082608062000f32565b6080396040811262000daf576080516001600160401b03811162000daf5760808201609f8201121562000daf5780608001516200005d8162000f56565b906200006d604051928362000f32565b8082526020820180938560800160208460051b8360800101011162000daf5760a08101915b60a0600585901b830101831062000de757505060a051939150506001600160401b03831162000daf5760c08385031262000daf576040519260c084016001600160401b03811185821017620005ce576040526080810151845260a081015161ffff8116810362000daf57602085015260c08101519460ff8616860362000daf576040850195865260e08201516001600160401b03811162000daf57826080010160408183608001031262000daf57604051906200014f8262000f16565b80516001600160401b038116810362000daf5782526020810151906001600160401b03821162000daf5783608001601f83830101121562000daf5781810151906200019a8262000f56565b92620001aa604051948562000f32565b82845260208401918660800160208560051b84840101011162000daf5780820160200192915b60208560051b8284010101841062000dc9575050505050602082015260608601526101008201516001600160401b03811162000daf5760808201609f84830101121562000daf5780836080010151620002298162000f56565b9262000239604051948562000f32565b81845260208401926080820160a0878301600586901b01011162000daf5760a086820101935b60a0878301600586901b0101851062000cc95750505050506080850152610120015160a084015282511562000cb75760ff8451166033811090811562000cab575b5062000c99577f806e0cbb9fce296bbc336a48f42bf1dbc69722d18d90d6fe705b7582c2bb4bd58054336001600160a01b031982168117909255604080516001600160a01b03909216825260208201929092527f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a16040516001600160401b036020820190811190821117620005ce576020810160405260008152825160005b8181106200063e5750506040519260608401906060855251809152608084019060808160051b86010193916000905b828210620005e45788887f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb6738980620003b98b8b6000602085015283820360408501526200103a565b0390a17f806e0cbb9fce296bbc336a48f42bf1dbc69722d18d90d6fe705b7582c2bb4bd460209081527f7dfd48dd9def002fa9b4a05bd6b726a6c313c362d3f3e8413d7a7520f0090d25805460ff1990811660019081179092557f4d7f4c8a2fb5b35ca3c277c93888b47f0f2229bdcccf66504d1ba48e88b8816480548216831790556348e2b09360e01b6000527f59ba4db4a213e8161de597b8c10db0e7e7ba5ace5c268e36379e249a6d2d42c980548216831790556006805462ffffff191661010217905560608401518051601280546001600160401b0319166001600160401b039283161790559301518051929591939192918211620005ce57680100000000000000008211620005ce5760209060135483601355808410620005ad575b50016013600052602060002060005b8381106200059057620005806080888a8960ff8a845184555116906004541617600455600c5560a0810151600555600560c11b60018060c01b036003541617600355602081015162ffff006014549160081b169062ffff0019161760145568010000000000000001600180841b0319601d541617601d55015160405190620005718262000f16565b815260006020820152620013b0565b6040516101339081620019fa8239f35b82516001600160a01b0316818301556020909201918701620004e9565b620005c79060136000528484600020918201910162000fa8565b87620004da565b634e487b7160e01b600052604160045260246000fd5b909192946020806200062f600193607f198b8203018652606060408b51878060a01b0381511684526200061e868201518786019062000fec565b015191816040820152019062000ffa565b97019201920190929162000371565b60406200064c828762000fc1565b5101516001600160a01b0362000663838862000fc1565b5151169080511562000c805760206200067d848962000fc1565b510151600381101562000c6a5780620008a7575081156200087c5761ffff60008051602062001b2d8339815191525416620006fa604051620006bf8162000efa565b602181527f6469616d6f6e644375743a2041646420666163657420686173206e6f20636f646020820152606560f81b60408201528462001976565b8151916000915b838310620007195750505050506001905b0162000342565b6001600160e01b03196200072e848462000fc1565b5116600081815260008051602062001b4d83398151915260205260409020549091906001600160a01b03166200086357620007d1604051620007708162000f16565b87815261ffff929092166020808401828152600086815260008051602062001b4d83398151915290925260409091209351845491516001600160b01b03199092166001600160a01b03919091161760a09190911b61ffff60a01b1617909255565b60008051602062001b2d833981519152549168010000000000000000831015620005ce5762000838906200081b60019485810160008051602062001b2d833981519152556200188a565b90919063ffffffff83549160031b9260e01c831b921b1916179055565b61ffff81146200084d57810192019162000701565b634e487b7160e01b600052601160045260246000fd5b60405163ebbf5d0760e01b815260048101839052602490fd5b6040516302b8da0760e21b815260206004820152908190620008a390602483019062000ffa565b0390fd5b6001810362000a2057508115620009f9576200090c604051620008ca8162000efa565b602881527f4c69624469616d6f6e644375743a205265706c61636520666163657420686173602082015267206e6f20636f646560c01b60408201528362001976565b80519060005b82811062000927575050505060019062000712565b6001600160e01b03196200093c828462000fc1565b5116600081815260008051602062001b4d83398151915260205260409020546001600160a01b0316308114620009e057858114620009c75715620009af57600090815260008051602062001b4d8339815191526020526040902080546001600160a01b0319168517905560010162000912565b60249060405190637479f93960e01b82526004820152fd5b604051631ac6ce8d60e11b815260048101839052602490fd5b604051632901806d60e11b815260048101839052602490fd5b60405163cd98a96f60e01b815260206004820152908190620008a390602483019062000ffa565b6002810362000c48575060008051602062001b2d83398151915254918062000c30575080519060005b82811062000a5e575050505060019062000712565b6001600160e01b031962000a73828462000fc1565b5116908160005260008051602062001b4d8339815191526020526040600020946040519562000aa28762000f16565b546001600160a01b03811680885260a09190911c61ffff1660208801521562000c175785516001600160a01b0316301462000bfe5780156200084d5760001901948561ffff6020830151160362000b7b575b5060008051602062001b2d8339815191525491821562000b65576001926000190162000b20816200188a565b63ffffffff82549160031b1b1916905560008051602062001b2d8339815191525560005260008051602062001b4d833981519152602052600060408120550162000a49565b634e487b7160e01b600052603160045260246000fd5b62000bf79061ffff602062000b90896200188a565b90549060031b1c60e01b9262000bb0846200081b8585850151166200188a565b01516001600160e01b0319909216600090815260008051602062001b4d83398151915260205260409020805461ffff60a01b19169190921660a01b61ffff60a01b16179055565b3862000af4565b604051630df5fd6160e31b815260048101849052602490fd5b604051637a08a22d60e01b815260048101849052602490fd5b6024906040519063d091bc8160e01b82526004820152fd5b604051633ff4d20f60e11b815260249162000c6890600483019062000fec565bfd5b634e487b7160e01b600052602160045260246000fd5b60405163e767f91f60e01b815260048101839052602490fd5b6040516375c3b42760e01b8152600490fd5b606491501138620002a0565b60405163312f8e0560e01b8152600490fd5b84516001600160401b03811162000daf57601f199190888401016080810190606090860384011262000daf576040519062000d048262000efa565b6020810151825262000d196040820162000f6e565b60208301526060810151906001600160401b03821162000daf57019185608001603f8401121562000daf576020830151916001600160401b03831162000db45762000d70602060405196601f860116018662000f32565b828552866080016040848601011162000daf578462000d9c602096948796604088809801910162000f83565b604082015281520195019490506200025f565b600080fd5b60246000634e487b7160e01b81526041600452fd5b602080809462000dd98762000f6e565b8152019401939250620001d0565b82516001600160401b03811162000daf57606090830160808101908903601f1901821362000daf576040519162000e1e8362000efa565b62000e2c6020830162000f6e565b83526040820151600381101562000daf5760208401528101516001600160401b03811162000daf5789608001603f82840101121562000daf576020818301015162000e778162000f56565b9262000e87604051948562000f32565b81845260208401908c60800160408460051b86840101011162000daf57604084820101915b60408460051b8684010101831062000ed7575050505050604082015281526020928301920162000092565b82516001600160e01b03198116810362000daf5781526020928301920162000eac565b606081019081106001600160401b03821117620005ce57604052565b604081019081106001600160401b03821117620005ce57604052565b601f909101601f19168101906001600160401b03821190821017620005ce57604052565b6001600160401b038111620005ce5760051b60200190565b51906001600160a01b038216820362000daf57565b60005b83811062000f975750506000910152565b818101518382015260200162000f86565b81811062000fb4575050565b6000815560010162000fa8565b805182101562000fd65760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b90600382101562000c6a5752565b90815180825260208080930193019160005b8281106200101b575050505090565b83516001600160e01b031916855293810193928101926001016200100c565b90602091620010558151809281855285808601910162000f83565b601f01601f1916010190565b908082519081815260208091019281808460051b8301019501936000915b848310620010905750505050505090565b9091929394958480620010d4600193601f198682030187528a519060609082518152868060a01b03858401511685820152816040809401519382015201906200103a565b98019301930191949392906200107f565b90600182811c9216801562001117575b60208310146200110157565b634e487b7160e01b600052602260045260246000fd5b91607f1691620010f5565b9190601f81116200113257505050565b62001161926000526020600020906020601f840160051c8301931062001163575b601f0160051c019062000fa8565b565b909150819062001153565b908082146200125e57620011838154620010e5565b906001600160401b038211620005ce57620011ab82620011a48554620010e5565b8562001122565b600090601f8311600114620011ef57620011df929160009183620011e3575b50508160011b916000199060031b1c19161790565b9055565b015490503880620011ca565b815260208082208483528183209291601f1985169083905b828210620012445750509084600195949392106200122a575b505050811b019055565b015460001960f88460031b161c1916905538808062001220565b849581929585015481556001809101960194019062001207565b5050565b60075481101562000fd65760076000526003602060002091020190600090565b9291906200139a5780518355602080820151600180860180546001600160a01b0319166001600160a01b039390931692909217909155604090920151805190946002019290916001600160401b038311620005ce57620012ef83620012e88654620010e5565b8662001122565b602091601f8411600114620013325750508190620011df939495600092620013265750508160011b916000199060031b1c19161790565b015190503880620011ca565b600085815260208120601f1986169890949390925b8983106200138257505050836001959697106200136857505050811b019055565b015160001960f88460031b161c1916905538808062001220565b83850151865594850194938101939181019162001347565b634e487b7160e01b600052600060045260246000fd5b60405190602091828152620013d18251604085840152606083019062001061565b917f7ecdac482334c36fccbe374318cfe74ea0c8181394890ddec894a10f0fcc7481848201928084519560018060401b0380971660408301520390a182600854168062001700575b506007908154926801000000000000000094858511620005ce576009548560095580861062001644575b50600094848652878620600987528887209087905b838210620015ee575050505080600854169160018060401b03199283600a541617600a5583515193855497875b8681106200156c575050505116906008541617600855808411620014ab575b5050505050565b83811015620014a4578154801562001558576000190190620014cd8262001262565b9290926200154457848355846002600194828682015501620014f08154620010e5565b8062001503575b505050835501620014ab565b82601f8083116001146200151f57505050555b843880620014f7565b8382528b82209391926200153c910160051c840188850162000fa8565b555562001516565b634e487b7160e01b85526004859052602485fd5b634e487b7160e01b84526031600452602484fd5b89811015620015a357806200159c62001589600193865162000fc1565b51620015958362001262565b9062001282565b0162001485565b620015b081845162000fc1565b51885483811015620015da5760019291620015958285620015d494018d5562001262565b6200159c565b634e487b7160e01b8b52604160045260248bfd5b8060019184036200160b575b600380910193019101909162001458565b805484558180850190838060a01b039083015416838060a01b03198254161790556200163e60028083019086016200116e565b620015fa565b600390806003029060038204036200084d57866003026003810488036200084d57600090600982528a822092830192015b828110620016865750505062001443565b8082859255828c600182818501556002840190620016a58254620010e5565b9081620016b9575b50505050500162001675565b8490601f808411600114620016db57505050509050555b828c388080620016ad565b8493958395620016f894528520950160051c850190850162000fa8565b5555620016d0565b8383511684600a5416908181146200188157106200186f5760405190620017278262000f16565b600754620017358162000f56565b9062001745604051928362000f32565b8082528782016007600052886000206000915b83831062001789575050509083525085820152620017779082620018bc565b62001783573862001419565b50505050565b8a604051620017988162000efa565b8354815260018401546001600160a01b031682820152604051600285018054600091620017c582620010e5565b80855291600181169081156200184f57506001146200180b575b50509181620017f76001969360039695038262000f32565b604082015281520192019201919062001758565b60009081528581209092505b818310620018305750508101830181620017f7620017df565b8060019196929394959654838688010152019201908f94939262001817565b60ff1916858801525050151560051b82018401905081620017f7620017df565b604051633746be2560e11b8152600490fd5b50505050505050565b9060008051602062001b2d833981519152805483101562000fd657600052601c60206000208360031c019260021b1690565b602080820151838201519192916001600160401b039182169116036200196e57620018e781620019b8565b620018f284620019b8565b036200196e57518051835151036200196e57620019676200195a9160405190816200192886820192878452604083019062001061565b03916200193e601f199384810183528262000f32565b5190209451604051938491868301968752604083019062001061565b0390810183528262000f32565b5190201490565b505050600090565b803b1562001982575050565b6040805163919834b960e01b81526001600160a01b0390921660048301526024820152908190620008a39060448301906200103a565b805151906000916000915b818310620019d15750505090565b909192620019e184835162000fc1565b515181018091116200084d57926001019190620019c356fe60806040523615608757600080356001600160e01b0319168082527f806e0cbb9fce296bbc336a48f42bf1dbc69722d18d90d6fe705b7582c2bb4bd260205260408220546001600160a01b0316908115606f5750818091368280378136915af43d82803e15606b573d90f35b3d90fd5b60249060405190630a82dd7360e31b82526004820152fd5b600080356001600160e01b0319168082527f806e0cbb9fce296bbc336a48f42bf1dbc69722d18d90d6fe705b7582c2bb4bd260205260408220546001600160a01b031690811560e95750818091368280378136915af43d82803e15606b573d90f35b630a82dd7360e31b60805260845260246080fdfea2646970667358221220b7530bec050c0af0e007bb711196dfe1455f80416a51ed88d64675b66fc5b16964736f6c63430008170033806e0cbb9fce296bbc336a48f42bf1dbc69722d18d90d6fe705b7582c2bb4bd3806e0cbb9fce296bbc336a48f42bf1dbc69722d18d90d6fe705b7582c2bb4bd2";
const isSuperArgs = (xs) => xs.length > 1;
class GatewayDiamond__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    getDeployTransaction(_diamondCut, params, overrides) {
        return super.getDeployTransaction(_diamondCut, params, overrides || {});
    }
    deploy(_diamondCut, params, overrides) {
        return super.deploy(_diamondCut, params, overrides || {});
    }
    connect(runner) {
        return super.connect(runner);
    }
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.GatewayDiamond__factory = GatewayDiamond__factory;
GatewayDiamond__factory.bytecode = _bytecode;
GatewayDiamond__factory.abi = _abi;
//# sourceMappingURL=GatewayDiamond__factory.js.map