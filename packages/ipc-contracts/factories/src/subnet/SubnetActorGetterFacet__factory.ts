/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  SubnetActorGetterFacet,
  SubnetActorGetterFacetInterface,
} from "../../../src/subnet/SubnetActorGetterFacet";

const _abi = [
  {
    inputs: [],
    name: "activeValidatorsLimit",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bootstrapped",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bottomUpCheckPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "epoch",
        type: "uint256",
      },
    ],
    name: "bottomUpCheckpointAtEpoch",
    outputs: [
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint64",
                name: "root",
                type: "uint64",
              },
              {
                internalType: "address[]",
                name: "route",
                type: "address[]",
              },
            ],
            internalType: "struct SubnetID",
            name: "subnetID",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "blockHeight",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "blockHash",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "nextConfigurationNumber",
            type: "uint64",
          },
          {
            components: [
              {
                internalType: "enum IpcMsgKind",
                name: "kind",
                type: "uint8",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "uint64",
                        name: "root",
                        type: "uint64",
                      },
                      {
                        internalType: "address[]",
                        name: "route",
                        type: "address[]",
                      },
                    ],
                    internalType: "struct SubnetID",
                    name: "subnetId",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "uint8",
                        name: "addrType",
                        type: "uint8",
                      },
                      {
                        internalType: "bytes",
                        name: "payload",
                        type: "bytes",
                      },
                    ],
                    internalType: "struct FvmAddress",
                    name: "rawAddress",
                    type: "tuple",
                  },
                ],
                internalType: "struct IPCAddress",
                name: "to",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "uint64",
                        name: "root",
                        type: "uint64",
                      },
                      {
                        internalType: "address[]",
                        name: "route",
                        type: "address[]",
                      },
                    ],
                    internalType: "struct SubnetID",
                    name: "subnetId",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "uint8",
                        name: "addrType",
                        type: "uint8",
                      },
                      {
                        internalType: "bytes",
                        name: "payload",
                        type: "bytes",
                      },
                    ],
                    internalType: "struct FvmAddress",
                    name: "rawAddress",
                    type: "tuple",
                  },
                ],
                internalType: "struct IPCAddress",
                name: "from",
                type: "tuple",
              },
              {
                internalType: "uint64",
                name: "nonce",
                type: "uint64",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "message",
                type: "bytes",
              },
            ],
            internalType: "struct IpcEnvelope[]",
            name: "msgs",
            type: "tuple[]",
          },
        ],
        internalType: "struct BottomUpCheckpoint",
        name: "checkpoint",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "epoch",
        type: "uint256",
      },
    ],
    name: "bottomUpCheckpointHashAtEpoch",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "consensus",
    outputs: [
      {
        internalType: "enum ConsensusType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum IpcMsgKind",
            name: "kind",
            type: "uint8",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "uint64",
                    name: "root",
                    type: "uint64",
                  },
                  {
                    internalType: "address[]",
                    name: "route",
                    type: "address[]",
                  },
                ],
                internalType: "struct SubnetID",
                name: "subnetId",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint8",
                    name: "addrType",
                    type: "uint8",
                  },
                  {
                    internalType: "bytes",
                    name: "payload",
                    type: "bytes",
                  },
                ],
                internalType: "struct FvmAddress",
                name: "rawAddress",
                type: "tuple",
              },
            ],
            internalType: "struct IPCAddress",
            name: "to",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "uint64",
                    name: "root",
                    type: "uint64",
                  },
                  {
                    internalType: "address[]",
                    name: "route",
                    type: "address[]",
                  },
                ],
                internalType: "struct SubnetID",
                name: "subnetId",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint8",
                    name: "addrType",
                    type: "uint8",
                  },
                  {
                    internalType: "bytes",
                    name: "payload",
                    type: "bytes",
                  },
                ],
                internalType: "struct FvmAddress",
                name: "rawAddress",
                type: "tuple",
              },
            ],
            internalType: "struct IPCAddress",
            name: "from",
            type: "tuple",
          },
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "message",
            type: "bytes",
          },
        ],
        internalType: "struct IpcEnvelope[]",
        name: "messages",
        type: "tuple[]",
      },
    ],
    name: "crossMsgsHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "genesisBalances",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "genesisCircSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "genesisValidators",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "weight",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "metadata",
            type: "bytes",
          },
        ],
        internalType: "struct Validator[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getActiveValidatorsNumber",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBootstrapNodes",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getConfigurationNumbers",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getParent",
    outputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "root",
            type: "uint64",
          },
          {
            internalType: "address[]",
            name: "route",
            type: "address[]",
          },
        ],
        internalType: "struct SubnetID",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "validator",
        type: "address",
      },
    ],
    name: "getPower",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalCollateral",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalConfirmedCollateral",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "validator",
        type: "address",
      },
    ],
    name: "getTotalValidatorCollateral",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalValidatorsNumber",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "validatorAddress",
        type: "address",
      },
    ],
    name: "getValidator",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "federatedPower",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "confirmedCollateral",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalCollateral",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "metadata",
            type: "bytes",
          },
        ],
        internalType: "struct ValidatorInfo",
        name: "validator",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ipcGatewayAddr",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "validator",
        type: "address",
      },
    ],
    name: "isActiveValidator",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "validator",
        type: "address",
      },
    ],
    name: "isWaitingValidator",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "killed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastBottomUpCheckpointHeight",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "majorityPercentage",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minActivationCollateral",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minValidators",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "permissionMode",
    outputs: [
      {
        internalType: "enum PermissionMode",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "powerScale",
    outputs: [
      {
        internalType: "int8",
        name: "",
        type: "int8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "supplySource",
    outputs: [
      {
        components: [
          {
            internalType: "enum SupplyKind",
            name: "kind",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "tokenAddress",
            type: "address",
          },
        ],
        internalType: "struct SupplySource",
        name: "supply",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001657611669908161001c8239f35b600080fdfe60808060405260048036101561001457600080fd5b60003560e01c91826306c4685314610c91575081631597bf7e14610c4d5781631904bb2e14610b795781631f3a0e4114610b53578163332a5ac9146104b35781633354c3e114610b2e57816335142c8c14610b0b57816338a210b314610adb57816340550a1c14610a9b5781634b0694e214610a445781634b27aa7214610a0a57816352d182d1146109c1578163599c7bd11461099d5781635dd9147c1461092b57816372d0a0e01461090d57816380875df71461088957816380f76021146107c35781638ef3f7611461077f578163903e693014610647578163948628a9146106295781639754b29e146105ac5781639e33bd021461058e578163ad81e4d61461056a578163c5ab224114610543578163c7cda76214610521578163cfca2824146104f8578163d081be03146104b8578163d6eb5910146104b3578163d92e8f1214610349578163e02d971b146101a5575063f0cf6c961461017657600080fd5b346101a05760003660031901126101a057602060ff600a54166040519061019c81610d86565b8152f35b600080fd5b346101a057602090816003193601126101a0576001600160401b038135116101a05736602382350112156101a0576001600160401b038135820135116101a057803581013560051b3660248284350101116101a0576040518092604082018580840152813582013590526060808301938301019060248135019360005b8235830135811061025157505050610243925003601f198101835282610f63565b818151910120604051908152f35b868403605f19018252919350918435908435360360e219018212156101a0576003602486358401013510156101a05787610337600193829361029960248a3584010135610d86565b883582016024810180358352610329916102f1916102d0916102c0916044909101906114cf565b60c08886015260c0850190611549565b6102e48c35860160648101906024016114cf565b8482036040860152611549565b926001600160401b0361030960848d358401016114e3565b1660608401528a350160a4810135608084015260c48101906024016114f7565b9160a0818503910152611528565b96019301910190859391949294610222565b346101a05760003660031901126101a057601b54610366816110dc565b916103746040519384610f63565b818352601b6000908152602092838501927f3ad8aa4f87544323a9d1e5dd902f40c356527a7955687113db5f9a85ad579dc190845b83851061042f57604080518881528951818a01819052600092600582901b83018101918a918c9085015b8287106103e05785850386f35b90919293828061041f600193603f198a82030186528851604060609180518452878060a01b038682015116868501520151918160408201520190610cc2565b96019201960195929190926103d3565b604097969751606081018181106001600160401b0382111761049e576040908152845482526001858101546001600160a01b03168b840152905190926003928b92610488816104818160028c01610f84565b0382610f63565b60408201528152019301940193919695966103a9565b604184634e487b7160e01b6000525260246000fd5b610d02565b346101a05760203660031901126101a0576001600160a01b036104d9610cac565b166000526011602052602061ffff604060002054161515604051908152f35b346101a05760003660031901126101a0576005546040516001600160a01b039091168152602090f35b346101a05760003660031901126101a057602061ffff600d5416604051908152f35b346101a05760003660031901126101a05760206001600160401b0360065416604051908152f35b346101a05760003660031901126101a057602060055460e81c60000b604051908152f35b346101a05760003660031901126101a0576020600254604051908152f35b346101a05760003660031901126101a0576105c56113b7565b60405160209160208201926020835281518094526040830193602060408260051b8601019301916000955b8287106105fd5785850386f35b909192938280610619600193603f198a82030186528851610cc2565b96019201960195929190926105f0565b346101a05760003660031901126101a0576020600054604051908152f35b346101a05760003660031901126101a057601d8054610665816110dc565b906106736040519283610f63565b80825261067f816110dc565b601f199160209183013685840137610696816110dc565b946106a46040519687610f63565b8186526106b0826110dc565b868401940136853760005b828110610717575050506106de9381604051958695604087526040870190610d20565b9185830382870152519182815201929160005b82811061070057505050500390f35b8351855286955093810193928101926001016106f1565b60008290527f6d4407e7be21f808e6509aa9fa9143369579dd7d760fe20a2c09680fc146134f81015495969495600191906001600160a01b03168061075c838b61138d565b52600052601c8552604060002054610774828861138d565b5201959493956106bb565b346101a05760003660031901126101a05760ff60055460f01c166040519060018110156107ae57602092508152f35b602183634e487b7160e01b6000525260246000fd5b346101a05760003660031901126101a0576107dc611041565b506040516107e981610f2d565b6001600160401b0360085416815260405190816009549283815260208091019360096000527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af916000905b82821061086957610865868661084c818b0382610f63565b6020820152604051918291602083526020830190610d5d565b0390f35b83546001600160a01b031687529586019560019384019390910190610834565b346101a05760003660031901126101a057600060206040516108aa81610f2d565b8281520152604051906108bc82610f2d565b6007549160ff83169160028310156108f8575060409281836020935260018060a01b03928391019160081c168152835192835251166020820152f35b602190634e487b7160e01b6000525260246000fd5b346101a05760003660031901126101a0576020600154604051908152f35b346101a05760203660031901126101a0576020610946610cac565b600160ff600a541661095781610d86565b0361097d576001600160a01b03166000908152600c60205260409020545b604051908152f35b6001600160a01b03166000908152600c6020526040902060010154610975565b346101a05760003660031901126101a057602060ff60055460e01c16604051908152f35b346101a05760003660031901126101a05761ffff806010541681600d541601908082116109f5576020925060405191168152f35b601183634e487b7160e01b6000525260246000fd5b346101a05760203660031901126101a057610a259035611143565b9061086560405192839215158352604060208401526040830190610de2565b346101a05760203660031901126101a057610a6160409135611143565b8251610a8a81610a7c60208201946020865287830190610de2565b03601f198101835282610f63565b519020825191151582526020820152f35b346101a05760203660031901126101a0576001600160a01b03610abc610cac565b16600052600e602052602061ffff604060002054161515604051908152f35b346101a05760003660031901126101a05760406013546001600160401b038251918181168352831c166020820152f35b346101a05760003660031901126101a057602060055460f81c6040519015158152f35b346101a05760003660031901126101a057602061ffff600a5460081c16604051908152f35b346101a05760003660031901126101a057602060ff60065460401c166040519015158152f35b346101a05760203660031901126101a057610bd0610b95610cac565b606080604051610ba481610efc565b600081526000602082015260006040820152015260018060a01b0316600052600c602052604060002090565b604051610bdc81610efc565b81548152610865600360018401549360208401948552610c1960028201549160408601928352610c126040518095819301610f84565b0383610f63565b60608401918252604051948594602086525160208601525160408501525160608401525160808084015260a0830190610cc2565b346101a05760203660031901126101a05760206002610c87610c6d610cac565b6001600160a01b03166000908152600c6020526040902090565b0154604051908152f35b346101a05760003660031901126101a0576020906003548152f35b600435906001600160a01b03821682036101a057565b919082519283825260005b848110610cee575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610ccd565b346101a05760003660031901126101a0576020600b54604051908152f35b90815180825260208080930193019160005b828110610d40575050505090565b83516001600160a01b031685529381019392810192600101610d32565b9060406020610d83936001600160401b0381511684520151918160208201520190610d20565b90565b60031115610d9057565b634e487b7160e01b600052602160045260246000fd5b60406020610d839381610dc0855185845285840190610d5d565b940151908281860391015260ff81511684520151918160208201520190610cc2565b60a090610df8815160a0855260a0850190610d5d565b91602080830151818601526040936040840151604087015260609360608101516001600160401b0380911660608901526080809201519760808185039101528751948584528484019285808860051b8701019a01976000955b888710610e6657505050505050505050505090565b909192939495969798999b9a8880610ee58f6001948f610ec38b918e601f198b86030190525193610eb160c08651610e9d81610d86565b86528887015190808a880152860190610da6565b90808601519085830390860152610da6565b928c8a820151168a8401528a8101518b8401520151908a818403910152610cc2565b9d9e9c019a99989190910196019493929190610e51565b608081019081106001600160401b03821117610f1757604052565b634e487b7160e01b600052604160045260246000fd5b604081019081106001600160401b03821117610f1757604052565b60a081019081106001600160401b03821117610f1757604052565b90601f801991011681019081106001600160401b03821117610f1757604052565b80546000939260018083169383821c938515611037575b6020958686108114611021578585529081156110025750600114610fc1575b5050505050565b90939495506000929192528360002092846000945b838610610fee57505050500101903880808080610fba565b805485870183015294019385908201610fd6565b60ff19168685015250505090151560051b010191503880808080610fba565b634e487b7160e01b600052602260045260246000fd5b93607f1693610f9b565b6040519061104e82610f2d565b6060602083600081520152565b906040519161106983610f2d565b826001600160401b0382541681526001809201916040519283849282548083526020809301936000526020600020926000905b8282106110bb575050505050602092916110b7910384610f63565b0152565b84546001600160a01b0316865288965094850194938301939083019061109c565b6001600160401b038111610f175760051b60200190565b906040519161110183610f2d565b60208361110d8361105b565b8152600361113b6040519461112186610f2d565b60ff60028201541686526104816040518094819301610f84565b828401520152565b906040805161115181610f48565b611159611041565b815260009060208281830152828483015260609583606084015260606080809401528352601a81528383209584519661119188610f48565b61119a8161105b565b88526002810154838901526003810154868901526001600160401b03936004918560048201541660608b01526005809101908154926111d8846110dc565b956111e58b519788610f63565b848752878701938a52878a20928a945b8686106112f257505050505050505091819260808801528187518651948591630c133d1360e31b835281600484015260648301948151166024840152015187604483015280518094528260848301910193875b8181106112d057505081929350038173__$a0fe38a9a81205afccc10810b09a4d3f45$__5af49384156112c757508293611285575b505050159190565b9080929350813d83116112c0575b61129d8183610f63565b810103126112bc57519081151582036112b9575038808061127d565b80fd5b5080fd5b503d611293565b513d84823e3d90fd5b85516001600160a01b0316835294840194869488945090920191600101611248565b8c5160c081018181108d82111761137a576001928f92600b8f8f9461048187611367938e93600c9a5260ff84541661132981610d86565b87526113368b85016110f3565b898801526113458c85016110f3565b828801526009840154168c870152600a8301548d870152518094819301610f84565b60a08201528152019501950194936111f5565b634e487b7160e01b8e5260418a5260248efd5b80518210156113a15760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b6018546113c3816110dc565b9060406113d36040519384610f63565b818352601f196113e2836110dc565b0160005b8181106114be57505081156114b9576040518083825260208092016018600052817fb13d2d76d1f4b7be834882e410b3e3a8afaf69f83600ae24db354391d2378d2e9160005b858882106114a357505061144292500382610f63565b60005b84811061145457505050505090565b6001906001600160a01b03611469828561138d565b51166000526017845261048161148786600020875192838092610f84565b611491828961138d565b5261149c818861138d565b5001611445565b845483526001948501948694509201910161142c565b505090565b8060606020809388010152016113e6565b9035603e19823603018112156101a0570190565b35906001600160401b03821682036101a057565b9035601e19823603018112156101a05701602081359101916001600160401b0382116101a05781360383136101a057565b908060209392818452848401376000828201840152601f01601f1916010190565b9061155482806114cf565b906040815260808101926001600160401b039384611571856114e3565b16604084015260209384810135601e19823603018112156101a057019084823592019582116101a0578160051b360386136101a0578190604060608601525260a08301949060005b81811061160b5750505080836115d09201906114cf565b908281850391015280359060ff82168092036101a057836115fe604093928493610d839752858101906114f7565b9390948201520191611528565b90919586359060018060a01b0382168092036101a057908152850195850191906001016115b956fea2646970667358221220f89ab35771dd03a86cf7699a7d7f1700a46b71fe288d8e4e6f56be1ce6902fcb64736f6c63430008170033";

type SubnetActorGetterFacetConstructorParams =
  | [
      linkLibraryAddresses: SubnetActorGetterFacetLibraryAddresses,
      signer?: Signer
    ]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SubnetActorGetterFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class SubnetActorGetterFacet__factory extends ContractFactory {
  constructor(...args: SubnetActorGetterFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        SubnetActorGetterFacet__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: SubnetActorGetterFacetLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$a0fe38a9a81205afccc10810b09a4d3f45\\$__", "g"),
      linkLibraryAddresses["src/lib/SubnetIDHelper.sol:SubnetIDHelper"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SubnetActorGetterFacet & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): SubnetActorGetterFacet__factory {
    return super.connect(runner) as SubnetActorGetterFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SubnetActorGetterFacetInterface {
    return new Interface(_abi) as SubnetActorGetterFacetInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SubnetActorGetterFacet {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as SubnetActorGetterFacet;
  }
}

export interface SubnetActorGetterFacetLibraryAddresses {
  ["src/lib/SubnetIDHelper.sol:SubnetIDHelper"]: string;
}
