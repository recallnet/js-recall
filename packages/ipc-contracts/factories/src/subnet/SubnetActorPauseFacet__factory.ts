/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  SubnetActorPauseFacet,
  SubnetActorPauseFacetInterface,
} from "../../../src/subnet/SubnetActorPauseFacet";

const _abi = [
  {
    inputs: [],
    name: "EnforcedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "ExpectedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "NotOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001657610214908161001c8239f35b600080fdfe604060808152600436101561001357600080fd5b600090813560e01c80633f4ba83a146101105780635c975abb146100ce57638456cb591461004057600080fd5b346100ca57816003193601126100ca57610058610199565b7fc451c9429c27db68f286ab8a68f311f1dccab703ba9423aed29cd397ae63f863805460ff81166100b95760ff19166001179055513381527f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25890602090a180f35b825163d93c066560e01b8152600490fd5b5080fd5b50346100ca57816003193601126100ca5760209060ff7fc451c9429c27db68f286ab8a68f311f1dccab703ba9423aed29cd397ae63f863541690519015158152f35b50346100ca57816003193601126100ca57610129610199565b7fc451c9429c27db68f286ab8a68f311f1dccab703ba9423aed29cd397ae63f863805460ff8116156101885760ff19169055513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90602090a180f35b8251638dfc202b60e01b8152600490fd5b7f806e0cbb9fce296bbc336a48f42bf1dbc69722d18d90d6fe705b7582c2bb4bd5546001600160a01b031633036101cc57565b6040516330cd747160e01b8152600490fdfea26469706673582212203c915022ddd6641af8779b756446bf964ee919acb5cd9b0747446ac53e08382164736f6c63430008170033";

type SubnetActorPauseFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SubnetActorPauseFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SubnetActorPauseFacet__factory extends ContractFactory {
  constructor(...args: SubnetActorPauseFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SubnetActorPauseFacet & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): SubnetActorPauseFacet__factory {
    return super.connect(runner) as SubnetActorPauseFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SubnetActorPauseFacetInterface {
    return new Interface(_abi) as SubnetActorPauseFacetInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SubnetActorPauseFacet {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as SubnetActorPauseFacet;
  }
}
