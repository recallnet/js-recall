import { defineConfig } from "tsup";

export default defineConfig({
  entry: [
    "src/errors.ts",
    "src/types.ts",
    "src/coders/index.ts",
    "src/repositories/admin.ts",
    "src/repositories/agent-nonce.ts",
    "src/repositories/agent-score.ts",
    "src/repositories/agent.ts",
    "src/repositories/balance.ts",
    "src/repositories/boost.ts",
    "src/repositories/competition-rewards.ts",
    "src/repositories/competition.ts",
    "src/repositories/leaderboard.ts",
    "src/repositories/perps.ts",
    "src/repositories/rewards.ts",
    "src/repositories/stakes.ts",
    "src/repositories/trade.ts",
    "src/repositories/trading-constraints.ts",
    "src/repositories/user.ts",
    "src/schema/boost/defs.ts",
    "src/schema/boost/types.ts",
    "src/schema/core/defs.ts",
    "src/schema/core/relations.ts",
    "src/schema/core/types.ts",
    "src/schema/indexing/defs.ts",
    "src/schema/indexing/types.ts",
    "src/schema/rewards/defs.ts",
    "src/schema/rewards/types.ts",
    "src/schema/rewards/relations.ts",
    "src/schema/ranking/defs.ts",
    "src/schema/ranking/relations.ts",
    "src/schema/ranking/types.ts",
    "src/schema/trading/defs.ts",
    "src/schema/trading/relations.ts",
    "src/schema/trading/types.ts",
    "src/schema/index.ts",
  ],
  format: ["cjs", "esm"],
  dts: true,
  clean: true,
  outExtension: ({ format }) => ({
    js: format === "esm" ? ".js" : ".cjs",
  }),
});
