lockVersion: 2.0.0
id: e923f7a3-3252-4ef0-9997-307b6bd8549a
management:
  docChecksum: 9baf3b96bf59da9ce5d31b40ab900921
  docVersion: 1.0.0
  speakeasyVersion: 1.555.2
  generationVersion: 2.620.2
  releaseVersion: 0.1.10
  configChecksum: 6cd589f11e48a9104dd96fee35c23fdb
features:
  typescript:
    additionalDependencies: 0.1.0
    constsAndDefaults: 0.1.11
    core: 3.21.10
    defaultEnabledRetries: 0.1.0
    devContainers: 2.90.0
    enumUnions: 0.1.0
    envVarSecurityUsage: 0.1.2
    globalSecurity: 2.82.13
    globalSecurityCallbacks: 0.1.0
    globalSecurityFlattening: 0.1.0
    globalServerURLs: 2.82.5
    mcpServer: 0.9.2
    methodSecurity: 2.82.6
    nullables: 0.1.1
    responseFormat: 0.2.3
    retries: 2.83.0
    sdkHooks: 0.3.0
generatedFiles:
  - .devcontainer/README.md
  - .devcontainer/devcontainer.json
  - .devcontainer/setup.sh
  - .gitattributes
  - .npmignore
  - FUNCTIONS.md
  - RUNTIMES.md
  - USAGE.md
  - docs/lib/utils/retryconfig.md
  - docs/models/components/security.md
  - docs/models/errors/badrequesterror.md
  - docs/models/errors/conflicterror.md
  - docs/models/errors/errort.md
  - docs/models/errors/getapiauthnonceinternalservererror.md
  - docs/models/errors/postapiauthlogininternalservererror.md
  - docs/models/errors/postapiauthlogoutinternalservererror.md
  - docs/models/errors/unauthorizederror.md
  - docs/models/operations/admin.md
  - docs/models/operations/agentmetadata.md
  - docs/models/operations/availablechains.md
  - docs/models/operations/balance.md
  - docs/models/operations/bestplacement.md
  - docs/models/operations/chains.md
  - docs/models/operations/deleteapiadminagentsagentidrequest.md
  - docs/models/operations/deleteapiadminagentsagentidresponse.md
  - docs/models/operations/deleteapicompetitionscompetitionidagentsagentidrequest.md
  - docs/models/operations/deleteapicompetitionscompetitionidagentsagentidresponse.md
  - docs/models/operations/getapiadminagentsagent.md
  - docs/models/operations/getapiadminagentsagentidagent.md
  - docs/models/operations/getapiadminagentsagentidkeyagent.md
  - docs/models/operations/getapiadminagentsagentidkeyrequest.md
  - docs/models/operations/getapiadminagentsagentidkeyresponse.md
  - docs/models/operations/getapiadminagentsagentidrequest.md
  - docs/models/operations/getapiadminagentsagentidresponse.md
  - docs/models/operations/getapiadminagentsmetadata.md
  - docs/models/operations/getapiadminagentsresponse.md
  - docs/models/operations/getapiadmincompetitioncompetitionidsnapshotsrequest.md
  - docs/models/operations/getapiadmincompetitioncompetitionidsnapshotsresponse.md
  - docs/models/operations/getapiadminreportsperformancecompetition.md
  - docs/models/operations/getapiadminreportsperformancecrosschaintradingtype.md
  - docs/models/operations/getapiadminreportsperformanceleaderboard.md
  - docs/models/operations/getapiadminreportsperformancerequest.md
  - docs/models/operations/getapiadminreportsperformanceresponse.md
  - docs/models/operations/getapiadminreportsperformancestatus.md
  - docs/models/operations/getapiadminreportsperformancetype.md
  - docs/models/operations/getapiadminsearchagent.md
  - docs/models/operations/getapiadminsearchmetadata.md
  - docs/models/operations/getapiadminsearchrequest.md
  - docs/models/operations/getapiadminsearchresponse.md
  - docs/models/operations/getapiadminsearchstatus.md
  - docs/models/operations/getapiadminsearchuser.md
  - docs/models/operations/getapiadminusersmetadata.md
  - docs/models/operations/getapiadminusersresponse.md
  - docs/models/operations/getapiadminusersuser.md
  - docs/models/operations/getapiagentagentidcompetitionscompetition.md
  - docs/models/operations/getapiagentagentidcompetitionsrequest.md
  - docs/models/operations/getapiagentagentidcompetitionsresponse.md
  - docs/models/operations/getapiagentagentidcompetitionsstatus.md
  - docs/models/operations/getapiagentagentidmetadata.md
  - docs/models/operations/getapiagentagentidrequest.md
  - docs/models/operations/getapiagentagentidresponse.md
  - docs/models/operations/getapiagentagentidstats.md
  - docs/models/operations/getapiagentbalanceschain.md
  - docs/models/operations/getapiagentbalancesresponse.md
  - docs/models/operations/getapiagentportfoliochain.md
  - docs/models/operations/getapiagentportfolioresponse.md
  - docs/models/operations/getapiagentprofileagent.md
  - docs/models/operations/getapiagentprofilemetadata.md
  - docs/models/operations/getapiagentprofileresponse.md
  - docs/models/operations/getapiagentprofilestatus.md
  - docs/models/operations/getapiagentsagent.md
  - docs/models/operations/getapiagentsmetadata.md
  - docs/models/operations/getapiagentsrequest.md
  - docs/models/operations/getapiagentsresponse.md
  - docs/models/operations/getapiagentsstatus.md
  - docs/models/operations/getapiagenttradesresponse.md
  - docs/models/operations/getapiauthnonceresponse.md
  - docs/models/operations/getapicompetitionscompetition.md
  - docs/models/operations/getapicompetitionscompetitionidagentsagent.md
  - docs/models/operations/getapicompetitionscompetitionidagentspagination.md
  - docs/models/operations/getapicompetitionscompetitionidagentsrequest.md
  - docs/models/operations/getapicompetitionscompetitionidagentsresponse.md
  - docs/models/operations/getapicompetitionscompetitionidcompetition.md
  - docs/models/operations/getapicompetitionscompetitionidcrosschaintradingtype.md
  - docs/models/operations/getapicompetitionscompetitionidinfo.md
  - docs/models/operations/getapicompetitionscompetitionidrequest.md
  - docs/models/operations/getapicompetitionscompetitionidresponse.md
  - docs/models/operations/getapicompetitionscompetitionidstats.md
  - docs/models/operations/getapicompetitionscompetitionidstatus.md
  - docs/models/operations/getapicompetitionscompetitionidtype.md
  - docs/models/operations/getapicompetitionscompetitioniduservotinginfo.md
  - docs/models/operations/getapicompetitionscrosschaintradingtype.md
  - docs/models/operations/getapicompetitionsinfo.md
  - docs/models/operations/getapicompetitionsleaderboardcompetition.md
  - docs/models/operations/getapicompetitionsleaderboardleaderboard.md
  - docs/models/operations/getapicompetitionsleaderboardrequest.md
  - docs/models/operations/getapicompetitionsleaderboardresponse.md
  - docs/models/operations/getapicompetitionsleaderboardstatus.md
  - docs/models/operations/getapicompetitionsleaderboardtype.md
  - docs/models/operations/getapicompetitionspagination.md
  - docs/models/operations/getapicompetitionsrequest.md
  - docs/models/operations/getapicompetitionsresponse.md
  - docs/models/operations/getapicompetitionsrulesresponse.md
  - docs/models/operations/getapicompetitionsstatus.md
  - docs/models/operations/getapicompetitionsstatuscompetition.md
  - docs/models/operations/getapicompetitionsstatuscrosschaintradingtype.md
  - docs/models/operations/getapicompetitionsstatusinfo.md
  - docs/models/operations/getapicompetitionsstatusresponse.md
  - docs/models/operations/getapicompetitionsstatusstatus.md
  - docs/models/operations/getapicompetitionsstatustype.md
  - docs/models/operations/getapicompetitionsstatususervotinginfo.md
  - docs/models/operations/getapicompetitionstype.md
  - docs/models/operations/getapicompetitionsupcomingcompetition.md
  - docs/models/operations/getapicompetitionsupcomingcrosschaintradingtype.md
  - docs/models/operations/getapicompetitionsupcomingresponse.md
  - docs/models/operations/getapicompetitionsupcomingstatus.md
  - docs/models/operations/getapicompetitionsupcomingtype.md
  - docs/models/operations/getapicompetitionsuservotinginfo.md
  - docs/models/operations/getapihealthdetailedresponse.md
  - docs/models/operations/getapihealthresponse.md
  - docs/models/operations/getapileaderboardagent.md
  - docs/models/operations/getapileaderboardmetadata.md
  - docs/models/operations/getapileaderboardpagination.md
  - docs/models/operations/getapileaderboardrequest.md
  - docs/models/operations/getapileaderboardresponse.md
  - docs/models/operations/getapileaderboardstats.md
  - docs/models/operations/getapileaderboardtype.md
  - docs/models/operations/getapipricechainresponse.md
  - docs/models/operations/getapipricequeryparamchain.md
  - docs/models/operations/getapipricerequest.md
  - docs/models/operations/getapipriceresponse.md
  - docs/models/operations/getapipricespecificchain.md
  - docs/models/operations/getapipricetokeninfochainresponse.md
  - docs/models/operations/getapipricetokeninfoqueryparamchain.md
  - docs/models/operations/getapipricetokeninforequest.md
  - docs/models/operations/getapipricetokeninforesponse.md
  - docs/models/operations/getapipricetokeninfospecificchain.md
  - docs/models/operations/getapitradequoterequest.md
  - docs/models/operations/getapitradequoteresponse.md
  - docs/models/operations/getapiuseragentsagent.md
  - docs/models/operations/getapiuseragentsagentidagent.md
  - docs/models/operations/getapiuseragentsagentidmetadata.md
  - docs/models/operations/getapiuseragentsagentidrequest.md
  - docs/models/operations/getapiuseragentsagentidresponse.md
  - docs/models/operations/getapiuseragentsagentidsecurity.md
  - docs/models/operations/getapiuseragentsagentidstatus.md
  - docs/models/operations/getapiuseragentsmetadata.md
  - docs/models/operations/getapiuseragentsresponse.md
  - docs/models/operations/getapiuseragentssecurity.md
  - docs/models/operations/getapiuseragentsstatus.md
  - docs/models/operations/getapiuserprofilemetadata.md
  - docs/models/operations/getapiuserprofileresponse.md
  - docs/models/operations/getapiuserprofilesecurity.md
  - docs/models/operations/getapiuserprofilestatus.md
  - docs/models/operations/getapiuserprofileuser.md
  - docs/models/operations/getapiuservotescompetitionidstateinfo.md
  - docs/models/operations/getapiuservotescompetitionidstaterequest.md
  - docs/models/operations/getapiuservotescompetitionidstateresponse.md
  - docs/models/operations/getapiuservotescompetitionidstatesecurity.md
  - docs/models/operations/getapiuservotespagination.md
  - docs/models/operations/getapiuservotesrequest.md
  - docs/models/operations/getapiuservotesresponse.md
  - docs/models/operations/getapiuservotessecurity.md
  - docs/models/operations/getapiuservotesvote.md
  - docs/models/operations/inactiveagent.md
  - docs/models/operations/owner.md
  - docs/models/operations/portfoliosnapshots.md
  - docs/models/operations/postapiadminagentsagentiddeactivateagent.md
  - docs/models/operations/postapiadminagentsagentiddeactivaterequest.md
  - docs/models/operations/postapiadminagentsagentiddeactivaterequestbody.md
  - docs/models/operations/postapiadminagentsagentiddeactivateresponse.md
  - docs/models/operations/postapiadminagentsagentidreactivateagent.md
  - docs/models/operations/postapiadminagentsagentidreactivaterequest.md
  - docs/models/operations/postapiadminagentsagentidreactivateresponse.md
  - docs/models/operations/postapiadmincompetitioncreatecompetition.md
  - docs/models/operations/postapiadmincompetitioncreatecrosschaintradingtype.md
  - docs/models/operations/postapiadmincompetitioncreaterequest.md
  - docs/models/operations/postapiadmincompetitioncreateresponse.md
  - docs/models/operations/postapiadmincompetitioncreatestatus.md
  - docs/models/operations/postapiadmincompetitioncreatetradingtype.md
  - docs/models/operations/postapiadmincompetitioncreatetyperequest.md
  - docs/models/operations/postapiadmincompetitioncreatetyperesponse.md
  - docs/models/operations/postapiadmincompetitionendcompetition.md
  - docs/models/operations/postapiadmincompetitionendcrosschaintradingtype.md
  - docs/models/operations/postapiadmincompetitionendleaderboard.md
  - docs/models/operations/postapiadmincompetitionendrequest.md
  - docs/models/operations/postapiadmincompetitionendresponse.md
  - docs/models/operations/postapiadmincompetitionendstatus.md
  - docs/models/operations/postapiadmincompetitionendtype.md
  - docs/models/operations/postapiadmincompetitionstartcompetition.md
  - docs/models/operations/postapiadmincompetitionstartcrosschaintradingtype.md
  - docs/models/operations/postapiadmincompetitionstartrequest.md
  - docs/models/operations/postapiadmincompetitionstartresponse.md
  - docs/models/operations/postapiadmincompetitionstartstatus.md
  - docs/models/operations/postapiadmincompetitionstarttradingtype.md
  - docs/models/operations/postapiadmincompetitionstarttyperequest.md
  - docs/models/operations/postapiadmincompetitionstarttyperesponse.md
  - docs/models/operations/postapiadminsetuprequest.md
  - docs/models/operations/postapiadminsetupresponse.md
  - docs/models/operations/postapiadminusersagent.md
  - docs/models/operations/postapiadminusersagentmetadata.md
  - docs/models/operations/postapiadminusersrequest.md
  - docs/models/operations/postapiadminusersresponse.md
  - docs/models/operations/postapiadminusersuser.md
  - docs/models/operations/postapiadminusersusermetadata.md
  - docs/models/operations/postapiagentresetapikeyresponse.md
  - docs/models/operations/postapiauthloginrequest.md
  - docs/models/operations/postapiauthloginresponse.md
  - docs/models/operations/postapiauthlogoutresponse.md
  - docs/models/operations/postapicompetitionscompetitionidagentsagentidrequest.md
  - docs/models/operations/postapicompetitionscompetitionidagentsagentidresponse.md
  - docs/models/operations/postapitradeexecuterequest.md
  - docs/models/operations/postapitradeexecuteresponse.md
  - docs/models/operations/postapiuseragentsagent.md
  - docs/models/operations/postapiuseragentsagentmetadata.md
  - docs/models/operations/postapiuseragentsmetadatarequest.md
  - docs/models/operations/postapiuseragentsrequest.md
  - docs/models/operations/postapiuseragentsresponse.md
  - docs/models/operations/postapiuseragentssecurity.md
  - docs/models/operations/postapiuseragentsstatus.md
  - docs/models/operations/postapiuservoterequest.md
  - docs/models/operations/postapiuservoteresponse.md
  - docs/models/operations/postapiuservotesecurity.md
  - docs/models/operations/postapiuservotevote.md
  - docs/models/operations/prices.md
  - docs/models/operations/putapiagentprofileagent.md
  - docs/models/operations/putapiagentprofilemetadata.md
  - docs/models/operations/putapiagentprofilerequest.md
  - docs/models/operations/putapiagentprofileresponse.md
  - docs/models/operations/putapiuseragentsagentidprofileagent.md
  - docs/models/operations/putapiuseragentsagentidprofileagentmetadata.md
  - docs/models/operations/putapiuseragentsagentidprofilemetadatarequest.md
  - docs/models/operations/putapiuseragentsagentidprofilerequest.md
  - docs/models/operations/putapiuseragentsagentidprofilerequestbody.md
  - docs/models/operations/putapiuseragentsagentidprofileresponse.md
  - docs/models/operations/putapiuseragentsagentidprofilesecurity.md
  - docs/models/operations/putapiuseragentsagentidprofilestatus.md
  - docs/models/operations/putapiuserprofilemetadatarequest.md
  - docs/models/operations/putapiuserprofilemetadataresponse.md
  - docs/models/operations/putapiuserprofilerequest.md
  - docs/models/operations/putapiuserprofileresponse.md
  - docs/models/operations/putapiuserprofilesecurity.md
  - docs/models/operations/putapiuserprofileuser.md
  - docs/models/operations/results.md
  - docs/models/operations/rules.md
  - docs/models/operations/searchtype.md
  - docs/models/operations/services.md
  - docs/models/operations/snapshot.md
  - docs/models/operations/sort.md
  - docs/models/operations/source.md
  - docs/models/operations/symbols.md
  - docs/models/operations/token.md
  - docs/models/operations/trade.md
  - docs/models/operations/transaction.md
  - docs/models/operations/votingstate.md
  - docs/sdks/admin/README.md
  - docs/sdks/agent/README.md
  - docs/sdks/apisdk/README.md
  - docs/sdks/auth/README.md
  - docs/sdks/competition/README.md
  - docs/sdks/health/README.md
  - docs/sdks/leaderboard/README.md
  - docs/sdks/price/README.md
  - docs/sdks/trade/README.md
  - docs/sdks/user/README.md
  - docs/sdks/vote/README.md
  - eslint.config.mjs
  - jsr.json
  - package.json
  - src/core.ts
  - src/funcs/adminDeleteApiAdminAgentsAgentId.ts
  - src/funcs/adminGetApiAdminAgents.ts
  - src/funcs/adminGetApiAdminAgentsAgentId.ts
  - src/funcs/adminGetApiAdminAgentsAgentIdKey.ts
  - src/funcs/adminGetApiAdminCompetitionCompetitionIdSnapshots.ts
  - src/funcs/adminGetApiAdminReportsPerformance.ts
  - src/funcs/adminGetApiAdminSearch.ts
  - src/funcs/adminGetApiAdminUsers.ts
  - src/funcs/adminPostApiAdminAgentsAgentIdDeactivate.ts
  - src/funcs/adminPostApiAdminAgentsAgentIdReactivate.ts
  - src/funcs/adminPostApiAdminCompetitionCreate.ts
  - src/funcs/adminPostApiAdminCompetitionEnd.ts
  - src/funcs/adminPostApiAdminCompetitionStart.ts
  - src/funcs/adminPostApiAdminSetup.ts
  - src/funcs/adminPostApiAdminUsers.ts
  - src/funcs/agentGetApiAgentAgentId.ts
  - src/funcs/agentGetApiAgentAgentIdCompetitions.ts
  - src/funcs/agentGetApiAgentBalances.ts
  - src/funcs/agentGetApiAgentPortfolio.ts
  - src/funcs/agentGetApiAgentProfile.ts
  - src/funcs/agentGetApiAgentTrades.ts
  - src/funcs/agentGetApiAgents.ts
  - src/funcs/agentPostApiAgentResetApiKey.ts
  - src/funcs/agentPutApiAgentProfile.ts
  - src/funcs/authGetApiAuthNonce.ts
  - src/funcs/authPostApiAuthLogin.ts
  - src/funcs/authPostApiAuthLogout.ts
  - src/funcs/competitionDeleteApiCompetitionsCompetitionIdAgentsAgentId.ts
  - src/funcs/competitionGetApiCompetitions.ts
  - src/funcs/competitionGetApiCompetitionsCompetitionId.ts
  - src/funcs/competitionGetApiCompetitionsCompetitionIdAgents.ts
  - src/funcs/competitionGetApiCompetitionsLeaderboard.ts
  - src/funcs/competitionGetApiCompetitionsRules.ts
  - src/funcs/competitionGetApiCompetitionsStatus.ts
  - src/funcs/competitionGetApiCompetitionsUpcoming.ts
  - src/funcs/competitionPostApiCompetitionsCompetitionIdAgentsAgentId.ts
  - src/funcs/healthGetApiHealth.ts
  - src/funcs/healthGetApiHealthDetailed.ts
  - src/funcs/leaderboardGetApiLeaderboard.ts
  - src/funcs/priceGetApiPrice.ts
  - src/funcs/priceGetApiPriceTokenInfo.ts
  - src/funcs/tradeGetApiTradeQuote.ts
  - src/funcs/tradePostApiTradeExecute.ts
  - src/funcs/userGetApiUserAgents.ts
  - src/funcs/userGetApiUserAgentsAgentId.ts
  - src/funcs/userGetApiUserProfile.ts
  - src/funcs/userPostApiUserAgents.ts
  - src/funcs/userPutApiUserAgentsAgentIdProfile.ts
  - src/funcs/userPutApiUserProfile.ts
  - src/funcs/voteGetApiUserVotes.ts
  - src/funcs/voteGetApiUserVotesCompetitionIdState.ts
  - src/funcs/votePostApiUserVote.ts
  - src/hooks/hooks.ts
  - src/hooks/index.ts
  - src/hooks/types.ts
  - src/index.ts
  - src/lib/base64.ts
  - src/lib/config.ts
  - src/lib/dlv.ts
  - src/lib/encodings.ts
  - src/lib/env.ts
  - src/lib/files.ts
  - src/lib/http.ts
  - src/lib/is-plain-object.ts
  - src/lib/logger.ts
  - src/lib/matchers.ts
  - src/lib/primitives.ts
  - src/lib/retries.ts
  - src/lib/schemas.ts
  - src/lib/sdks.ts
  - src/lib/security.ts
  - src/lib/url.ts
  - src/mcp-server/build.mts
  - src/mcp-server/cli.ts
  - src/mcp-server/cli/start/command.ts
  - src/mcp-server/cli/start/impl.ts
  - src/mcp-server/console-logger.ts
  - src/mcp-server/extensions.ts
  - src/mcp-server/mcp-server.ts
  - src/mcp-server/prompts.ts
  - src/mcp-server/resources.ts
  - src/mcp-server/scopes.ts
  - src/mcp-server/server.ts
  - src/mcp-server/shared.ts
  - src/mcp-server/tools.ts
  - src/mcp-server/tools/adminDeleteApiAdminAgentsAgentId.ts
  - src/mcp-server/tools/adminGetApiAdminAgents.ts
  - src/mcp-server/tools/adminGetApiAdminAgentsAgentId.ts
  - src/mcp-server/tools/adminGetApiAdminAgentsAgentIdKey.ts
  - src/mcp-server/tools/adminGetApiAdminCompetitionCompetitionIdSnapshots.ts
  - src/mcp-server/tools/adminGetApiAdminReportsPerformance.ts
  - src/mcp-server/tools/adminGetApiAdminSearch.ts
  - src/mcp-server/tools/adminGetApiAdminUsers.ts
  - src/mcp-server/tools/adminPostApiAdminAgentsAgentIdDeactivate.ts
  - src/mcp-server/tools/adminPostApiAdminAgentsAgentIdReactivate.ts
  - src/mcp-server/tools/adminPostApiAdminCompetitionCreate.ts
  - src/mcp-server/tools/adminPostApiAdminCompetitionEnd.ts
  - src/mcp-server/tools/adminPostApiAdminCompetitionStart.ts
  - src/mcp-server/tools/adminPostApiAdminSetup.ts
  - src/mcp-server/tools/adminPostApiAdminUsers.ts
  - src/mcp-server/tools/agentGetApiAgentAgentId.ts
  - src/mcp-server/tools/agentGetApiAgentAgentIdCompetitions.ts
  - src/mcp-server/tools/agentGetApiAgentBalances.ts
  - src/mcp-server/tools/agentGetApiAgentPortfolio.ts
  - src/mcp-server/tools/agentGetApiAgentProfile.ts
  - src/mcp-server/tools/agentGetApiAgentTrades.ts
  - src/mcp-server/tools/agentGetApiAgents.ts
  - src/mcp-server/tools/agentPostApiAgentResetApiKey.ts
  - src/mcp-server/tools/agentPutApiAgentProfile.ts
  - src/mcp-server/tools/authGetApiAuthNonce.ts
  - src/mcp-server/tools/authPostApiAuthLogin.ts
  - src/mcp-server/tools/authPostApiAuthLogout.ts
  - src/mcp-server/tools/competitionDeleteApiCompetitionsCompetitionIdAgentsAgentId.ts
  - src/mcp-server/tools/competitionGetApiCompetitions.ts
  - src/mcp-server/tools/competitionGetApiCompetitionsCompetitionId.ts
  - src/mcp-server/tools/competitionGetApiCompetitionsCompetitionIdAgents.ts
  - src/mcp-server/tools/competitionGetApiCompetitionsLeaderboard.ts
  - src/mcp-server/tools/competitionGetApiCompetitionsRules.ts
  - src/mcp-server/tools/competitionGetApiCompetitionsStatus.ts
  - src/mcp-server/tools/competitionGetApiCompetitionsUpcoming.ts
  - src/mcp-server/tools/competitionPostApiCompetitionsCompetitionIdAgentsAgentId.ts
  - src/mcp-server/tools/healthGetApiHealth.ts
  - src/mcp-server/tools/healthGetApiHealthDetailed.ts
  - src/mcp-server/tools/leaderboardGetApiLeaderboard.ts
  - src/mcp-server/tools/priceGetApiPrice.ts
  - src/mcp-server/tools/priceGetApiPriceTokenInfo.ts
  - src/mcp-server/tools/tradeGetApiTradeQuote.ts
  - src/mcp-server/tools/tradePostApiTradeExecute.ts
  - src/models/components/index.ts
  - src/models/components/security.ts
  - src/models/errors/apierror.ts
  - src/models/errors/error.ts
  - src/models/errors/getapiauthnonce.ts
  - src/models/errors/httpclienterrors.ts
  - src/models/errors/index.ts
  - src/models/errors/postapiauthlogin.ts
  - src/models/errors/postapiauthlogout.ts
  - src/models/errors/postapiuservote.ts
  - src/models/errors/sdkvalidationerror.ts
  - src/models/operations/deleteapiadminagentsagentid.ts
  - src/models/operations/deleteapicompetitionscompetitionidagentsagentid.ts
  - src/models/operations/getapiadminagents.ts
  - src/models/operations/getapiadminagentsagentid.ts
  - src/models/operations/getapiadminagentsagentidkey.ts
  - src/models/operations/getapiadmincompetitioncompetitionidsnapshots.ts
  - src/models/operations/getapiadminreportsperformance.ts
  - src/models/operations/getapiadminsearch.ts
  - src/models/operations/getapiadminusers.ts
  - src/models/operations/getapiagentagentid.ts
  - src/models/operations/getapiagentagentidcompetitions.ts
  - src/models/operations/getapiagentbalances.ts
  - src/models/operations/getapiagentportfolio.ts
  - src/models/operations/getapiagentprofile.ts
  - src/models/operations/getapiagents.ts
  - src/models/operations/getapiagenttrades.ts
  - src/models/operations/getapiauthnonce.ts
  - src/models/operations/getapicompetitions.ts
  - src/models/operations/getapicompetitionscompetitionid.ts
  - src/models/operations/getapicompetitionscompetitionidagents.ts
  - src/models/operations/getapicompetitionsleaderboard.ts
  - src/models/operations/getapicompetitionsrules.ts
  - src/models/operations/getapicompetitionsstatus.ts
  - src/models/operations/getapicompetitionsupcoming.ts
  - src/models/operations/getapihealth.ts
  - src/models/operations/getapihealthdetailed.ts
  - src/models/operations/getapileaderboard.ts
  - src/models/operations/getapiprice.ts
  - src/models/operations/getapipricetokeninfo.ts
  - src/models/operations/getapitradequote.ts
  - src/models/operations/getapiuseragents.ts
  - src/models/operations/getapiuseragentsagentid.ts
  - src/models/operations/getapiuserprofile.ts
  - src/models/operations/getapiuservotes.ts
  - src/models/operations/getapiuservotescompetitionidstate.ts
  - src/models/operations/index.ts
  - src/models/operations/postapiadminagentsagentiddeactivate.ts
  - src/models/operations/postapiadminagentsagentidreactivate.ts
  - src/models/operations/postapiadmincompetitioncreate.ts
  - src/models/operations/postapiadmincompetitionend.ts
  - src/models/operations/postapiadmincompetitionstart.ts
  - src/models/operations/postapiadminsetup.ts
  - src/models/operations/postapiadminusers.ts
  - src/models/operations/postapiagentresetapikey.ts
  - src/models/operations/postapiauthlogin.ts
  - src/models/operations/postapiauthlogout.ts
  - src/models/operations/postapicompetitionscompetitionidagentsagentid.ts
  - src/models/operations/postapitradeexecute.ts
  - src/models/operations/postapiuseragents.ts
  - src/models/operations/postapiuservote.ts
  - src/models/operations/putapiagentprofile.ts
  - src/models/operations/putapiuseragentsagentidprofile.ts
  - src/models/operations/putapiuserprofile.ts
  - src/sdk/admin.ts
  - src/sdk/agent.ts
  - src/sdk/auth.ts
  - src/sdk/competition.ts
  - src/sdk/health.ts
  - src/sdk/index.ts
  - src/sdk/leaderboard.ts
  - src/sdk/price.ts
  - src/sdk/sdk.ts
  - src/sdk/trade.ts
  - src/sdk/user.ts
  - src/sdk/vote.ts
  - src/types/async.ts
  - src/types/blobs.ts
  - src/types/constdatetime.ts
  - src/types/enums.ts
  - src/types/fp.ts
  - src/types/index.ts
  - src/types/operations.ts
  - src/types/rfcdate.ts
  - src/types/streams.ts
  - tsconfig.json
examples:
  get_/api/account/profile:
    speakeasy-default-get-/api/account/profile:
      responses:
        "200":
          application/json: {}
  put_/api/account/profile:
    speakeasy-default-put-/api/account/profile:
      requestBody:
        application/json: {}
      responses:
        "200":
          application/json: {}
  post_/api/account/reset-api-key:
    speakeasy-default-post-/api/account/reset-api-key:
      responses:
        "200":
          application/json: {"apiKey": "new123key456_xyz789abc"}
  get_/api/account/balances:
    speakeasy-default-get-/api/account/balances:
      responses:
        "200":
          application/json: {}
  get_/api/account/trades:
    speakeasy-default-get-/api/account/trades:
      responses:
        "200":
          application/json: {}
  get_/api/account/portfolio:
    speakeasy-default-get-/api/account/portfolio:
      responses:
        "200":
          application/json: {}
  post_/api/admin/setup:
    speakeasy-default-post-/api/admin/setup:
      requestBody:
        application/json: {"username": "admin", "password": "password123", "email": "admin@example.com"}
      responses:
        "201":
          application/json: {}
  post_/api/admin/teams/register:
    speakeasy-default-post-/api/admin/teams/register:
      requestBody:
        application/json: {"teamName": "Team Alpha", "email": "team@example.com", "contactPerson": "John Doe", "walletAddress": "1.0392900530713021e+47", "metadata": {}, "imageUrl": "https://example.com/team-image.jpg"}
      responses:
        "201":
          application/json: {"team": {"apiKey": "abc123def456_ghi789jkl012"}}
  get_/api/admin/teams:
    speakeasy-default-get-/api/admin/teams:
      responses:
        "200":
          application/json: {}
  get_/api/admin/teams/{teamId}/key:
    speakeasy-default-get-/api/admin/teams/{team-id}/key:
      parameters:
        path:
          teamId: "<id>"
      responses:
        "200":
          application/json: {}
  delete_/api/admin/teams/{teamId}:
    speakeasy-default-delete-/api/admin/teams/{team-id}:
      parameters:
        path:
          teamId: "<id>"
      responses:
        "200":
          application/json: {}
  post_/api/admin/competition/create:
    speakeasy-default-post-/api/admin/competition/create:
      requestBody:
        application/json: {"name": "Spring 2023 Trading Competition", "description": "A trading competition for the spring semester", "tradingType": "disallowAll", "type": "trading", "externalUrl": "https://example.com/competition-details", "imageUrl": "https://example.com/competition-image.jpg"}
      responses:
        "201":
          application/json: {}
  post_/api/admin/competition/start:
    speakeasy-default-post-/api/admin/competition/start:
      requestBody:
        application/json: {"name": "Spring 2023 Trading Competition", "description": "A trading competition for the spring semester", "externalUrl": "https://example.com/competition-details", "imageUrl": "https://example.com/competition-image.jpg", "agentIds": ["<value 1>", "<value 2>"], "tradingType": "disallowAll", "type": "trading"}
      responses:
        "200":
          application/json: {}
  post_/api/admin/competition/end:
    speakeasy-default-post-/api/admin/competition/end:
      requestBody:
        application/json: {"competitionId": "<id>"}
      responses:
        "200":
          application/json: {}
  get_/api/admin/competition/{competitionId}/snapshots:
    speakeasy-default-get-/api/admin/competition/{competition-id}/snapshots:
      parameters:
        path:
          competitionId: "<id>"
        query: {}
      responses:
        "200":
          application/json: {}
  get_/api/admin/reports/performance:
    speakeasy-default-get-/api/admin/reports/performance:
      parameters:
        query:
          competitionId: "<id>"
      responses:
        "200":
          application/json: {}
  post_/api/admin/teams/{teamId}/deactivate:
    speakeasy-default-post-/api/admin/teams/{team-id}/deactivate:
      parameters:
        path:
          teamId: "<id>"
      requestBody:
        application/json: {"reason": "Violated competition rules by using external API"}
      responses:
        "200":
          application/json: {}
  post_/api/admin/teams/{teamId}/reactivate:
    speakeasy-default-post-/api/admin/teams/{team-id}/reactivate:
      parameters:
        path:
          teamId: "<id>"
      responses:
        "200":
          application/json: {}
  get_/api/admin/teams/search:
    speakeasy-default-get-/api/admin/teams/search:
      responses:
        "200":
          application/json: {}
  get_/api/competition/leaderboard:
    speakeasy-default-get-/api/competition/leaderboard:
      responses:
        "200":
          application/json: {}
  get_/api/competition/status:
    speakeasy-default-get-/api/competition/status:
      responses:
        "200":
          application/json: {}
  get_/api/competition/rules:
    speakeasy-default-get-/api/competition/rules:
      responses:
        "200":
          application/json: {}
  get_/api/competition/upcoming:
    speakeasy-default-get-/api/competition/upcoming:
      responses:
        "200":
          application/json: {}
  get_/api/health:
    speakeasy-default-get-/api/health:
      responses:
        "200":
          application/json: {"status": "ok"}
  get_/api/health/detailed:
    speakeasy-default-get-/api/health/detailed:
      responses:
        "200":
          application/json: {"status": "ok", "services": {"priceTracker": "ok", "balanceManager": "ok", "tradeSimulator": "ok", "competitionManager": "ok", "userManager": "ok"}}
  get_/api/price:
    "":
      parameters:
        query:
          token: "So11111111111111111111111111111111111111112"
          chain: "svm"
          specificChain: "eth"
      responses:
        "200":
          application/json: {}
        "400":
          application/json: {}
  get_/api/price/token-info:
    "":
      parameters:
        query:
          token: "So11111111111111111111111111111111111111112"
          chain: "svm"
          specificChain: "eth"
      responses:
        "200":
          application/json: {}
        "400":
          application/json: {}
  post_/api/trade/execute:
    speakeasy-default-post-/api/trade/execute:
      requestBody:
        application/json: {"fromToken": "So11111111111111111111111111111111111111112", "toToken": "EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v", "amount": "1.5", "reason": "Strong upward momentum in the market combined with positive news on this token's ecosystem growth.", "slippageTolerance": "0.5", "fromChain": "svm", "fromSpecificChain": "mainnet", "toChain": "svm", "toSpecificChain": "mainnet"}
      responses:
        "200":
          application/json: {}
  get_/api/trade/quote:
    "":
      parameters:
        query:
          fromToken: "So11111111111111111111111111111111111111112"
          toToken: "EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v"
          amount: "1.5"
          fromChain: "svm"
          fromSpecificChain: "mainnet"
          toChain: "svm"
          toSpecificChain: "mainnet"
      responses:
        "200":
          application/json: {}
  get_/api/auth/nonce:
    speakeasy-default-get-/api/auth/nonce:
      responses:
        "200":
          application/json: {"nonce": "8J0eXAiOiJ..."}
        "500":
          application/json: {}
  post_/api/auth/login:
    speakeasy-default-post-/api/auth/login:
      requestBody:
        application/json: {"message": "service.example.com wants you to sign in with your Ethereum account:\n0x123...\n\nI accept the ServiceOrg Terms of Service: https://service.example.com/tos\n\nURI: https://service.example.com/login\nVersion: 1\nChain ID: 1\nNonce: 8J0eXAiOiJ...\nIssued At: 2023-01-01T00:00:00.000Z", "signature": "0x123abc..."}
      responses:
        "200":
          application/json: {"agentId": "agent_123abc", "wallet": "0x123..."}
        "401":
          application/json: {"error": "Unauthorized: signature validation issues"}
        "500":
          application/json: {}
  post_/api/auth/logout:
    speakeasy-default-post-/api/auth/logout:
      responses:
        "200":
          application/json: {"message": "Logged out successfully"}
        "500":
          application/json: {}
  get_/api/competitions:
    speakeasy-default-get-/api/competitions:
      responses:
        "200":
          application/json: {"pagination": {"total": 25, "limit": 10, "offset": 0, "hasMore": true}}
  get_/api/competitions/leaderboard:
    speakeasy-default-get-/api/competitions/leaderboard:
      responses:
        "200":
          application/json: {}
  get_/api/competitions/status:
    speakeasy-default-get-/api/competitions/status:
      responses:
        "200":
          application/json: {}
  get_/api/competitions/rules:
    speakeasy-default-get-/api/competitions/rules:
      responses:
        "200":
          application/json: {}
  get_/api/competitions/upcoming:
    speakeasy-default-get-/api/competitions/upcoming:
      responses:
        "200":
          application/json: {}
  post_/api/admin/users:
    speakeasy-default-post-/api/admin/users:
      requestBody:
        application/json: {"walletAddress": "1.0392900530713021e+47", "name": "John Doe", "email": "user@example.com", "userImageUrl": "https://example.com/user-image.jpg", "agentName": "Trading Bot Alpha", "agentDescription": "High-frequency trading bot specializing in DeFi", "agentImageUrl": "https://example.com/agent-image.jpg", "agentMetadata": {}, "agentWalletAddress": "1.0392900530713021e+47"}
      responses:
        "201":
          application/json: {"user": {"metadata": {}}, "agent": {"metadata": {}, "apiKey": "abc123def456_ghi789jkl012"}}
  get_/api/admin/users:
    speakeasy-default-get-/api/admin/users:
      responses:
        "200":
          application/json: {}
  get_/api/admin/agents:
    speakeasy-default-get-/api/admin/agents:
      responses:
        "200":
          application/json: {}
  get_/api/admin/agents/{agentId}/key:
    speakeasy-default-get-/api/admin/agents/{agent-id}/key:
      parameters:
        path:
          agentId: "<id>"
      responses:
        "200":
          application/json: {}
  delete_/api/admin/agents/{agentId}:
    speakeasy-default-delete-/api/admin/agents/{agent-id}:
      parameters:
        path:
          agentId: "<id>"
      responses:
        "200":
          application/json: {}
  get_/api/admin/agents/{agentId}:
    speakeasy-default-get-/api/admin/agents/{agent-id}:
      parameters:
        path:
          agentId: "<id>"
      responses:
        "200":
          application/json: {}
  post_/api/admin/agents/{agentId}/deactivate:
    speakeasy-default-post-/api/admin/agents/{agent-id}/deactivate:
      parameters:
        path:
          agentId: "<id>"
      requestBody:
        application/json: {"reason": "Violated competition rules by using external API"}
      responses:
        "200":
          application/json: {}
  post_/api/admin/agents/{agentId}/reactivate:
    speakeasy-default-post-/api/admin/agents/{agent-id}/reactivate:
      parameters:
        path:
          agentId: "<id>"
      responses:
        "200":
          application/json: {}
  get_/api/admin/search:
    speakeasy-default-get-/api/admin/search:
      parameters:
        query:
          searchType: "both"
      responses:
        "200":
          application/json: {"results": {"users": [{"type": "user"}], "agents": [{"type": "agent"}, {"type": "agent"}, {"type": "agent"}]}}
  get_/api/agent/profile:
    speakeasy-default-get-/api/agent/profile:
      responses:
        "200":
          application/json: {"success": true, "agent": {"walletAddress": "0x1234567890abcdef1234567890abcdef12345678", "name": "Trading Bot Alpha", "description": "AI agent focusing on DeFi yield farming", "imageUrl": "https://example.com/bot-avatar.jpg", "email": "tradingbot@example.com", "metadata": {}}}
  put_/api/agent/profile:
    speakeasy-default-put-/api/agent/profile:
      requestBody:
        application/json: {"name": "Trading Bot Beta", "description": "Updated description of trading strategy", "imageUrl": "https://example.com/new-bot-avatar.jpg"}
      responses:
        "200":
          application/json: {"success": true}
  get_/api/agent/balances:
    speakeasy-default-get-/api/agent/balances:
      responses:
        "200":
          application/json: {"success": true, "balances": [{"tokenAddress": "0x1234567890abcdef1234567890abcdef12345678", "amount": 100.5, "symbol": "USDC", "specificChain": "svm"}]}
  get_/api/agent/portfolio:
    speakeasy-default-get-/api/agent/portfolio:
      responses:
        "200":
          application/json: {"success": true, "totalValue": 1250.75, "tokens": [{"token": "0x1234567890abcdef1234567890abcdef12345678", "amount": 100.5, "price": 1, "value": 100.5, "specificChain": "svm", "symbol": "USDC"}]}
  get_/api/agent/trades:
    speakeasy-default-get-/api/agent/trades:
      responses:
        "200":
          application/json: {"success": true, "trades": [{"toTokenSymbol": "USDC", "fromChain": "evm", "toChain": "svm", "fromSpecificChain": "polygon", "toSpecificChain": "svm"}, {"toTokenSymbol": "USDC", "fromChain": "evm", "toChain": "svm", "fromSpecificChain": "polygon", "toSpecificChain": "svm"}, {"toTokenSymbol": "USDC", "fromChain": "evm", "toChain": "svm", "fromSpecificChain": "polygon", "toSpecificChain": "svm"}]}
  post_/api/agent/reset-api-key:
    speakeasy-default-post-/api/agent/reset-api-key:
      responses:
        "200":
          application/json: {"success": true, "apiKey": "1234567890abcdef_fedcba0987654321"}
  get_/api/user/profile:
    speakeasy-default-get-/api/user/profile:
      responses:
        "200":
          application/json: {"success": true, "user": {"walletAddress": "0x1234567890abcdef1234567890abcdef12345678", "name": "John Doe", "email": "john@example.com", "imageUrl": "https://example.com/avatar.jpg", "metadata": {}}}
  put_/api/user/profile:
    speakeasy-default-put-/api/user/profile:
      requestBody:
        application/json: {"name": "John Doe", "imageUrl": "https://example.com/avatar.jpg", "email": "john@example.com", "metadata": {}}
      responses:
        "200":
          application/json: {"success": true}
  post_/api/user/agents:
    speakeasy-default-post-/api/user/agents:
      requestBody:
        application/json: {"name": "Trading Bot Alpha", "description": "An AI agent that focuses on DeFi yield farming", "imageUrl": "https://example.com/bot-avatar.jpg", "metadata": {}}
      responses:
        "201":
          application/json: {"success": true, "agent": {"apiKey": "1234567890abcdef_fedcba0987654321"}}
  get_/api/user/agents:
    speakeasy-default-get-/api/user/agents:
      responses:
        "200":
          application/json: {"success": true}
  get_/api/user/agents/{agentId}:
    speakeasy-default-get-/api/user/agents/{agent-id}:
      parameters:
        path:
          agentId: "78137904-2b89-49fb-b755-5a57262f4ae5"
      responses:
        "200":
          application/json: {"success": true}
  put_/api/user/agents/{agentId}/profile:
    speakeasy-default-put-/api/user/agents/{agent-id}/profile:
      parameters:
        path:
          agentId: "77b8dfe8-331c-43fd-878a-96cc4891a4e2"
      requestBody:
        application/json: {"name": "Trading Bot Beta", "description": "Updated description of trading strategy", "imageUrl": "https://example.com/new-bot-avatar.jpg", "email": "tradingbot@example.com"}
      responses:
        "200":
          application/json: {"success": true}
  get_/api/agents:
    speakeasy-default-get-/api/agents:
      responses:
        "200":
          application/json: {"success": true, "agents": [{"walletAddress": "0x1234567890abcdef1234567890abcdef12345678", "name": "Trading Bot Alpha", "description": "AI agent focusing on DeFi yield farming", "imageUrl": "https://example.com/bot-avatar.jpg"}, {"walletAddress": "0x1234567890abcdef1234567890abcdef12345678", "name": "Trading Bot Alpha", "description": "AI agent focusing on DeFi yield farming", "imageUrl": "https://example.com/bot-avatar.jpg"}, {"walletAddress": "0x1234567890abcdef1234567890abcdef12345678", "name": "Trading Bot Alpha", "description": "AI agent focusing on DeFi yield farming", "imageUrl": "https://example.com/bot-avatar.jpg"}]}
  get_/api/competitions/{competitionId}:
    speakeasy-default-get-/api/competitions/{competition-id}:
      parameters:
        path:
          competitionId: "<id>"
      responses:
        "200":
          application/json: {}
  get_/api/competitions/{competitionId}/agents:
    speakeasy-default-get-/api/competitions/{competition-id}/agents:
      parameters:
        path:
          competitionId: "<id>"
        query:
          sort: "position"
          limit: 50
          offset: 0
      responses:
        "200":
          application/json: {}
  post_/api/competitions/{competitionId}/agents/{agentId}:
    speakeasy-default-post-/api/competitions/{competition-id}/agents/{agent-id}:
      parameters:
        path:
          competitionId: "0154cfd6-fcda-4d23-9c6f-569854d0e269"
          agentId: "b30c9cd5-2d56-40eb-8b08-e8c8a06eeb34"
      responses:
        "200":
          application/json: {}
  delete_/api/competitions/{competitionId}/agents/{agentId}:
    speakeasy-default-delete-/api/competitions/{competition-id}/agents/{agent-id}:
      parameters:
        path:
          competitionId: "11931252-73d1-45ae-965c-43a3f8a27c3b"
          agentId: "48f1eb3b-b262-4d5f-8c07-8f29e5cb6a77"
      responses:
        "200":
          application/json: {}
  get_/api/agent/{agentId}:
    speakeasy-default-get-/api/agent/{agent-id}:
      parameters:
        path:
          agentId: "<id>"
      responses:
        "200":
          application/json: {"name": "Trading Bot Alpha", "imageUrl": "https://example.com/bot-avatar.jpg", "metadata": {}}
  get_/api/agent/{agentId}/competitions:
    speakeasy-default-get-/api/agent/{agent-id}/competitions:
      parameters:
        path:
          agentId: "<id>"
      responses:
        "200":
          application/json: {"success": true, "competitions": [{"name": "DeFi Trading Championship", "description": "A competition focused on yield farming strategies."}]}
  get_/api/leaderboard:
    speakeasy-default-get-/api/leaderboard:
      parameters:
        query:
          limit: 50
          offset: 0
      responses:
        "200":
          application/json: {}
  post_/api/user/vote:
    speakeasy-default-post-/api/user/vote:
      requestBody:
        application/json: {"agentId": "550e8400-e29b-41d4-a716-446655440000", "competitionId": "123e4567-e89b-12d3-a456-426614174000"}
      responses:
        "201":
          application/json: {"success": true, "message": "Vote cast successfully"}
        "400":
          application/json: {"success": false}
        "409":
          application/json: {"success": false, "error": "You have already voted in this competition"}
  get_/api/user/votes:
    "":
      parameters:
        query:
          competitionId: "123e4567-e89b-12d3-a456-426614174000"
          limit: 50
          offset: 0
      responses:
        "200":
          application/json: {"success": true}
  get_/api/user/votes/{competitionId}/state:
    "":
      parameters:
        path:
          competitionId: "123e4567-e89b-12d3-a456-426614174000"
      responses:
        "200":
          application/json: {"success": true, "votingState": {"canVote": true, "reason": "Competition status does not allow voting", "info": {"hasVoted": false}}}
examplesVersion: 1.0.2
generatedTests: {}
