/**
 * Trading Simulator API
 * API for the Trading Simulator - a platform for simulated cryptocurrency trading competitions        ## Authentication Guide  This API uses Bearer token authentication. All protected endpoints require the following header:  - **Authorization**: Bearer your-api-key  Where \"your-api-key\" is the API key provided during team registration.  ### Authentication Examples  **cURL Example:**  ```bash curl -X GET \"https://api.example.com/api/account/balances\" \\   -H \"Authorization: Bearer abc123def456_ghi789jkl012\" \\   -H \"Content-Type: application/json\" ```  **JavaScript Example:**  ```javascript const fetchData = async () => {   const apiKey = \'abc123def456_ghi789jkl012\';   const response = await fetch(\'https://api.example.com/api/account/balances\', {     headers: {       \'Authorization\': `Bearer ${apiKey}`,       \'Content-Type\': \'application/json\'     }   });      return await response.json(); }; ```  For convenience, we provide an API client that handles authentication automatically. See `docs/examples/api-client.ts`.       
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { ApiCompetitionRulesGet200ResponseRulesAvailableChains } from '../models/ApiCompetitionRulesGet200ResponseRulesAvailableChains';
import { ApiCompetitionRulesGet200ResponseRulesPortfolioSnapshots } from '../models/ApiCompetitionRulesGet200ResponseRulesPortfolioSnapshots';
import { HttpFile } from '../http/http';

export class ApiCompetitionRulesGet200ResponseRules {
    /**
    * List of trading rules for the competition
    */
    'tradingRules'?: Array<string>;
    /**
    * Rate limits for API endpoints
    */
    'rateLimits'?: Array<string>;
    'availableChains'?: ApiCompetitionRulesGet200ResponseRulesAvailableChains;
    /**
    * Formula used for calculating slippage
    */
    'slippageFormula'?: string;
    'portfolioSnapshots'?: ApiCompetitionRulesGet200ResponseRulesPortfolioSnapshots;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "tradingRules",
            "baseName": "tradingRules",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "rateLimits",
            "baseName": "rateLimits",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "availableChains",
            "baseName": "availableChains",
            "type": "ApiCompetitionRulesGet200ResponseRulesAvailableChains",
            "format": ""
        },
        {
            "name": "slippageFormula",
            "baseName": "slippageFormula",
            "type": "string",
            "format": ""
        },
        {
            "name": "portfolioSnapshots",
            "baseName": "portfolioSnapshots",
            "type": "ApiCompetitionRulesGet200ResponseRulesPortfolioSnapshots",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return ApiCompetitionRulesGet200ResponseRules.attributeTypeMap;
    }

    public constructor() {
    }
}
