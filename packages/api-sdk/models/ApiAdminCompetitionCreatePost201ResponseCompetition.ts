/**
 * Trading Simulator API
 * API for the Trading Simulator - a platform for simulated cryptocurrency trading competitions        ## Authentication Guide  This API uses Bearer token authentication. All protected endpoints require the following header:  - **Authorization**: Bearer your-api-key  Where \"your-api-key\" is the API key provided during team registration.  ### Authentication Examples  **cURL Example:**  ```bash curl -X GET \"https://api.example.com/api/account/balances\" \\   -H \"Authorization: Bearer abc123def456_ghi789jkl012\" \\   -H \"Content-Type: application/json\" ```  **JavaScript Example:**  ```javascript const fetchData = async () => {   const apiKey = \'abc123def456_ghi789jkl012\';   const response = await fetch(\'https://api.example.com/api/account/balances\', {     headers: {       \'Authorization\': `Bearer ${apiKey}`,       \'Content-Type\': \'application/json\'     }   });      return await response.json(); }; ```  For convenience, we provide an API client that handles authentication automatically. See `docs/examples/api-client.ts`.       
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

export class ApiAdminCompetitionCreatePost201ResponseCompetition {
    /**
    * Competition ID
    */
    'id'?: string;
    /**
    * Competition name
    */
    'name'?: string;
    /**
    * Competition description
    */
    'description'?: string;
    /**
    * Competition status
    */
    'status'?: ApiAdminCompetitionCreatePost201ResponseCompetitionStatusEnum;
    /**
    * Whether cross-chain trading is allowed in this competition
    */
    'allowCrossChainTrading'?: boolean;
    /**
    * Competition creation date
    */
    'createdAt'?: Date;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": ""
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string",
            "format": ""
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "ApiAdminCompetitionCreatePost201ResponseCompetitionStatusEnum",
            "format": ""
        },
        {
            "name": "allowCrossChainTrading",
            "baseName": "allowCrossChainTrading",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "createdAt",
            "baseName": "createdAt",
            "type": "Date",
            "format": "date-time"
        }    ];

    static getAttributeTypeMap() {
        return ApiAdminCompetitionCreatePost201ResponseCompetition.attributeTypeMap;
    }

    public constructor() {
    }
}

export enum ApiAdminCompetitionCreatePost201ResponseCompetitionStatusEnum {
    Pending = 'PENDING',
    Active = 'ACTIVE',
    Completed = 'COMPLETED'
}

