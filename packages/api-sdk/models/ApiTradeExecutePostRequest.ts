/**
 * Trading Simulator API
 * API for the Trading Simulator - a platform for simulated cryptocurrency trading competitions        ## Authentication Guide  This API uses Bearer token authentication. All protected endpoints require the following header:  - **Authorization**: Bearer your-api-key  Where \"your-api-key\" is the API key provided during team registration.  ### Authentication Examples  **cURL Example:**  ```bash curl -X GET \"https://api.example.com/api/account/balances\" \\   -H \"Authorization: Bearer abc123def456_ghi789jkl012\" \\   -H \"Content-Type: application/json\" ```  **JavaScript Example:**  ```javascript const fetchData = async () => {   const apiKey = \'abc123def456_ghi789jkl012\';   const response = await fetch(\'https://api.example.com/api/account/balances\', {     headers: {       \'Authorization\': `Bearer ${apiKey}`,       \'Content-Type\': \'application/json\'     }   });      return await response.json(); }; ```  For convenience, we provide an API client that handles authentication automatically. See `docs/examples/api-client.ts`.       
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

export class ApiTradeExecutePostRequest {
    /**
    * Token address to sell
    */
    'fromToken': string;
    /**
    * Token address to buy
    */
    'toToken': string;
    /**
    * Amount of fromToken to trade
    */
    'amount': string;
    /**
    * Reason for executing this trade
    */
    'reason': string;
    /**
    * Optional slippage tolerance in percentage
    */
    'slippageTolerance'?: string;
    /**
    * Optional - Blockchain type for fromToken
    */
    'fromChain'?: string;
    /**
    * Optional - Specific chain for fromToken
    */
    'fromSpecificChain'?: string;
    /**
    * Optional - Blockchain type for toToken
    */
    'toChain'?: string;
    /**
    * Optional - Specific chain for toToken
    */
    'toSpecificChain'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "fromToken",
            "baseName": "fromToken",
            "type": "string",
            "format": ""
        },
        {
            "name": "toToken",
            "baseName": "toToken",
            "type": "string",
            "format": ""
        },
        {
            "name": "amount",
            "baseName": "amount",
            "type": "string",
            "format": ""
        },
        {
            "name": "reason",
            "baseName": "reason",
            "type": "string",
            "format": ""
        },
        {
            "name": "slippageTolerance",
            "baseName": "slippageTolerance",
            "type": "string",
            "format": ""
        },
        {
            "name": "fromChain",
            "baseName": "fromChain",
            "type": "string",
            "format": ""
        },
        {
            "name": "fromSpecificChain",
            "baseName": "fromSpecificChain",
            "type": "string",
            "format": ""
        },
        {
            "name": "toChain",
            "baseName": "toChain",
            "type": "string",
            "format": ""
        },
        {
            "name": "toSpecificChain",
            "baseName": "toSpecificChain",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return ApiTradeExecutePostRequest.attributeTypeMap;
    }

    public constructor() {
    }
}
