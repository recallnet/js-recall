/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";

import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type PostApiUserVerifyEmailSecurity = {
  siweSession: string;
};

/**
 * Email verification initiated successfully
 */
export type PostApiUserVerifyEmailResponse = {
  success?: boolean | undefined;
  message?: string | undefined;
};

/** @internal */
export const PostApiUserVerifyEmailSecurity$inboundSchema: z.ZodType<
  PostApiUserVerifyEmailSecurity,
  z.ZodTypeDef,
  unknown
> = z
  .object({
    SIWESession: z.string(),
  })
  .transform((v) => {
    return remap$(v, {
      SIWESession: "siweSession",
    });
  });

/** @internal */
export type PostApiUserVerifyEmailSecurity$Outbound = {
  SIWESession: string;
};

/** @internal */
export const PostApiUserVerifyEmailSecurity$outboundSchema: z.ZodType<
  PostApiUserVerifyEmailSecurity$Outbound,
  z.ZodTypeDef,
  PostApiUserVerifyEmailSecurity
> = z
  .object({
    siweSession: z.string(),
  })
  .transform((v) => {
    return remap$(v, {
      siweSession: "SIWESession",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiUserVerifyEmailSecurity$ {
  /** @deprecated use `PostApiUserVerifyEmailSecurity$inboundSchema` instead. */
  export const inboundSchema = PostApiUserVerifyEmailSecurity$inboundSchema;
  /** @deprecated use `PostApiUserVerifyEmailSecurity$outboundSchema` instead. */
  export const outboundSchema = PostApiUserVerifyEmailSecurity$outboundSchema;
  /** @deprecated use `PostApiUserVerifyEmailSecurity$Outbound` instead. */
  export type Outbound = PostApiUserVerifyEmailSecurity$Outbound;
}

export function postApiUserVerifyEmailSecurityToJSON(
  postApiUserVerifyEmailSecurity: PostApiUserVerifyEmailSecurity,
): string {
  return JSON.stringify(
    PostApiUserVerifyEmailSecurity$outboundSchema.parse(
      postApiUserVerifyEmailSecurity,
    ),
  );
}

export function postApiUserVerifyEmailSecurityFromJSON(
  jsonString: string,
): SafeParseResult<PostApiUserVerifyEmailSecurity, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostApiUserVerifyEmailSecurity$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostApiUserVerifyEmailSecurity' from JSON`,
  );
}

/** @internal */
export const PostApiUserVerifyEmailResponse$inboundSchema: z.ZodType<
  PostApiUserVerifyEmailResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  success: z.boolean().optional(),
  message: z.string().optional(),
});

/** @internal */
export type PostApiUserVerifyEmailResponse$Outbound = {
  success?: boolean | undefined;
  message?: string | undefined;
};

/** @internal */
export const PostApiUserVerifyEmailResponse$outboundSchema: z.ZodType<
  PostApiUserVerifyEmailResponse$Outbound,
  z.ZodTypeDef,
  PostApiUserVerifyEmailResponse
> = z.object({
  success: z.boolean().optional(),
  message: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiUserVerifyEmailResponse$ {
  /** @deprecated use `PostApiUserVerifyEmailResponse$inboundSchema` instead. */
  export const inboundSchema = PostApiUserVerifyEmailResponse$inboundSchema;
  /** @deprecated use `PostApiUserVerifyEmailResponse$outboundSchema` instead. */
  export const outboundSchema = PostApiUserVerifyEmailResponse$outboundSchema;
  /** @deprecated use `PostApiUserVerifyEmailResponse$Outbound` instead. */
  export type Outbound = PostApiUserVerifyEmailResponse$Outbound;
}

export function postApiUserVerifyEmailResponseToJSON(
  postApiUserVerifyEmailResponse: PostApiUserVerifyEmailResponse,
): string {
  return JSON.stringify(
    PostApiUserVerifyEmailResponse$outboundSchema.parse(
      postApiUserVerifyEmailResponse,
    ),
  );
}

export function postApiUserVerifyEmailResponseFromJSON(
  jsonString: string,
): SafeParseResult<PostApiUserVerifyEmailResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostApiUserVerifyEmailResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostApiUserVerifyEmailResponse' from JSON`,
  );
}
