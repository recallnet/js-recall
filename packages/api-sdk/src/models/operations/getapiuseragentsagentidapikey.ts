/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";

import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetApiUserAgentsAgentIdApiKeySecurity = {
  siweSession: string;
};

export type GetApiUserAgentsAgentIdApiKeyRequest = {
  /**
   * The ID of the agent to get the API key for
   */
  agentId: string;
};

/**
 * API key retrieved successfully
 */
export type GetApiUserAgentsAgentIdApiKeyResponse = {
  success?: boolean | undefined;
  /**
   * The ID of the agent
   */
  agentId?: string | undefined;
  /**
   * The name of the agent
   */
  agentName?: string | undefined;
  /**
   * The decrypted API key for the agent (store this securely)
   */
  apiKey?: string | undefined;
};

/** @internal */
export const GetApiUserAgentsAgentIdApiKeySecurity$inboundSchema: z.ZodType<
  GetApiUserAgentsAgentIdApiKeySecurity,
  z.ZodTypeDef,
  unknown
> = z
  .object({
    SIWESession: z.string(),
  })
  .transform((v) => {
    return remap$(v, {
      SIWESession: "siweSession",
    });
  });

/** @internal */
export type GetApiUserAgentsAgentIdApiKeySecurity$Outbound = {
  SIWESession: string;
};

/** @internal */
export const GetApiUserAgentsAgentIdApiKeySecurity$outboundSchema: z.ZodType<
  GetApiUserAgentsAgentIdApiKeySecurity$Outbound,
  z.ZodTypeDef,
  GetApiUserAgentsAgentIdApiKeySecurity
> = z
  .object({
    siweSession: z.string(),
  })
  .transform((v) => {
    return remap$(v, {
      siweSession: "SIWESession",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiUserAgentsAgentIdApiKeySecurity$ {
  /** @deprecated use `GetApiUserAgentsAgentIdApiKeySecurity$inboundSchema` instead. */
  export const inboundSchema =
    GetApiUserAgentsAgentIdApiKeySecurity$inboundSchema;
  /** @deprecated use `GetApiUserAgentsAgentIdApiKeySecurity$outboundSchema` instead. */
  export const outboundSchema =
    GetApiUserAgentsAgentIdApiKeySecurity$outboundSchema;
  /** @deprecated use `GetApiUserAgentsAgentIdApiKeySecurity$Outbound` instead. */
  export type Outbound = GetApiUserAgentsAgentIdApiKeySecurity$Outbound;
}

export function getApiUserAgentsAgentIdApiKeySecurityToJSON(
  getApiUserAgentsAgentIdApiKeySecurity: GetApiUserAgentsAgentIdApiKeySecurity,
): string {
  return JSON.stringify(
    GetApiUserAgentsAgentIdApiKeySecurity$outboundSchema.parse(
      getApiUserAgentsAgentIdApiKeySecurity,
    ),
  );
}

export function getApiUserAgentsAgentIdApiKeySecurityFromJSON(
  jsonString: string,
): SafeParseResult<GetApiUserAgentsAgentIdApiKeySecurity, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiUserAgentsAgentIdApiKeySecurity$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetApiUserAgentsAgentIdApiKeySecurity' from JSON`,
  );
}

/** @internal */
export const GetApiUserAgentsAgentIdApiKeyRequest$inboundSchema: z.ZodType<
  GetApiUserAgentsAgentIdApiKeyRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  agentId: z.string(),
});

/** @internal */
export type GetApiUserAgentsAgentIdApiKeyRequest$Outbound = {
  agentId: string;
};

/** @internal */
export const GetApiUserAgentsAgentIdApiKeyRequest$outboundSchema: z.ZodType<
  GetApiUserAgentsAgentIdApiKeyRequest$Outbound,
  z.ZodTypeDef,
  GetApiUserAgentsAgentIdApiKeyRequest
> = z.object({
  agentId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiUserAgentsAgentIdApiKeyRequest$ {
  /** @deprecated use `GetApiUserAgentsAgentIdApiKeyRequest$inboundSchema` instead. */
  export const inboundSchema =
    GetApiUserAgentsAgentIdApiKeyRequest$inboundSchema;
  /** @deprecated use `GetApiUserAgentsAgentIdApiKeyRequest$outboundSchema` instead. */
  export const outboundSchema =
    GetApiUserAgentsAgentIdApiKeyRequest$outboundSchema;
  /** @deprecated use `GetApiUserAgentsAgentIdApiKeyRequest$Outbound` instead. */
  export type Outbound = GetApiUserAgentsAgentIdApiKeyRequest$Outbound;
}

export function getApiUserAgentsAgentIdApiKeyRequestToJSON(
  getApiUserAgentsAgentIdApiKeyRequest: GetApiUserAgentsAgentIdApiKeyRequest,
): string {
  return JSON.stringify(
    GetApiUserAgentsAgentIdApiKeyRequest$outboundSchema.parse(
      getApiUserAgentsAgentIdApiKeyRequest,
    ),
  );
}

export function getApiUserAgentsAgentIdApiKeyRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetApiUserAgentsAgentIdApiKeyRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiUserAgentsAgentIdApiKeyRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetApiUserAgentsAgentIdApiKeyRequest' from JSON`,
  );
}

/** @internal */
export const GetApiUserAgentsAgentIdApiKeyResponse$inboundSchema: z.ZodType<
  GetApiUserAgentsAgentIdApiKeyResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  success: z.boolean().optional(),
  agentId: z.string().optional(),
  agentName: z.string().optional(),
  apiKey: z.string().optional(),
});

/** @internal */
export type GetApiUserAgentsAgentIdApiKeyResponse$Outbound = {
  success?: boolean | undefined;
  agentId?: string | undefined;
  agentName?: string | undefined;
  apiKey?: string | undefined;
};

/** @internal */
export const GetApiUserAgentsAgentIdApiKeyResponse$outboundSchema: z.ZodType<
  GetApiUserAgentsAgentIdApiKeyResponse$Outbound,
  z.ZodTypeDef,
  GetApiUserAgentsAgentIdApiKeyResponse
> = z.object({
  success: z.boolean().optional(),
  agentId: z.string().optional(),
  agentName: z.string().optional(),
  apiKey: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiUserAgentsAgentIdApiKeyResponse$ {
  /** @deprecated use `GetApiUserAgentsAgentIdApiKeyResponse$inboundSchema` instead. */
  export const inboundSchema =
    GetApiUserAgentsAgentIdApiKeyResponse$inboundSchema;
  /** @deprecated use `GetApiUserAgentsAgentIdApiKeyResponse$outboundSchema` instead. */
  export const outboundSchema =
    GetApiUserAgentsAgentIdApiKeyResponse$outboundSchema;
  /** @deprecated use `GetApiUserAgentsAgentIdApiKeyResponse$Outbound` instead. */
  export type Outbound = GetApiUserAgentsAgentIdApiKeyResponse$Outbound;
}

export function getApiUserAgentsAgentIdApiKeyResponseToJSON(
  getApiUserAgentsAgentIdApiKeyResponse: GetApiUserAgentsAgentIdApiKeyResponse,
): string {
  return JSON.stringify(
    GetApiUserAgentsAgentIdApiKeyResponse$outboundSchema.parse(
      getApiUserAgentsAgentIdApiKeyResponse,
    ),
  );
}

export function getApiUserAgentsAgentIdApiKeyResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetApiUserAgentsAgentIdApiKeyResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiUserAgentsAgentIdApiKeyResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetApiUserAgentsAgentIdApiKeyResponse' from JSON`,
  );
}
