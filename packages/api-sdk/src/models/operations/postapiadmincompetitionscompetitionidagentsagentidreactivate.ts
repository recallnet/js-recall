/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";

import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateRequest =
  {
    /**
     * ID of the competition
     */
    competitionId: string;
    /**
     * ID of the agent to reactivate
     */
    agentId: string;
  };

export type PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateAgent =
  {
    id?: string | undefined;
    name?: string | undefined;
    /**
     * Agent handle
     */
    handle?: string | undefined;
  };

export type PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateCompetition =
  {
    id?: string | undefined;
    name?: string | undefined;
  };

/**
 * Agent reactivated in competition successfully
 */
export type PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateResponse =
  {
    /**
     * Operation success status
     */
    success?: boolean | undefined;
    /**
     * Success message
     */
    message?: string | undefined;
    agent?:
      | PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateAgent
      | undefined;
    competition?:
      | PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateCompetition
      | undefined;
  };

/** @internal */
export const PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateRequest$inboundSchema: z.ZodType<
  PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  competitionId: z.string(),
  agentId: z.string(),
});

/** @internal */
export type PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateRequest$Outbound =
  {
    competitionId: string;
    agentId: string;
  };

/** @internal */
export const PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateRequest$outboundSchema: z.ZodType<
  PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateRequest$Outbound,
  z.ZodTypeDef,
  PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateRequest
> = z.object({
  competitionId: z.string(),
  agentId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateRequest$ {
  /** @deprecated use `PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateRequest$inboundSchema` instead. */
  export const inboundSchema =
    PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateRequest$inboundSchema;
  /** @deprecated use `PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateRequest$outboundSchema` instead. */
  export const outboundSchema =
    PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateRequest$outboundSchema;
  /** @deprecated use `PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateRequest$Outbound` instead. */
  export type Outbound =
    PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateRequest$Outbound;
}

export function postApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateRequestToJSON(
  postApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateRequest: PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateRequest,
): string {
  return JSON.stringify(
    PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateRequest$outboundSchema.parse(
      postApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateRequest,
    ),
  );
}

export function postApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateRequest' from JSON`,
  );
}

/** @internal */
export const PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateAgent$inboundSchema: z.ZodType<
  PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateAgent,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().optional(),
  name: z.string().optional(),
  handle: z.string().optional(),
});

/** @internal */
export type PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateAgent$Outbound =
  {
    id?: string | undefined;
    name?: string | undefined;
    handle?: string | undefined;
  };

/** @internal */
export const PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateAgent$outboundSchema: z.ZodType<
  PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateAgent$Outbound,
  z.ZodTypeDef,
  PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateAgent
> = z.object({
  id: z.string().optional(),
  name: z.string().optional(),
  handle: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateAgent$ {
  /** @deprecated use `PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateAgent$inboundSchema` instead. */
  export const inboundSchema =
    PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateAgent$inboundSchema;
  /** @deprecated use `PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateAgent$outboundSchema` instead. */
  export const outboundSchema =
    PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateAgent$outboundSchema;
  /** @deprecated use `PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateAgent$Outbound` instead. */
  export type Outbound =
    PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateAgent$Outbound;
}

export function postApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateAgentToJSON(
  postApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateAgent: PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateAgent,
): string {
  return JSON.stringify(
    PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateAgent$outboundSchema.parse(
      postApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateAgent,
    ),
  );
}

export function postApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateAgentFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateAgent,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateAgent$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateAgent' from JSON`,
  );
}

/** @internal */
export const PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateCompetition$inboundSchema: z.ZodType<
  PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateCompetition,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().optional(),
  name: z.string().optional(),
});

/** @internal */
export type PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateCompetition$Outbound =
  {
    id?: string | undefined;
    name?: string | undefined;
  };

/** @internal */
export const PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateCompetition$outboundSchema: z.ZodType<
  PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateCompetition$Outbound,
  z.ZodTypeDef,
  PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateCompetition
> = z.object({
  id: z.string().optional(),
  name: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateCompetition$ {
  /** @deprecated use `PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateCompetition$inboundSchema` instead. */
  export const inboundSchema =
    PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateCompetition$inboundSchema;
  /** @deprecated use `PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateCompetition$outboundSchema` instead. */
  export const outboundSchema =
    PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateCompetition$outboundSchema;
  /** @deprecated use `PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateCompetition$Outbound` instead. */
  export type Outbound =
    PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateCompetition$Outbound;
}

export function postApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateCompetitionToJSON(
  postApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateCompetition: PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateCompetition,
): string {
  return JSON.stringify(
    PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateCompetition$outboundSchema.parse(
      postApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateCompetition,
    ),
  );
}

export function postApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateCompetitionFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateCompetition,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateCompetition$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateCompetition' from JSON`,
  );
}

/** @internal */
export const PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateResponse$inboundSchema: z.ZodType<
  PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  success: z.boolean().optional(),
  message: z.string().optional(),
  agent: z
    .lazy(
      () =>
        PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateAgent$inboundSchema,
    )
    .optional(),
  competition: z
    .lazy(
      () =>
        PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateCompetition$inboundSchema,
    )
    .optional(),
});

/** @internal */
export type PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateResponse$Outbound =
  {
    success?: boolean | undefined;
    message?: string | undefined;
    agent?:
      | PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateAgent$Outbound
      | undefined;
    competition?:
      | PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateCompetition$Outbound
      | undefined;
  };

/** @internal */
export const PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateResponse$outboundSchema: z.ZodType<
  PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateResponse$Outbound,
  z.ZodTypeDef,
  PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateResponse
> = z.object({
  success: z.boolean().optional(),
  message: z.string().optional(),
  agent: z
    .lazy(
      () =>
        PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateAgent$outboundSchema,
    )
    .optional(),
  competition: z
    .lazy(
      () =>
        PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateCompetition$outboundSchema,
    )
    .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateResponse$ {
  /** @deprecated use `PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateResponse$inboundSchema` instead. */
  export const inboundSchema =
    PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateResponse$inboundSchema;
  /** @deprecated use `PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateResponse$outboundSchema` instead. */
  export const outboundSchema =
    PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateResponse$outboundSchema;
  /** @deprecated use `PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateResponse$Outbound` instead. */
  export type Outbound =
    PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateResponse$Outbound;
}

export function postApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateResponseToJSON(
  postApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateResponse: PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateResponse,
): string {
  return JSON.stringify(
    PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateResponse$outboundSchema.parse(
      postApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateResponse,
    ),
  );
}

export function postApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostApiAdminCompetitionsCompetitionIdAgentsAgentIdReactivateResponse' from JSON`,
  );
}
