/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";

import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type PostApiAdminAgentsAgentIdDeactivateRequestBody = {
  /**
   * Reason for deactivation
   */
  reason: string;
};

export type PostApiAdminAgentsAgentIdDeactivateRequest = {
  /**
   * ID of the agent to deactivate
   */
  agentId: string;
  requestBody: PostApiAdminAgentsAgentIdDeactivateRequestBody;
};

export type PostApiAdminAgentsAgentIdDeactivateAgent = {
  /**
   * Agent ID
   */
  id?: string | undefined;
  /**
   * Agent name
   */
  name?: string | undefined;
  /**
   * Agent status (will be inactive)
   */
  status?: string | undefined;
};

/**
 * Agent deactivated successfully
 */
export type PostApiAdminAgentsAgentIdDeactivateResponse = {
  /**
   * Operation success status
   */
  success?: boolean | undefined;
  agent?: PostApiAdminAgentsAgentIdDeactivateAgent | undefined;
};

/** @internal */
export const PostApiAdminAgentsAgentIdDeactivateRequestBody$inboundSchema: z.ZodType<
  PostApiAdminAgentsAgentIdDeactivateRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  reason: z.string(),
});

/** @internal */
export type PostApiAdminAgentsAgentIdDeactivateRequestBody$Outbound = {
  reason: string;
};

/** @internal */
export const PostApiAdminAgentsAgentIdDeactivateRequestBody$outboundSchema: z.ZodType<
  PostApiAdminAgentsAgentIdDeactivateRequestBody$Outbound,
  z.ZodTypeDef,
  PostApiAdminAgentsAgentIdDeactivateRequestBody
> = z.object({
  reason: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiAdminAgentsAgentIdDeactivateRequestBody$ {
  /** @deprecated use `PostApiAdminAgentsAgentIdDeactivateRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    PostApiAdminAgentsAgentIdDeactivateRequestBody$inboundSchema;
  /** @deprecated use `PostApiAdminAgentsAgentIdDeactivateRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    PostApiAdminAgentsAgentIdDeactivateRequestBody$outboundSchema;
  /** @deprecated use `PostApiAdminAgentsAgentIdDeactivateRequestBody$Outbound` instead. */
  export type Outbound =
    PostApiAdminAgentsAgentIdDeactivateRequestBody$Outbound;
}

export function postApiAdminAgentsAgentIdDeactivateRequestBodyToJSON(
  postApiAdminAgentsAgentIdDeactivateRequestBody: PostApiAdminAgentsAgentIdDeactivateRequestBody,
): string {
  return JSON.stringify(
    PostApiAdminAgentsAgentIdDeactivateRequestBody$outboundSchema.parse(
      postApiAdminAgentsAgentIdDeactivateRequestBody,
    ),
  );
}

export function postApiAdminAgentsAgentIdDeactivateRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiAdminAgentsAgentIdDeactivateRequestBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiAdminAgentsAgentIdDeactivateRequestBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostApiAdminAgentsAgentIdDeactivateRequestBody' from JSON`,
  );
}

/** @internal */
export const PostApiAdminAgentsAgentIdDeactivateRequest$inboundSchema: z.ZodType<
  PostApiAdminAgentsAgentIdDeactivateRequest,
  z.ZodTypeDef,
  unknown
> = z
  .object({
    agentId: z.string(),
    RequestBody: z.lazy(
      () => PostApiAdminAgentsAgentIdDeactivateRequestBody$inboundSchema,
    ),
  })
  .transform((v) => {
    return remap$(v, {
      RequestBody: "requestBody",
    });
  });

/** @internal */
export type PostApiAdminAgentsAgentIdDeactivateRequest$Outbound = {
  agentId: string;
  RequestBody: PostApiAdminAgentsAgentIdDeactivateRequestBody$Outbound;
};

/** @internal */
export const PostApiAdminAgentsAgentIdDeactivateRequest$outboundSchema: z.ZodType<
  PostApiAdminAgentsAgentIdDeactivateRequest$Outbound,
  z.ZodTypeDef,
  PostApiAdminAgentsAgentIdDeactivateRequest
> = z
  .object({
    agentId: z.string(),
    requestBody: z.lazy(
      () => PostApiAdminAgentsAgentIdDeactivateRequestBody$outboundSchema,
    ),
  })
  .transform((v) => {
    return remap$(v, {
      requestBody: "RequestBody",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiAdminAgentsAgentIdDeactivateRequest$ {
  /** @deprecated use `PostApiAdminAgentsAgentIdDeactivateRequest$inboundSchema` instead. */
  export const inboundSchema =
    PostApiAdminAgentsAgentIdDeactivateRequest$inboundSchema;
  /** @deprecated use `PostApiAdminAgentsAgentIdDeactivateRequest$outboundSchema` instead. */
  export const outboundSchema =
    PostApiAdminAgentsAgentIdDeactivateRequest$outboundSchema;
  /** @deprecated use `PostApiAdminAgentsAgentIdDeactivateRequest$Outbound` instead. */
  export type Outbound = PostApiAdminAgentsAgentIdDeactivateRequest$Outbound;
}

export function postApiAdminAgentsAgentIdDeactivateRequestToJSON(
  postApiAdminAgentsAgentIdDeactivateRequest: PostApiAdminAgentsAgentIdDeactivateRequest,
): string {
  return JSON.stringify(
    PostApiAdminAgentsAgentIdDeactivateRequest$outboundSchema.parse(
      postApiAdminAgentsAgentIdDeactivateRequest,
    ),
  );
}

export function postApiAdminAgentsAgentIdDeactivateRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiAdminAgentsAgentIdDeactivateRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiAdminAgentsAgentIdDeactivateRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostApiAdminAgentsAgentIdDeactivateRequest' from JSON`,
  );
}

/** @internal */
export const PostApiAdminAgentsAgentIdDeactivateAgent$inboundSchema: z.ZodType<
  PostApiAdminAgentsAgentIdDeactivateAgent,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().optional(),
  name: z.string().optional(),
  status: z.string().optional(),
});

/** @internal */
export type PostApiAdminAgentsAgentIdDeactivateAgent$Outbound = {
  id?: string | undefined;
  name?: string | undefined;
  status?: string | undefined;
};

/** @internal */
export const PostApiAdminAgentsAgentIdDeactivateAgent$outboundSchema: z.ZodType<
  PostApiAdminAgentsAgentIdDeactivateAgent$Outbound,
  z.ZodTypeDef,
  PostApiAdminAgentsAgentIdDeactivateAgent
> = z.object({
  id: z.string().optional(),
  name: z.string().optional(),
  status: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiAdminAgentsAgentIdDeactivateAgent$ {
  /** @deprecated use `PostApiAdminAgentsAgentIdDeactivateAgent$inboundSchema` instead. */
  export const inboundSchema =
    PostApiAdminAgentsAgentIdDeactivateAgent$inboundSchema;
  /** @deprecated use `PostApiAdminAgentsAgentIdDeactivateAgent$outboundSchema` instead. */
  export const outboundSchema =
    PostApiAdminAgentsAgentIdDeactivateAgent$outboundSchema;
  /** @deprecated use `PostApiAdminAgentsAgentIdDeactivateAgent$Outbound` instead. */
  export type Outbound = PostApiAdminAgentsAgentIdDeactivateAgent$Outbound;
}

export function postApiAdminAgentsAgentIdDeactivateAgentToJSON(
  postApiAdminAgentsAgentIdDeactivateAgent: PostApiAdminAgentsAgentIdDeactivateAgent,
): string {
  return JSON.stringify(
    PostApiAdminAgentsAgentIdDeactivateAgent$outboundSchema.parse(
      postApiAdminAgentsAgentIdDeactivateAgent,
    ),
  );
}

export function postApiAdminAgentsAgentIdDeactivateAgentFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiAdminAgentsAgentIdDeactivateAgent,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiAdminAgentsAgentIdDeactivateAgent$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostApiAdminAgentsAgentIdDeactivateAgent' from JSON`,
  );
}

/** @internal */
export const PostApiAdminAgentsAgentIdDeactivateResponse$inboundSchema: z.ZodType<
  PostApiAdminAgentsAgentIdDeactivateResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  success: z.boolean().optional(),
  agent: z
    .lazy(() => PostApiAdminAgentsAgentIdDeactivateAgent$inboundSchema)
    .optional(),
});

/** @internal */
export type PostApiAdminAgentsAgentIdDeactivateResponse$Outbound = {
  success?: boolean | undefined;
  agent?: PostApiAdminAgentsAgentIdDeactivateAgent$Outbound | undefined;
};

/** @internal */
export const PostApiAdminAgentsAgentIdDeactivateResponse$outboundSchema: z.ZodType<
  PostApiAdminAgentsAgentIdDeactivateResponse$Outbound,
  z.ZodTypeDef,
  PostApiAdminAgentsAgentIdDeactivateResponse
> = z.object({
  success: z.boolean().optional(),
  agent: z
    .lazy(() => PostApiAdminAgentsAgentIdDeactivateAgent$outboundSchema)
    .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiAdminAgentsAgentIdDeactivateResponse$ {
  /** @deprecated use `PostApiAdminAgentsAgentIdDeactivateResponse$inboundSchema` instead. */
  export const inboundSchema =
    PostApiAdminAgentsAgentIdDeactivateResponse$inboundSchema;
  /** @deprecated use `PostApiAdminAgentsAgentIdDeactivateResponse$outboundSchema` instead. */
  export const outboundSchema =
    PostApiAdminAgentsAgentIdDeactivateResponse$outboundSchema;
  /** @deprecated use `PostApiAdminAgentsAgentIdDeactivateResponse$Outbound` instead. */
  export type Outbound = PostApiAdminAgentsAgentIdDeactivateResponse$Outbound;
}

export function postApiAdminAgentsAgentIdDeactivateResponseToJSON(
  postApiAdminAgentsAgentIdDeactivateResponse: PostApiAdminAgentsAgentIdDeactivateResponse,
): string {
  return JSON.stringify(
    PostApiAdminAgentsAgentIdDeactivateResponse$outboundSchema.parse(
      postApiAdminAgentsAgentIdDeactivateResponse,
    ),
  );
}

export function postApiAdminAgentsAgentIdDeactivateResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiAdminAgentsAgentIdDeactivateResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiAdminAgentsAgentIdDeactivateResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostApiAdminAgentsAgentIdDeactivateResponse' from JSON`,
  );
}
