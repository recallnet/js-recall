/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";

import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type PutApiUserProfileSecurity = {
  siweSession: string;
};

export type PutApiUserProfileRequest = {
  /**
   * User's display name
   */
  name?: string | undefined;
  /**
   * URL to user's profile image
   */
  imageUrl?: string | undefined;
};

export type PutApiUserProfileUser = {
  id?: string | undefined;
  walletAddress?: string | undefined;
  name?: string | undefined;
  email?: string | undefined;
  imageUrl?: string | undefined;
  status?: string | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
};

/**
 * Profile updated successfully
 */
export type PutApiUserProfileResponse = {
  success?: boolean | undefined;
  user?: PutApiUserProfileUser | undefined;
};

/** @internal */
export const PutApiUserProfileSecurity$inboundSchema: z.ZodType<
  PutApiUserProfileSecurity,
  z.ZodTypeDef,
  unknown
> = z
  .object({
    SIWESession: z.string(),
  })
  .transform((v) => {
    return remap$(v, {
      SIWESession: "siweSession",
    });
  });

/** @internal */
export type PutApiUserProfileSecurity$Outbound = {
  SIWESession: string;
};

/** @internal */
export const PutApiUserProfileSecurity$outboundSchema: z.ZodType<
  PutApiUserProfileSecurity$Outbound,
  z.ZodTypeDef,
  PutApiUserProfileSecurity
> = z
  .object({
    siweSession: z.string(),
  })
  .transform((v) => {
    return remap$(v, {
      siweSession: "SIWESession",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiUserProfileSecurity$ {
  /** @deprecated use `PutApiUserProfileSecurity$inboundSchema` instead. */
  export const inboundSchema = PutApiUserProfileSecurity$inboundSchema;
  /** @deprecated use `PutApiUserProfileSecurity$outboundSchema` instead. */
  export const outboundSchema = PutApiUserProfileSecurity$outboundSchema;
  /** @deprecated use `PutApiUserProfileSecurity$Outbound` instead. */
  export type Outbound = PutApiUserProfileSecurity$Outbound;
}

export function putApiUserProfileSecurityToJSON(
  putApiUserProfileSecurity: PutApiUserProfileSecurity,
): string {
  return JSON.stringify(
    PutApiUserProfileSecurity$outboundSchema.parse(putApiUserProfileSecurity),
  );
}

export function putApiUserProfileSecurityFromJSON(
  jsonString: string,
): SafeParseResult<PutApiUserProfileSecurity, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PutApiUserProfileSecurity$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PutApiUserProfileSecurity' from JSON`,
  );
}

/** @internal */
export const PutApiUserProfileRequest$inboundSchema: z.ZodType<
  PutApiUserProfileRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string().optional(),
  imageUrl: z.string().optional(),
});

/** @internal */
export type PutApiUserProfileRequest$Outbound = {
  name?: string | undefined;
  imageUrl?: string | undefined;
};

/** @internal */
export const PutApiUserProfileRequest$outboundSchema: z.ZodType<
  PutApiUserProfileRequest$Outbound,
  z.ZodTypeDef,
  PutApiUserProfileRequest
> = z.object({
  name: z.string().optional(),
  imageUrl: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiUserProfileRequest$ {
  /** @deprecated use `PutApiUserProfileRequest$inboundSchema` instead. */
  export const inboundSchema = PutApiUserProfileRequest$inboundSchema;
  /** @deprecated use `PutApiUserProfileRequest$outboundSchema` instead. */
  export const outboundSchema = PutApiUserProfileRequest$outboundSchema;
  /** @deprecated use `PutApiUserProfileRequest$Outbound` instead. */
  export type Outbound = PutApiUserProfileRequest$Outbound;
}

export function putApiUserProfileRequestToJSON(
  putApiUserProfileRequest: PutApiUserProfileRequest,
): string {
  return JSON.stringify(
    PutApiUserProfileRequest$outboundSchema.parse(putApiUserProfileRequest),
  );
}

export function putApiUserProfileRequestFromJSON(
  jsonString: string,
): SafeParseResult<PutApiUserProfileRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PutApiUserProfileRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PutApiUserProfileRequest' from JSON`,
  );
}

/** @internal */
export const PutApiUserProfileUser$inboundSchema: z.ZodType<
  PutApiUserProfileUser,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().optional(),
  walletAddress: z.string().optional(),
  name: z.string().optional(),
  email: z.string().optional(),
  imageUrl: z.string().optional(),
  status: z.string().optional(),
  createdAt: z
    .string()
    .datetime({ offset: true })
    .transform((v) => new Date(v))
    .optional(),
  updatedAt: z
    .string()
    .datetime({ offset: true })
    .transform((v) => new Date(v))
    .optional(),
});

/** @internal */
export type PutApiUserProfileUser$Outbound = {
  id?: string | undefined;
  walletAddress?: string | undefined;
  name?: string | undefined;
  email?: string | undefined;
  imageUrl?: string | undefined;
  status?: string | undefined;
  createdAt?: string | undefined;
  updatedAt?: string | undefined;
};

/** @internal */
export const PutApiUserProfileUser$outboundSchema: z.ZodType<
  PutApiUserProfileUser$Outbound,
  z.ZodTypeDef,
  PutApiUserProfileUser
> = z.object({
  id: z.string().optional(),
  walletAddress: z.string().optional(),
  name: z.string().optional(),
  email: z.string().optional(),
  imageUrl: z.string().optional(),
  status: z.string().optional(),
  createdAt: z
    .date()
    .transform((v) => v.toISOString())
    .optional(),
  updatedAt: z
    .date()
    .transform((v) => v.toISOString())
    .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiUserProfileUser$ {
  /** @deprecated use `PutApiUserProfileUser$inboundSchema` instead. */
  export const inboundSchema = PutApiUserProfileUser$inboundSchema;
  /** @deprecated use `PutApiUserProfileUser$outboundSchema` instead. */
  export const outboundSchema = PutApiUserProfileUser$outboundSchema;
  /** @deprecated use `PutApiUserProfileUser$Outbound` instead. */
  export type Outbound = PutApiUserProfileUser$Outbound;
}

export function putApiUserProfileUserToJSON(
  putApiUserProfileUser: PutApiUserProfileUser,
): string {
  return JSON.stringify(
    PutApiUserProfileUser$outboundSchema.parse(putApiUserProfileUser),
  );
}

export function putApiUserProfileUserFromJSON(
  jsonString: string,
): SafeParseResult<PutApiUserProfileUser, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PutApiUserProfileUser$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PutApiUserProfileUser' from JSON`,
  );
}

/** @internal */
export const PutApiUserProfileResponse$inboundSchema: z.ZodType<
  PutApiUserProfileResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  success: z.boolean().optional(),
  user: z.lazy(() => PutApiUserProfileUser$inboundSchema).optional(),
});

/** @internal */
export type PutApiUserProfileResponse$Outbound = {
  success?: boolean | undefined;
  user?: PutApiUserProfileUser$Outbound | undefined;
};

/** @internal */
export const PutApiUserProfileResponse$outboundSchema: z.ZodType<
  PutApiUserProfileResponse$Outbound,
  z.ZodTypeDef,
  PutApiUserProfileResponse
> = z.object({
  success: z.boolean().optional(),
  user: z.lazy(() => PutApiUserProfileUser$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiUserProfileResponse$ {
  /** @deprecated use `PutApiUserProfileResponse$inboundSchema` instead. */
  export const inboundSchema = PutApiUserProfileResponse$inboundSchema;
  /** @deprecated use `PutApiUserProfileResponse$outboundSchema` instead. */
  export const outboundSchema = PutApiUserProfileResponse$outboundSchema;
  /** @deprecated use `PutApiUserProfileResponse$Outbound` instead. */
  export type Outbound = PutApiUserProfileResponse$Outbound;
}

export function putApiUserProfileResponseToJSON(
  putApiUserProfileResponse: PutApiUserProfileResponse,
): string {
  return JSON.stringify(
    PutApiUserProfileResponse$outboundSchema.parse(putApiUserProfileResponse),
  );
}

export function putApiUserProfileResponseFromJSON(
  jsonString: string,
): SafeParseResult<PutApiUserProfileResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PutApiUserProfileResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PutApiUserProfileResponse' from JSON`,
  );
}
