/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";

import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRequest = {
  /**
   * ID of the competition
   */
  competitionId: string;
  /**
   * ID of the agent to add
   */
  agentId: string;
};

export type PostApiAdminCompetitionsCompetitionIdAgentsAgentIdAgent = {
  /**
   * Agent ID
   */
  id?: string | undefined;
  /**
   * Agent name
   */
  name?: string | undefined;
  /**
   * Agent handle
   */
  handle?: string | undefined;
  /**
   * Agent owner ID
   */
  ownerId?: string | undefined;
};

export type PostApiAdminCompetitionsCompetitionIdAgentsAgentIdCompetition = {
  /**
   * Competition ID
   */
  id?: string | undefined;
  /**
   * Competition name
   */
  name?: string | undefined;
  /**
   * Competition status
   */
  status?: string | undefined;
};

/**
 * Agent added to competition successfully
 */
export type PostApiAdminCompetitionsCompetitionIdAgentsAgentIdResponse = {
  /**
   * Operation success status
   */
  success?: boolean | undefined;
  /**
   * Success message
   */
  message?: string | undefined;
  agent?: PostApiAdminCompetitionsCompetitionIdAgentsAgentIdAgent | undefined;
  competition?:
    | PostApiAdminCompetitionsCompetitionIdAgentsAgentIdCompetition
    | undefined;
};

/** @internal */
export const PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRequest$inboundSchema: z.ZodType<
  PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  competitionId: z.string(),
  agentId: z.string(),
});

/** @internal */
export type PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRequest$Outbound =
  {
    competitionId: string;
    agentId: string;
  };

/** @internal */
export const PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRequest$outboundSchema: z.ZodType<
  PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRequest$Outbound,
  z.ZodTypeDef,
  PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRequest
> = z.object({
  competitionId: z.string(),
  agentId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRequest$ {
  /** @deprecated use `PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRequest$inboundSchema` instead. */
  export const inboundSchema =
    PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRequest$inboundSchema;
  /** @deprecated use `PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRequest$outboundSchema` instead. */
  export const outboundSchema =
    PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRequest$outboundSchema;
  /** @deprecated use `PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRequest$Outbound` instead. */
  export type Outbound =
    PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRequest$Outbound;
}

export function postApiAdminCompetitionsCompetitionIdAgentsAgentIdRequestToJSON(
  postApiAdminCompetitionsCompetitionIdAgentsAgentIdRequest: PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRequest,
): string {
  return JSON.stringify(
    PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRequest$outboundSchema.parse(
      postApiAdminCompetitionsCompetitionIdAgentsAgentIdRequest,
    ),
  );
}

export function postApiAdminCompetitionsCompetitionIdAgentsAgentIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRequest' from JSON`,
  );
}

/** @internal */
export const PostApiAdminCompetitionsCompetitionIdAgentsAgentIdAgent$inboundSchema: z.ZodType<
  PostApiAdminCompetitionsCompetitionIdAgentsAgentIdAgent,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().optional(),
  name: z.string().optional(),
  handle: z.string().optional(),
  ownerId: z.string().optional(),
});

/** @internal */
export type PostApiAdminCompetitionsCompetitionIdAgentsAgentIdAgent$Outbound = {
  id?: string | undefined;
  name?: string | undefined;
  handle?: string | undefined;
  ownerId?: string | undefined;
};

/** @internal */
export const PostApiAdminCompetitionsCompetitionIdAgentsAgentIdAgent$outboundSchema: z.ZodType<
  PostApiAdminCompetitionsCompetitionIdAgentsAgentIdAgent$Outbound,
  z.ZodTypeDef,
  PostApiAdminCompetitionsCompetitionIdAgentsAgentIdAgent
> = z.object({
  id: z.string().optional(),
  name: z.string().optional(),
  handle: z.string().optional(),
  ownerId: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiAdminCompetitionsCompetitionIdAgentsAgentIdAgent$ {
  /** @deprecated use `PostApiAdminCompetitionsCompetitionIdAgentsAgentIdAgent$inboundSchema` instead. */
  export const inboundSchema =
    PostApiAdminCompetitionsCompetitionIdAgentsAgentIdAgent$inboundSchema;
  /** @deprecated use `PostApiAdminCompetitionsCompetitionIdAgentsAgentIdAgent$outboundSchema` instead. */
  export const outboundSchema =
    PostApiAdminCompetitionsCompetitionIdAgentsAgentIdAgent$outboundSchema;
  /** @deprecated use `PostApiAdminCompetitionsCompetitionIdAgentsAgentIdAgent$Outbound` instead. */
  export type Outbound =
    PostApiAdminCompetitionsCompetitionIdAgentsAgentIdAgent$Outbound;
}

export function postApiAdminCompetitionsCompetitionIdAgentsAgentIdAgentToJSON(
  postApiAdminCompetitionsCompetitionIdAgentsAgentIdAgent: PostApiAdminCompetitionsCompetitionIdAgentsAgentIdAgent,
): string {
  return JSON.stringify(
    PostApiAdminCompetitionsCompetitionIdAgentsAgentIdAgent$outboundSchema.parse(
      postApiAdminCompetitionsCompetitionIdAgentsAgentIdAgent,
    ),
  );
}

export function postApiAdminCompetitionsCompetitionIdAgentsAgentIdAgentFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiAdminCompetitionsCompetitionIdAgentsAgentIdAgent,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiAdminCompetitionsCompetitionIdAgentsAgentIdAgent$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostApiAdminCompetitionsCompetitionIdAgentsAgentIdAgent' from JSON`,
  );
}

/** @internal */
export const PostApiAdminCompetitionsCompetitionIdAgentsAgentIdCompetition$inboundSchema: z.ZodType<
  PostApiAdminCompetitionsCompetitionIdAgentsAgentIdCompetition,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().optional(),
  name: z.string().optional(),
  status: z.string().optional(),
});

/** @internal */
export type PostApiAdminCompetitionsCompetitionIdAgentsAgentIdCompetition$Outbound =
  {
    id?: string | undefined;
    name?: string | undefined;
    status?: string | undefined;
  };

/** @internal */
export const PostApiAdminCompetitionsCompetitionIdAgentsAgentIdCompetition$outboundSchema: z.ZodType<
  PostApiAdminCompetitionsCompetitionIdAgentsAgentIdCompetition$Outbound,
  z.ZodTypeDef,
  PostApiAdminCompetitionsCompetitionIdAgentsAgentIdCompetition
> = z.object({
  id: z.string().optional(),
  name: z.string().optional(),
  status: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiAdminCompetitionsCompetitionIdAgentsAgentIdCompetition$ {
  /** @deprecated use `PostApiAdminCompetitionsCompetitionIdAgentsAgentIdCompetition$inboundSchema` instead. */
  export const inboundSchema =
    PostApiAdminCompetitionsCompetitionIdAgentsAgentIdCompetition$inboundSchema;
  /** @deprecated use `PostApiAdminCompetitionsCompetitionIdAgentsAgentIdCompetition$outboundSchema` instead. */
  export const outboundSchema =
    PostApiAdminCompetitionsCompetitionIdAgentsAgentIdCompetition$outboundSchema;
  /** @deprecated use `PostApiAdminCompetitionsCompetitionIdAgentsAgentIdCompetition$Outbound` instead. */
  export type Outbound =
    PostApiAdminCompetitionsCompetitionIdAgentsAgentIdCompetition$Outbound;
}

export function postApiAdminCompetitionsCompetitionIdAgentsAgentIdCompetitionToJSON(
  postApiAdminCompetitionsCompetitionIdAgentsAgentIdCompetition: PostApiAdminCompetitionsCompetitionIdAgentsAgentIdCompetition,
): string {
  return JSON.stringify(
    PostApiAdminCompetitionsCompetitionIdAgentsAgentIdCompetition$outboundSchema.parse(
      postApiAdminCompetitionsCompetitionIdAgentsAgentIdCompetition,
    ),
  );
}

export function postApiAdminCompetitionsCompetitionIdAgentsAgentIdCompetitionFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiAdminCompetitionsCompetitionIdAgentsAgentIdCompetition,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiAdminCompetitionsCompetitionIdAgentsAgentIdCompetition$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostApiAdminCompetitionsCompetitionIdAgentsAgentIdCompetition' from JSON`,
  );
}

/** @internal */
export const PostApiAdminCompetitionsCompetitionIdAgentsAgentIdResponse$inboundSchema: z.ZodType<
  PostApiAdminCompetitionsCompetitionIdAgentsAgentIdResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  success: z.boolean().optional(),
  message: z.string().optional(),
  agent: z
    .lazy(
      () =>
        PostApiAdminCompetitionsCompetitionIdAgentsAgentIdAgent$inboundSchema,
    )
    .optional(),
  competition: z
    .lazy(
      () =>
        PostApiAdminCompetitionsCompetitionIdAgentsAgentIdCompetition$inboundSchema,
    )
    .optional(),
});

/** @internal */
export type PostApiAdminCompetitionsCompetitionIdAgentsAgentIdResponse$Outbound =
  {
    success?: boolean | undefined;
    message?: string | undefined;
    agent?:
      | PostApiAdminCompetitionsCompetitionIdAgentsAgentIdAgent$Outbound
      | undefined;
    competition?:
      | PostApiAdminCompetitionsCompetitionIdAgentsAgentIdCompetition$Outbound
      | undefined;
  };

/** @internal */
export const PostApiAdminCompetitionsCompetitionIdAgentsAgentIdResponse$outboundSchema: z.ZodType<
  PostApiAdminCompetitionsCompetitionIdAgentsAgentIdResponse$Outbound,
  z.ZodTypeDef,
  PostApiAdminCompetitionsCompetitionIdAgentsAgentIdResponse
> = z.object({
  success: z.boolean().optional(),
  message: z.string().optional(),
  agent: z
    .lazy(
      () =>
        PostApiAdminCompetitionsCompetitionIdAgentsAgentIdAgent$outboundSchema,
    )
    .optional(),
  competition: z
    .lazy(
      () =>
        PostApiAdminCompetitionsCompetitionIdAgentsAgentIdCompetition$outboundSchema,
    )
    .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiAdminCompetitionsCompetitionIdAgentsAgentIdResponse$ {
  /** @deprecated use `PostApiAdminCompetitionsCompetitionIdAgentsAgentIdResponse$inboundSchema` instead. */
  export const inboundSchema =
    PostApiAdminCompetitionsCompetitionIdAgentsAgentIdResponse$inboundSchema;
  /** @deprecated use `PostApiAdminCompetitionsCompetitionIdAgentsAgentIdResponse$outboundSchema` instead. */
  export const outboundSchema =
    PostApiAdminCompetitionsCompetitionIdAgentsAgentIdResponse$outboundSchema;
  /** @deprecated use `PostApiAdminCompetitionsCompetitionIdAgentsAgentIdResponse$Outbound` instead. */
  export type Outbound =
    PostApiAdminCompetitionsCompetitionIdAgentsAgentIdResponse$Outbound;
}

export function postApiAdminCompetitionsCompetitionIdAgentsAgentIdResponseToJSON(
  postApiAdminCompetitionsCompetitionIdAgentsAgentIdResponse: PostApiAdminCompetitionsCompetitionIdAgentsAgentIdResponse,
): string {
  return JSON.stringify(
    PostApiAdminCompetitionsCompetitionIdAgentsAgentIdResponse$outboundSchema.parse(
      postApiAdminCompetitionsCompetitionIdAgentsAgentIdResponse,
    ),
  );
}

export function postApiAdminCompetitionsCompetitionIdAgentsAgentIdResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiAdminCompetitionsCompetitionIdAgentsAgentIdResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiAdminCompetitionsCompetitionIdAgentsAgentIdResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostApiAdminCompetitionsCompetitionIdAgentsAgentIdResponse' from JSON`,
  );
}
