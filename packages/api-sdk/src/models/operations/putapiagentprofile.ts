/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";

import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type PutApiAgentProfileRequest = {
  /**
   * Agent's display name
   */
  name?: string | undefined;
  /**
   * Agent description
   */
  description?: string | undefined;
  /**
   * URL to agent's profile image
   */
  imageUrl?: string | undefined;
};

export type PutApiAgentProfileMetadata = {};

export type PutApiAgentProfileAgent = {
  id?: string | undefined;
  ownerId?: string | undefined;
  walletAddress?: string | undefined;
  name?: string | undefined;
  description?: string | null | undefined;
  imageUrl?: string | null | undefined;
  email?: string | null | undefined;
  status?: string | undefined;
  metadata?: PutApiAgentProfileMetadata | null | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
};

/**
 * Agent profile updated successfully
 */
export type PutApiAgentProfileResponse = {
  success?: boolean | undefined;
  agent?: PutApiAgentProfileAgent | undefined;
};

/** @internal */
export const PutApiAgentProfileRequest$inboundSchema: z.ZodType<
  PutApiAgentProfileRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string().optional(),
  description: z.string().optional(),
  imageUrl: z.string().optional(),
});

/** @internal */
export type PutApiAgentProfileRequest$Outbound = {
  name?: string | undefined;
  description?: string | undefined;
  imageUrl?: string | undefined;
};

/** @internal */
export const PutApiAgentProfileRequest$outboundSchema: z.ZodType<
  PutApiAgentProfileRequest$Outbound,
  z.ZodTypeDef,
  PutApiAgentProfileRequest
> = z.object({
  name: z.string().optional(),
  description: z.string().optional(),
  imageUrl: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiAgentProfileRequest$ {
  /** @deprecated use `PutApiAgentProfileRequest$inboundSchema` instead. */
  export const inboundSchema = PutApiAgentProfileRequest$inboundSchema;
  /** @deprecated use `PutApiAgentProfileRequest$outboundSchema` instead. */
  export const outboundSchema = PutApiAgentProfileRequest$outboundSchema;
  /** @deprecated use `PutApiAgentProfileRequest$Outbound` instead. */
  export type Outbound = PutApiAgentProfileRequest$Outbound;
}

export function putApiAgentProfileRequestToJSON(
  putApiAgentProfileRequest: PutApiAgentProfileRequest,
): string {
  return JSON.stringify(
    PutApiAgentProfileRequest$outboundSchema.parse(putApiAgentProfileRequest),
  );
}

export function putApiAgentProfileRequestFromJSON(
  jsonString: string,
): SafeParseResult<PutApiAgentProfileRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PutApiAgentProfileRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PutApiAgentProfileRequest' from JSON`,
  );
}

/** @internal */
export const PutApiAgentProfileMetadata$inboundSchema: z.ZodType<
  PutApiAgentProfileMetadata,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type PutApiAgentProfileMetadata$Outbound = {};

/** @internal */
export const PutApiAgentProfileMetadata$outboundSchema: z.ZodType<
  PutApiAgentProfileMetadata$Outbound,
  z.ZodTypeDef,
  PutApiAgentProfileMetadata
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiAgentProfileMetadata$ {
  /** @deprecated use `PutApiAgentProfileMetadata$inboundSchema` instead. */
  export const inboundSchema = PutApiAgentProfileMetadata$inboundSchema;
  /** @deprecated use `PutApiAgentProfileMetadata$outboundSchema` instead. */
  export const outboundSchema = PutApiAgentProfileMetadata$outboundSchema;
  /** @deprecated use `PutApiAgentProfileMetadata$Outbound` instead. */
  export type Outbound = PutApiAgentProfileMetadata$Outbound;
}

export function putApiAgentProfileMetadataToJSON(
  putApiAgentProfileMetadata: PutApiAgentProfileMetadata,
): string {
  return JSON.stringify(
    PutApiAgentProfileMetadata$outboundSchema.parse(putApiAgentProfileMetadata),
  );
}

export function putApiAgentProfileMetadataFromJSON(
  jsonString: string,
): SafeParseResult<PutApiAgentProfileMetadata, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PutApiAgentProfileMetadata$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PutApiAgentProfileMetadata' from JSON`,
  );
}

/** @internal */
export const PutApiAgentProfileAgent$inboundSchema: z.ZodType<
  PutApiAgentProfileAgent,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().optional(),
  ownerId: z.string().optional(),
  walletAddress: z.string().optional(),
  name: z.string().optional(),
  description: z.nullable(z.string()).optional(),
  imageUrl: z.nullable(z.string()).optional(),
  email: z.nullable(z.string()).optional(),
  status: z.string().optional(),
  metadata: z
    .nullable(z.lazy(() => PutApiAgentProfileMetadata$inboundSchema))
    .optional(),
  createdAt: z
    .string()
    .datetime({ offset: true })
    .transform((v) => new Date(v))
    .optional(),
  updatedAt: z
    .string()
    .datetime({ offset: true })
    .transform((v) => new Date(v))
    .optional(),
});

/** @internal */
export type PutApiAgentProfileAgent$Outbound = {
  id?: string | undefined;
  ownerId?: string | undefined;
  walletAddress?: string | undefined;
  name?: string | undefined;
  description?: string | null | undefined;
  imageUrl?: string | null | undefined;
  email?: string | null | undefined;
  status?: string | undefined;
  metadata?: PutApiAgentProfileMetadata$Outbound | null | undefined;
  createdAt?: string | undefined;
  updatedAt?: string | undefined;
};

/** @internal */
export const PutApiAgentProfileAgent$outboundSchema: z.ZodType<
  PutApiAgentProfileAgent$Outbound,
  z.ZodTypeDef,
  PutApiAgentProfileAgent
> = z.object({
  id: z.string().optional(),
  ownerId: z.string().optional(),
  walletAddress: z.string().optional(),
  name: z.string().optional(),
  description: z.nullable(z.string()).optional(),
  imageUrl: z.nullable(z.string()).optional(),
  email: z.nullable(z.string()).optional(),
  status: z.string().optional(),
  metadata: z
    .nullable(z.lazy(() => PutApiAgentProfileMetadata$outboundSchema))
    .optional(),
  createdAt: z
    .date()
    .transform((v) => v.toISOString())
    .optional(),
  updatedAt: z
    .date()
    .transform((v) => v.toISOString())
    .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiAgentProfileAgent$ {
  /** @deprecated use `PutApiAgentProfileAgent$inboundSchema` instead. */
  export const inboundSchema = PutApiAgentProfileAgent$inboundSchema;
  /** @deprecated use `PutApiAgentProfileAgent$outboundSchema` instead. */
  export const outboundSchema = PutApiAgentProfileAgent$outboundSchema;
  /** @deprecated use `PutApiAgentProfileAgent$Outbound` instead. */
  export type Outbound = PutApiAgentProfileAgent$Outbound;
}

export function putApiAgentProfileAgentToJSON(
  putApiAgentProfileAgent: PutApiAgentProfileAgent,
): string {
  return JSON.stringify(
    PutApiAgentProfileAgent$outboundSchema.parse(putApiAgentProfileAgent),
  );
}

export function putApiAgentProfileAgentFromJSON(
  jsonString: string,
): SafeParseResult<PutApiAgentProfileAgent, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PutApiAgentProfileAgent$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PutApiAgentProfileAgent' from JSON`,
  );
}

/** @internal */
export const PutApiAgentProfileResponse$inboundSchema: z.ZodType<
  PutApiAgentProfileResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  success: z.boolean().optional(),
  agent: z.lazy(() => PutApiAgentProfileAgent$inboundSchema).optional(),
});

/** @internal */
export type PutApiAgentProfileResponse$Outbound = {
  success?: boolean | undefined;
  agent?: PutApiAgentProfileAgent$Outbound | undefined;
};

/** @internal */
export const PutApiAgentProfileResponse$outboundSchema: z.ZodType<
  PutApiAgentProfileResponse$Outbound,
  z.ZodTypeDef,
  PutApiAgentProfileResponse
> = z.object({
  success: z.boolean().optional(),
  agent: z.lazy(() => PutApiAgentProfileAgent$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiAgentProfileResponse$ {
  /** @deprecated use `PutApiAgentProfileResponse$inboundSchema` instead. */
  export const inboundSchema = PutApiAgentProfileResponse$inboundSchema;
  /** @deprecated use `PutApiAgentProfileResponse$outboundSchema` instead. */
  export const outboundSchema = PutApiAgentProfileResponse$outboundSchema;
  /** @deprecated use `PutApiAgentProfileResponse$Outbound` instead. */
  export type Outbound = PutApiAgentProfileResponse$Outbound;
}

export function putApiAgentProfileResponseToJSON(
  putApiAgentProfileResponse: PutApiAgentProfileResponse,
): string {
  return JSON.stringify(
    PutApiAgentProfileResponse$outboundSchema.parse(putApiAgentProfileResponse),
  );
}

export function putApiAgentProfileResponseFromJSON(
  jsonString: string,
): SafeParseResult<PutApiAgentProfileResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PutApiAgentProfileResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PutApiAgentProfileResponse' from JSON`,
  );
}
