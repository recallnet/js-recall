/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";

import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetApiAgentAgentIdCompetitionsRequest = {
  /**
   * The UUID of the agent
   */
  agentId: string;
};

export const GetApiAgentAgentIdCompetitionsStatus = {
  Active: "active",
  Completed: "completed",
  Upcoming: "upcoming",
} as const;
export type GetApiAgentAgentIdCompetitionsStatus = ClosedEnum<
  typeof GetApiAgentAgentIdCompetitionsStatus
>;

export type GetApiAgentAgentIdCompetitionsCompetition = {
  id?: string | undefined;
  name?: string | undefined;
  status?: GetApiAgentAgentIdCompetitionsStatus | undefined;
  startDate?: Date | undefined;
  endDate?: Date | undefined;
  description?: string | undefined;
};

/**
 * Competitions retrieved successfully
 */
export type GetApiAgentAgentIdCompetitionsResponse = {
  success?: boolean | undefined;
  competitions?: Array<GetApiAgentAgentIdCompetitionsCompetition> | undefined;
};

/** @internal */
export const GetApiAgentAgentIdCompetitionsRequest$inboundSchema: z.ZodType<
  GetApiAgentAgentIdCompetitionsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  agentId: z.string(),
});

/** @internal */
export type GetApiAgentAgentIdCompetitionsRequest$Outbound = {
  agentId: string;
};

/** @internal */
export const GetApiAgentAgentIdCompetitionsRequest$outboundSchema: z.ZodType<
  GetApiAgentAgentIdCompetitionsRequest$Outbound,
  z.ZodTypeDef,
  GetApiAgentAgentIdCompetitionsRequest
> = z.object({
  agentId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiAgentAgentIdCompetitionsRequest$ {
  /** @deprecated use `GetApiAgentAgentIdCompetitionsRequest$inboundSchema` instead. */
  export const inboundSchema =
    GetApiAgentAgentIdCompetitionsRequest$inboundSchema;
  /** @deprecated use `GetApiAgentAgentIdCompetitionsRequest$outboundSchema` instead. */
  export const outboundSchema =
    GetApiAgentAgentIdCompetitionsRequest$outboundSchema;
  /** @deprecated use `GetApiAgentAgentIdCompetitionsRequest$Outbound` instead. */
  export type Outbound = GetApiAgentAgentIdCompetitionsRequest$Outbound;
}

export function getApiAgentAgentIdCompetitionsRequestToJSON(
  getApiAgentAgentIdCompetitionsRequest: GetApiAgentAgentIdCompetitionsRequest,
): string {
  return JSON.stringify(
    GetApiAgentAgentIdCompetitionsRequest$outboundSchema.parse(
      getApiAgentAgentIdCompetitionsRequest,
    ),
  );
}

export function getApiAgentAgentIdCompetitionsRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetApiAgentAgentIdCompetitionsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiAgentAgentIdCompetitionsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetApiAgentAgentIdCompetitionsRequest' from JSON`,
  );
}

/** @internal */
export const GetApiAgentAgentIdCompetitionsStatus$inboundSchema: z.ZodNativeEnum<
  typeof GetApiAgentAgentIdCompetitionsStatus
> = z.nativeEnum(GetApiAgentAgentIdCompetitionsStatus);

/** @internal */
export const GetApiAgentAgentIdCompetitionsStatus$outboundSchema: z.ZodNativeEnum<
  typeof GetApiAgentAgentIdCompetitionsStatus
> = GetApiAgentAgentIdCompetitionsStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiAgentAgentIdCompetitionsStatus$ {
  /** @deprecated use `GetApiAgentAgentIdCompetitionsStatus$inboundSchema` instead. */
  export const inboundSchema =
    GetApiAgentAgentIdCompetitionsStatus$inboundSchema;
  /** @deprecated use `GetApiAgentAgentIdCompetitionsStatus$outboundSchema` instead. */
  export const outboundSchema =
    GetApiAgentAgentIdCompetitionsStatus$outboundSchema;
}

/** @internal */
export const GetApiAgentAgentIdCompetitionsCompetition$inboundSchema: z.ZodType<
  GetApiAgentAgentIdCompetitionsCompetition,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().optional(),
  name: z.string().optional(),
  status: GetApiAgentAgentIdCompetitionsStatus$inboundSchema.optional(),
  startDate: z
    .string()
    .datetime({ offset: true })
    .transform((v) => new Date(v))
    .optional(),
  endDate: z
    .string()
    .datetime({ offset: true })
    .transform((v) => new Date(v))
    .optional(),
  description: z.string().optional(),
});

/** @internal */
export type GetApiAgentAgentIdCompetitionsCompetition$Outbound = {
  id?: string | undefined;
  name?: string | undefined;
  status?: string | undefined;
  startDate?: string | undefined;
  endDate?: string | undefined;
  description?: string | undefined;
};

/** @internal */
export const GetApiAgentAgentIdCompetitionsCompetition$outboundSchema: z.ZodType<
  GetApiAgentAgentIdCompetitionsCompetition$Outbound,
  z.ZodTypeDef,
  GetApiAgentAgentIdCompetitionsCompetition
> = z.object({
  id: z.string().optional(),
  name: z.string().optional(),
  status: GetApiAgentAgentIdCompetitionsStatus$outboundSchema.optional(),
  startDate: z
    .date()
    .transform((v) => v.toISOString())
    .optional(),
  endDate: z
    .date()
    .transform((v) => v.toISOString())
    .optional(),
  description: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiAgentAgentIdCompetitionsCompetition$ {
  /** @deprecated use `GetApiAgentAgentIdCompetitionsCompetition$inboundSchema` instead. */
  export const inboundSchema =
    GetApiAgentAgentIdCompetitionsCompetition$inboundSchema;
  /** @deprecated use `GetApiAgentAgentIdCompetitionsCompetition$outboundSchema` instead. */
  export const outboundSchema =
    GetApiAgentAgentIdCompetitionsCompetition$outboundSchema;
  /** @deprecated use `GetApiAgentAgentIdCompetitionsCompetition$Outbound` instead. */
  export type Outbound = GetApiAgentAgentIdCompetitionsCompetition$Outbound;
}

export function getApiAgentAgentIdCompetitionsCompetitionToJSON(
  getApiAgentAgentIdCompetitionsCompetition: GetApiAgentAgentIdCompetitionsCompetition,
): string {
  return JSON.stringify(
    GetApiAgentAgentIdCompetitionsCompetition$outboundSchema.parse(
      getApiAgentAgentIdCompetitionsCompetition,
    ),
  );
}

export function getApiAgentAgentIdCompetitionsCompetitionFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiAgentAgentIdCompetitionsCompetition,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiAgentAgentIdCompetitionsCompetition$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetApiAgentAgentIdCompetitionsCompetition' from JSON`,
  );
}

/** @internal */
export const GetApiAgentAgentIdCompetitionsResponse$inboundSchema: z.ZodType<
  GetApiAgentAgentIdCompetitionsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  success: z.boolean().optional(),
  competitions: z
    .array(
      z.lazy(() => GetApiAgentAgentIdCompetitionsCompetition$inboundSchema),
    )
    .optional(),
});

/** @internal */
export type GetApiAgentAgentIdCompetitionsResponse$Outbound = {
  success?: boolean | undefined;
  competitions?:
    | Array<GetApiAgentAgentIdCompetitionsCompetition$Outbound>
    | undefined;
};

/** @internal */
export const GetApiAgentAgentIdCompetitionsResponse$outboundSchema: z.ZodType<
  GetApiAgentAgentIdCompetitionsResponse$Outbound,
  z.ZodTypeDef,
  GetApiAgentAgentIdCompetitionsResponse
> = z.object({
  success: z.boolean().optional(),
  competitions: z
    .array(
      z.lazy(() => GetApiAgentAgentIdCompetitionsCompetition$outboundSchema),
    )
    .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiAgentAgentIdCompetitionsResponse$ {
  /** @deprecated use `GetApiAgentAgentIdCompetitionsResponse$inboundSchema` instead. */
  export const inboundSchema =
    GetApiAgentAgentIdCompetitionsResponse$inboundSchema;
  /** @deprecated use `GetApiAgentAgentIdCompetitionsResponse$outboundSchema` instead. */
  export const outboundSchema =
    GetApiAgentAgentIdCompetitionsResponse$outboundSchema;
  /** @deprecated use `GetApiAgentAgentIdCompetitionsResponse$Outbound` instead. */
  export type Outbound = GetApiAgentAgentIdCompetitionsResponse$Outbound;
}

export function getApiAgentAgentIdCompetitionsResponseToJSON(
  getApiAgentAgentIdCompetitionsResponse: GetApiAgentAgentIdCompetitionsResponse,
): string {
  return JSON.stringify(
    GetApiAgentAgentIdCompetitionsResponse$outboundSchema.parse(
      getApiAgentAgentIdCompetitionsResponse,
    ),
  );
}

export function getApiAgentAgentIdCompetitionsResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetApiAgentAgentIdCompetitionsResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiAgentAgentIdCompetitionsResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetApiAgentAgentIdCompetitionsResponse' from JSON`,
  );
}
