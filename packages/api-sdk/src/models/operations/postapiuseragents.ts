/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";

import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type PostApiUserAgentsSecurity = {
  siweSession: string;
};

/**
 * Optional metadata for the agent
 */
export type PostApiUserAgentsMetadataRequest = {};

export type PostApiUserAgentsRequest = {
  /**
   * Agent name (must be unique for this user)
   */
  name: string;
  /**
   * Optional agent description
   */
  description?: string | undefined;
  /**
   * Optional URL to agent's profile image
   */
  imageUrl?: string | undefined;
  /**
   * Optional metadata for the agent
   */
  metadata?: PostApiUserAgentsMetadataRequest | undefined;
};

export type PostApiUserAgentsAgentMetadata = {};

export const PostApiUserAgentsStatus = {
  Active: "active",
  Inactive: "inactive",
  Suspended: "suspended",
  Deleted: "deleted",
} as const;
export type PostApiUserAgentsStatus = ClosedEnum<
  typeof PostApiUserAgentsStatus
>;

export type PostApiUserAgentsAgent = {
  id?: string | undefined;
  ownerId?: string | undefined;
  walletAddress?: string | null | undefined;
  name?: string | undefined;
  email?: string | null | undefined;
  description?: string | null | undefined;
  imageUrl?: string | null | undefined;
  /**
   * The API key for this agent (store this securely)
   */
  apiKey?: string | undefined;
  metadata?: PostApiUserAgentsAgentMetadata | null | undefined;
  status?: PostApiUserAgentsStatus | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
};

/**
 * Agent created successfully
 */
export type PostApiUserAgentsResponse = {
  success?: boolean | undefined;
  agent?: PostApiUserAgentsAgent | undefined;
};

/** @internal */
export const PostApiUserAgentsSecurity$inboundSchema: z.ZodType<
  PostApiUserAgentsSecurity,
  z.ZodTypeDef,
  unknown
> = z
  .object({
    SIWESession: z.string(),
  })
  .transform((v) => {
    return remap$(v, {
      SIWESession: "siweSession",
    });
  });

/** @internal */
export type PostApiUserAgentsSecurity$Outbound = {
  SIWESession: string;
};

/** @internal */
export const PostApiUserAgentsSecurity$outboundSchema: z.ZodType<
  PostApiUserAgentsSecurity$Outbound,
  z.ZodTypeDef,
  PostApiUserAgentsSecurity
> = z
  .object({
    siweSession: z.string(),
  })
  .transform((v) => {
    return remap$(v, {
      siweSession: "SIWESession",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiUserAgentsSecurity$ {
  /** @deprecated use `PostApiUserAgentsSecurity$inboundSchema` instead. */
  export const inboundSchema = PostApiUserAgentsSecurity$inboundSchema;
  /** @deprecated use `PostApiUserAgentsSecurity$outboundSchema` instead. */
  export const outboundSchema = PostApiUserAgentsSecurity$outboundSchema;
  /** @deprecated use `PostApiUserAgentsSecurity$Outbound` instead. */
  export type Outbound = PostApiUserAgentsSecurity$Outbound;
}

export function postApiUserAgentsSecurityToJSON(
  postApiUserAgentsSecurity: PostApiUserAgentsSecurity,
): string {
  return JSON.stringify(
    PostApiUserAgentsSecurity$outboundSchema.parse(postApiUserAgentsSecurity),
  );
}

export function postApiUserAgentsSecurityFromJSON(
  jsonString: string,
): SafeParseResult<PostApiUserAgentsSecurity, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostApiUserAgentsSecurity$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostApiUserAgentsSecurity' from JSON`,
  );
}

/** @internal */
export const PostApiUserAgentsMetadataRequest$inboundSchema: z.ZodType<
  PostApiUserAgentsMetadataRequest,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type PostApiUserAgentsMetadataRequest$Outbound = {};

/** @internal */
export const PostApiUserAgentsMetadataRequest$outboundSchema: z.ZodType<
  PostApiUserAgentsMetadataRequest$Outbound,
  z.ZodTypeDef,
  PostApiUserAgentsMetadataRequest
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiUserAgentsMetadataRequest$ {
  /** @deprecated use `PostApiUserAgentsMetadataRequest$inboundSchema` instead. */
  export const inboundSchema = PostApiUserAgentsMetadataRequest$inboundSchema;
  /** @deprecated use `PostApiUserAgentsMetadataRequest$outboundSchema` instead. */
  export const outboundSchema = PostApiUserAgentsMetadataRequest$outboundSchema;
  /** @deprecated use `PostApiUserAgentsMetadataRequest$Outbound` instead. */
  export type Outbound = PostApiUserAgentsMetadataRequest$Outbound;
}

export function postApiUserAgentsMetadataRequestToJSON(
  postApiUserAgentsMetadataRequest: PostApiUserAgentsMetadataRequest,
): string {
  return JSON.stringify(
    PostApiUserAgentsMetadataRequest$outboundSchema.parse(
      postApiUserAgentsMetadataRequest,
    ),
  );
}

export function postApiUserAgentsMetadataRequestFromJSON(
  jsonString: string,
): SafeParseResult<PostApiUserAgentsMetadataRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostApiUserAgentsMetadataRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostApiUserAgentsMetadataRequest' from JSON`,
  );
}

/** @internal */
export const PostApiUserAgentsRequest$inboundSchema: z.ZodType<
  PostApiUserAgentsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
  description: z.string().optional(),
  imageUrl: z.string().optional(),
  metadata: z
    .lazy(() => PostApiUserAgentsMetadataRequest$inboundSchema)
    .optional(),
});

/** @internal */
export type PostApiUserAgentsRequest$Outbound = {
  name: string;
  description?: string | undefined;
  imageUrl?: string | undefined;
  metadata?: PostApiUserAgentsMetadataRequest$Outbound | undefined;
};

/** @internal */
export const PostApiUserAgentsRequest$outboundSchema: z.ZodType<
  PostApiUserAgentsRequest$Outbound,
  z.ZodTypeDef,
  PostApiUserAgentsRequest
> = z.object({
  name: z.string(),
  description: z.string().optional(),
  imageUrl: z.string().optional(),
  metadata: z
    .lazy(() => PostApiUserAgentsMetadataRequest$outboundSchema)
    .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiUserAgentsRequest$ {
  /** @deprecated use `PostApiUserAgentsRequest$inboundSchema` instead. */
  export const inboundSchema = PostApiUserAgentsRequest$inboundSchema;
  /** @deprecated use `PostApiUserAgentsRequest$outboundSchema` instead. */
  export const outboundSchema = PostApiUserAgentsRequest$outboundSchema;
  /** @deprecated use `PostApiUserAgentsRequest$Outbound` instead. */
  export type Outbound = PostApiUserAgentsRequest$Outbound;
}

export function postApiUserAgentsRequestToJSON(
  postApiUserAgentsRequest: PostApiUserAgentsRequest,
): string {
  return JSON.stringify(
    PostApiUserAgentsRequest$outboundSchema.parse(postApiUserAgentsRequest),
  );
}

export function postApiUserAgentsRequestFromJSON(
  jsonString: string,
): SafeParseResult<PostApiUserAgentsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostApiUserAgentsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostApiUserAgentsRequest' from JSON`,
  );
}

/** @internal */
export const PostApiUserAgentsAgentMetadata$inboundSchema: z.ZodType<
  PostApiUserAgentsAgentMetadata,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type PostApiUserAgentsAgentMetadata$Outbound = {};

/** @internal */
export const PostApiUserAgentsAgentMetadata$outboundSchema: z.ZodType<
  PostApiUserAgentsAgentMetadata$Outbound,
  z.ZodTypeDef,
  PostApiUserAgentsAgentMetadata
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiUserAgentsAgentMetadata$ {
  /** @deprecated use `PostApiUserAgentsAgentMetadata$inboundSchema` instead. */
  export const inboundSchema = PostApiUserAgentsAgentMetadata$inboundSchema;
  /** @deprecated use `PostApiUserAgentsAgentMetadata$outboundSchema` instead. */
  export const outboundSchema = PostApiUserAgentsAgentMetadata$outboundSchema;
  /** @deprecated use `PostApiUserAgentsAgentMetadata$Outbound` instead. */
  export type Outbound = PostApiUserAgentsAgentMetadata$Outbound;
}

export function postApiUserAgentsAgentMetadataToJSON(
  postApiUserAgentsAgentMetadata: PostApiUserAgentsAgentMetadata,
): string {
  return JSON.stringify(
    PostApiUserAgentsAgentMetadata$outboundSchema.parse(
      postApiUserAgentsAgentMetadata,
    ),
  );
}

export function postApiUserAgentsAgentMetadataFromJSON(
  jsonString: string,
): SafeParseResult<PostApiUserAgentsAgentMetadata, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostApiUserAgentsAgentMetadata$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostApiUserAgentsAgentMetadata' from JSON`,
  );
}

/** @internal */
export const PostApiUserAgentsStatus$inboundSchema: z.ZodNativeEnum<
  typeof PostApiUserAgentsStatus
> = z.nativeEnum(PostApiUserAgentsStatus);

/** @internal */
export const PostApiUserAgentsStatus$outboundSchema: z.ZodNativeEnum<
  typeof PostApiUserAgentsStatus
> = PostApiUserAgentsStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiUserAgentsStatus$ {
  /** @deprecated use `PostApiUserAgentsStatus$inboundSchema` instead. */
  export const inboundSchema = PostApiUserAgentsStatus$inboundSchema;
  /** @deprecated use `PostApiUserAgentsStatus$outboundSchema` instead. */
  export const outboundSchema = PostApiUserAgentsStatus$outboundSchema;
}

/** @internal */
export const PostApiUserAgentsAgent$inboundSchema: z.ZodType<
  PostApiUserAgentsAgent,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().optional(),
  ownerId: z.string().optional(),
  walletAddress: z.nullable(z.string()).optional(),
  name: z.string().optional(),
  email: z.nullable(z.string()).optional(),
  description: z.nullable(z.string()).optional(),
  imageUrl: z.nullable(z.string()).optional(),
  apiKey: z.string().optional(),
  metadata: z
    .nullable(z.lazy(() => PostApiUserAgentsAgentMetadata$inboundSchema))
    .optional(),
  status: PostApiUserAgentsStatus$inboundSchema.optional(),
  createdAt: z
    .string()
    .datetime({ offset: true })
    .transform((v) => new Date(v))
    .optional(),
  updatedAt: z
    .string()
    .datetime({ offset: true })
    .transform((v) => new Date(v))
    .optional(),
});

/** @internal */
export type PostApiUserAgentsAgent$Outbound = {
  id?: string | undefined;
  ownerId?: string | undefined;
  walletAddress?: string | null | undefined;
  name?: string | undefined;
  email?: string | null | undefined;
  description?: string | null | undefined;
  imageUrl?: string | null | undefined;
  apiKey?: string | undefined;
  metadata?: PostApiUserAgentsAgentMetadata$Outbound | null | undefined;
  status?: string | undefined;
  createdAt?: string | undefined;
  updatedAt?: string | undefined;
};

/** @internal */
export const PostApiUserAgentsAgent$outboundSchema: z.ZodType<
  PostApiUserAgentsAgent$Outbound,
  z.ZodTypeDef,
  PostApiUserAgentsAgent
> = z.object({
  id: z.string().optional(),
  ownerId: z.string().optional(),
  walletAddress: z.nullable(z.string()).optional(),
  name: z.string().optional(),
  email: z.nullable(z.string()).optional(),
  description: z.nullable(z.string()).optional(),
  imageUrl: z.nullable(z.string()).optional(),
  apiKey: z.string().optional(),
  metadata: z
    .nullable(z.lazy(() => PostApiUserAgentsAgentMetadata$outboundSchema))
    .optional(),
  status: PostApiUserAgentsStatus$outboundSchema.optional(),
  createdAt: z
    .date()
    .transform((v) => v.toISOString())
    .optional(),
  updatedAt: z
    .date()
    .transform((v) => v.toISOString())
    .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiUserAgentsAgent$ {
  /** @deprecated use `PostApiUserAgentsAgent$inboundSchema` instead. */
  export const inboundSchema = PostApiUserAgentsAgent$inboundSchema;
  /** @deprecated use `PostApiUserAgentsAgent$outboundSchema` instead. */
  export const outboundSchema = PostApiUserAgentsAgent$outboundSchema;
  /** @deprecated use `PostApiUserAgentsAgent$Outbound` instead. */
  export type Outbound = PostApiUserAgentsAgent$Outbound;
}

export function postApiUserAgentsAgentToJSON(
  postApiUserAgentsAgent: PostApiUserAgentsAgent,
): string {
  return JSON.stringify(
    PostApiUserAgentsAgent$outboundSchema.parse(postApiUserAgentsAgent),
  );
}

export function postApiUserAgentsAgentFromJSON(
  jsonString: string,
): SafeParseResult<PostApiUserAgentsAgent, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostApiUserAgentsAgent$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostApiUserAgentsAgent' from JSON`,
  );
}

/** @internal */
export const PostApiUserAgentsResponse$inboundSchema: z.ZodType<
  PostApiUserAgentsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  success: z.boolean().optional(),
  agent: z.lazy(() => PostApiUserAgentsAgent$inboundSchema).optional(),
});

/** @internal */
export type PostApiUserAgentsResponse$Outbound = {
  success?: boolean | undefined;
  agent?: PostApiUserAgentsAgent$Outbound | undefined;
};

/** @internal */
export const PostApiUserAgentsResponse$outboundSchema: z.ZodType<
  PostApiUserAgentsResponse$Outbound,
  z.ZodTypeDef,
  PostApiUserAgentsResponse
> = z.object({
  success: z.boolean().optional(),
  agent: z.lazy(() => PostApiUserAgentsAgent$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiUserAgentsResponse$ {
  /** @deprecated use `PostApiUserAgentsResponse$inboundSchema` instead. */
  export const inboundSchema = PostApiUserAgentsResponse$inboundSchema;
  /** @deprecated use `PostApiUserAgentsResponse$outboundSchema` instead. */
  export const outboundSchema = PostApiUserAgentsResponse$outboundSchema;
  /** @deprecated use `PostApiUserAgentsResponse$Outbound` instead. */
  export type Outbound = PostApiUserAgentsResponse$Outbound;
}

export function postApiUserAgentsResponseToJSON(
  postApiUserAgentsResponse: PostApiUserAgentsResponse,
): string {
  return JSON.stringify(
    PostApiUserAgentsResponse$outboundSchema.parse(postApiUserAgentsResponse),
  );
}

export function postApiUserAgentsResponseFromJSON(
  jsonString: string,
): SafeParseResult<PostApiUserAgentsResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostApiUserAgentsResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostApiUserAgentsResponse' from JSON`,
  );
}
