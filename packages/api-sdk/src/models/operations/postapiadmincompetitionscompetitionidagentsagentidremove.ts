/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";

import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveRequestBody =
  {
    /**
     * Reason for removing the agent
     */
    reason: string;
  };

export type PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveRequest = {
  /**
   * ID of the competition
   */
  competitionId: string;
  /**
   * ID of the agent to remove
   */
  agentId: string;
  requestBody: PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveRequestBody;
};

export type PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveAgent = {
  id?: string | undefined;
  name?: string | undefined;
  /**
   * Agent handle
   */
  handle?: string | undefined;
};

export type PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveCompetition =
  {
    id?: string | undefined;
    name?: string | undefined;
  };

/**
 * Agent removed from competition successfully
 */
export type PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveResponse = {
  /**
   * Operation success status
   */
  success?: boolean | undefined;
  /**
   * Success message
   */
  message?: string | undefined;
  agent?:
    | PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveAgent
    | undefined;
  competition?:
    | PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveCompetition
    | undefined;
  /**
   * Reason for removal
   */
  reason?: string | undefined;
};

/** @internal */
export const PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveRequestBody$inboundSchema: z.ZodType<
  PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  reason: z.string(),
});

/** @internal */
export type PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveRequestBody$Outbound =
  {
    reason: string;
  };

/** @internal */
export const PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveRequestBody$outboundSchema: z.ZodType<
  PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveRequestBody$Outbound,
  z.ZodTypeDef,
  PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveRequestBody
> = z.object({
  reason: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveRequestBody$ {
  /** @deprecated use `PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveRequestBody$inboundSchema;
  /** @deprecated use `PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveRequestBody$outboundSchema;
  /** @deprecated use `PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveRequestBody$Outbound` instead. */
  export type Outbound =
    PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveRequestBody$Outbound;
}

export function postApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveRequestBodyToJSON(
  postApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveRequestBody: PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveRequestBody,
): string {
  return JSON.stringify(
    PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveRequestBody$outboundSchema.parse(
      postApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveRequestBody,
    ),
  );
}

export function postApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveRequestBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveRequestBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveRequestBody' from JSON`,
  );
}

/** @internal */
export const PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveRequest$inboundSchema: z.ZodType<
  PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveRequest,
  z.ZodTypeDef,
  unknown
> = z
  .object({
    competitionId: z.string(),
    agentId: z.string(),
    RequestBody: z.lazy(
      () =>
        PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveRequestBody$inboundSchema,
    ),
  })
  .transform((v) => {
    return remap$(v, {
      RequestBody: "requestBody",
    });
  });

/** @internal */
export type PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveRequest$Outbound =
  {
    competitionId: string;
    agentId: string;
    RequestBody: PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveRequestBody$Outbound;
  };

/** @internal */
export const PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveRequest$outboundSchema: z.ZodType<
  PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveRequest$Outbound,
  z.ZodTypeDef,
  PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveRequest
> = z
  .object({
    competitionId: z.string(),
    agentId: z.string(),
    requestBody: z.lazy(
      () =>
        PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveRequestBody$outboundSchema,
    ),
  })
  .transform((v) => {
    return remap$(v, {
      requestBody: "RequestBody",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveRequest$ {
  /** @deprecated use `PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveRequest$inboundSchema` instead. */
  export const inboundSchema =
    PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveRequest$inboundSchema;
  /** @deprecated use `PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveRequest$outboundSchema` instead. */
  export const outboundSchema =
    PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveRequest$outboundSchema;
  /** @deprecated use `PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveRequest$Outbound` instead. */
  export type Outbound =
    PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveRequest$Outbound;
}

export function postApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveRequestToJSON(
  postApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveRequest: PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveRequest,
): string {
  return JSON.stringify(
    PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveRequest$outboundSchema.parse(
      postApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveRequest,
    ),
  );
}

export function postApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveRequest' from JSON`,
  );
}

/** @internal */
export const PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveAgent$inboundSchema: z.ZodType<
  PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveAgent,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().optional(),
  name: z.string().optional(),
  handle: z.string().optional(),
});

/** @internal */
export type PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveAgent$Outbound =
  {
    id?: string | undefined;
    name?: string | undefined;
    handle?: string | undefined;
  };

/** @internal */
export const PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveAgent$outboundSchema: z.ZodType<
  PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveAgent$Outbound,
  z.ZodTypeDef,
  PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveAgent
> = z.object({
  id: z.string().optional(),
  name: z.string().optional(),
  handle: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveAgent$ {
  /** @deprecated use `PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveAgent$inboundSchema` instead. */
  export const inboundSchema =
    PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveAgent$inboundSchema;
  /** @deprecated use `PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveAgent$outboundSchema` instead. */
  export const outboundSchema =
    PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveAgent$outboundSchema;
  /** @deprecated use `PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveAgent$Outbound` instead. */
  export type Outbound =
    PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveAgent$Outbound;
}

export function postApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveAgentToJSON(
  postApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveAgent: PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveAgent,
): string {
  return JSON.stringify(
    PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveAgent$outboundSchema.parse(
      postApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveAgent,
    ),
  );
}

export function postApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveAgentFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveAgent,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveAgent$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveAgent' from JSON`,
  );
}

/** @internal */
export const PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveCompetition$inboundSchema: z.ZodType<
  PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveCompetition,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().optional(),
  name: z.string().optional(),
});

/** @internal */
export type PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveCompetition$Outbound =
  {
    id?: string | undefined;
    name?: string | undefined;
  };

/** @internal */
export const PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveCompetition$outboundSchema: z.ZodType<
  PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveCompetition$Outbound,
  z.ZodTypeDef,
  PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveCompetition
> = z.object({
  id: z.string().optional(),
  name: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveCompetition$ {
  /** @deprecated use `PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveCompetition$inboundSchema` instead. */
  export const inboundSchema =
    PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveCompetition$inboundSchema;
  /** @deprecated use `PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveCompetition$outboundSchema` instead. */
  export const outboundSchema =
    PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveCompetition$outboundSchema;
  /** @deprecated use `PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveCompetition$Outbound` instead. */
  export type Outbound =
    PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveCompetition$Outbound;
}

export function postApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveCompetitionToJSON(
  postApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveCompetition: PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveCompetition,
): string {
  return JSON.stringify(
    PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveCompetition$outboundSchema.parse(
      postApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveCompetition,
    ),
  );
}

export function postApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveCompetitionFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveCompetition,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveCompetition$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveCompetition' from JSON`,
  );
}

/** @internal */
export const PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveResponse$inboundSchema: z.ZodType<
  PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  success: z.boolean().optional(),
  message: z.string().optional(),
  agent: z
    .lazy(
      () =>
        PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveAgent$inboundSchema,
    )
    .optional(),
  competition: z
    .lazy(
      () =>
        PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveCompetition$inboundSchema,
    )
    .optional(),
  reason: z.string().optional(),
});

/** @internal */
export type PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveResponse$Outbound =
  {
    success?: boolean | undefined;
    message?: string | undefined;
    agent?:
      | PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveAgent$Outbound
      | undefined;
    competition?:
      | PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveCompetition$Outbound
      | undefined;
    reason?: string | undefined;
  };

/** @internal */
export const PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveResponse$outboundSchema: z.ZodType<
  PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveResponse$Outbound,
  z.ZodTypeDef,
  PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveResponse
> = z.object({
  success: z.boolean().optional(),
  message: z.string().optional(),
  agent: z
    .lazy(
      () =>
        PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveAgent$outboundSchema,
    )
    .optional(),
  competition: z
    .lazy(
      () =>
        PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveCompetition$outboundSchema,
    )
    .optional(),
  reason: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveResponse$ {
  /** @deprecated use `PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveResponse$inboundSchema` instead. */
  export const inboundSchema =
    PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveResponse$inboundSchema;
  /** @deprecated use `PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveResponse$outboundSchema` instead. */
  export const outboundSchema =
    PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveResponse$outboundSchema;
  /** @deprecated use `PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveResponse$Outbound` instead. */
  export type Outbound =
    PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveResponse$Outbound;
}

export function postApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveResponseToJSON(
  postApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveResponse: PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveResponse,
): string {
  return JSON.stringify(
    PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveResponse$outboundSchema.parse(
      postApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveResponse,
    ),
  );
}

export function postApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostApiAdminCompetitionsCompetitionIdAgentsAgentIdRemoveResponse' from JSON`,
  );
}
