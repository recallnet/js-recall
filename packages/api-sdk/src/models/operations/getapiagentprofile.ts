/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";

import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const GetApiAgentProfileStatus = {
  Active: "active",
  Suspended: "suspended",
  Deleted: "deleted",
} as const;
export type GetApiAgentProfileStatus = ClosedEnum<
  typeof GetApiAgentProfileStatus
>;

export type GetApiAgentProfileAgent = {
  id?: string | undefined;
  ownerId?: string | undefined;
  walletAddress?: string | undefined;
  name?: string | undefined;
  description?: string | undefined;
  imageUrl?: string | undefined;
  status?: GetApiAgentProfileStatus | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
};

export type Owner = {
  id?: string | undefined;
  walletAddress?: string | undefined;
  name?: string | undefined;
  email?: string | undefined;
  imageUrl?: string | undefined;
};

/**
 * Agent profile retrieved successfully
 */
export type GetApiAgentProfileResponse = {
  success?: boolean | undefined;
  agent?: GetApiAgentProfileAgent | undefined;
  owner?: Owner | undefined;
};

/** @internal */
export const GetApiAgentProfileStatus$inboundSchema: z.ZodNativeEnum<
  typeof GetApiAgentProfileStatus
> = z.nativeEnum(GetApiAgentProfileStatus);

/** @internal */
export const GetApiAgentProfileStatus$outboundSchema: z.ZodNativeEnum<
  typeof GetApiAgentProfileStatus
> = GetApiAgentProfileStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiAgentProfileStatus$ {
  /** @deprecated use `GetApiAgentProfileStatus$inboundSchema` instead. */
  export const inboundSchema = GetApiAgentProfileStatus$inboundSchema;
  /** @deprecated use `GetApiAgentProfileStatus$outboundSchema` instead. */
  export const outboundSchema = GetApiAgentProfileStatus$outboundSchema;
}

/** @internal */
export const GetApiAgentProfileAgent$inboundSchema: z.ZodType<
  GetApiAgentProfileAgent,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().optional(),
  ownerId: z.string().optional(),
  walletAddress: z.string().optional(),
  name: z.string().optional(),
  description: z.string().optional(),
  imageUrl: z.string().optional(),
  status: GetApiAgentProfileStatus$inboundSchema.optional(),
  createdAt: z
    .string()
    .datetime({ offset: true })
    .transform((v) => new Date(v))
    .optional(),
  updatedAt: z
    .string()
    .datetime({ offset: true })
    .transform((v) => new Date(v))
    .optional(),
});

/** @internal */
export type GetApiAgentProfileAgent$Outbound = {
  id?: string | undefined;
  ownerId?: string | undefined;
  walletAddress?: string | undefined;
  name?: string | undefined;
  description?: string | undefined;
  imageUrl?: string | undefined;
  status?: string | undefined;
  createdAt?: string | undefined;
  updatedAt?: string | undefined;
};

/** @internal */
export const GetApiAgentProfileAgent$outboundSchema: z.ZodType<
  GetApiAgentProfileAgent$Outbound,
  z.ZodTypeDef,
  GetApiAgentProfileAgent
> = z.object({
  id: z.string().optional(),
  ownerId: z.string().optional(),
  walletAddress: z.string().optional(),
  name: z.string().optional(),
  description: z.string().optional(),
  imageUrl: z.string().optional(),
  status: GetApiAgentProfileStatus$outboundSchema.optional(),
  createdAt: z
    .date()
    .transform((v) => v.toISOString())
    .optional(),
  updatedAt: z
    .date()
    .transform((v) => v.toISOString())
    .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiAgentProfileAgent$ {
  /** @deprecated use `GetApiAgentProfileAgent$inboundSchema` instead. */
  export const inboundSchema = GetApiAgentProfileAgent$inboundSchema;
  /** @deprecated use `GetApiAgentProfileAgent$outboundSchema` instead. */
  export const outboundSchema = GetApiAgentProfileAgent$outboundSchema;
  /** @deprecated use `GetApiAgentProfileAgent$Outbound` instead. */
  export type Outbound = GetApiAgentProfileAgent$Outbound;
}

export function getApiAgentProfileAgentToJSON(
  getApiAgentProfileAgent: GetApiAgentProfileAgent,
): string {
  return JSON.stringify(
    GetApiAgentProfileAgent$outboundSchema.parse(getApiAgentProfileAgent),
  );
}

export function getApiAgentProfileAgentFromJSON(
  jsonString: string,
): SafeParseResult<GetApiAgentProfileAgent, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetApiAgentProfileAgent$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetApiAgentProfileAgent' from JSON`,
  );
}

/** @internal */
export const Owner$inboundSchema: z.ZodType<Owner, z.ZodTypeDef, unknown> =
  z.object({
    id: z.string().optional(),
    walletAddress: z.string().optional(),
    name: z.string().optional(),
    email: z.string().optional(),
    imageUrl: z.string().optional(),
  });

/** @internal */
export type Owner$Outbound = {
  id?: string | undefined;
  walletAddress?: string | undefined;
  name?: string | undefined;
  email?: string | undefined;
  imageUrl?: string | undefined;
};

/** @internal */
export const Owner$outboundSchema: z.ZodType<
  Owner$Outbound,
  z.ZodTypeDef,
  Owner
> = z.object({
  id: z.string().optional(),
  walletAddress: z.string().optional(),
  name: z.string().optional(),
  email: z.string().optional(),
  imageUrl: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Owner$ {
  /** @deprecated use `Owner$inboundSchema` instead. */
  export const inboundSchema = Owner$inboundSchema;
  /** @deprecated use `Owner$outboundSchema` instead. */
  export const outboundSchema = Owner$outboundSchema;
  /** @deprecated use `Owner$Outbound` instead. */
  export type Outbound = Owner$Outbound;
}

export function ownerToJSON(owner: Owner): string {
  return JSON.stringify(Owner$outboundSchema.parse(owner));
}

export function ownerFromJSON(
  jsonString: string,
): SafeParseResult<Owner, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Owner$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Owner' from JSON`,
  );
}

/** @internal */
export const GetApiAgentProfileResponse$inboundSchema: z.ZodType<
  GetApiAgentProfileResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  success: z.boolean().optional(),
  agent: z.lazy(() => GetApiAgentProfileAgent$inboundSchema).optional(),
  owner: z.lazy(() => Owner$inboundSchema).optional(),
});

/** @internal */
export type GetApiAgentProfileResponse$Outbound = {
  success?: boolean | undefined;
  agent?: GetApiAgentProfileAgent$Outbound | undefined;
  owner?: Owner$Outbound | undefined;
};

/** @internal */
export const GetApiAgentProfileResponse$outboundSchema: z.ZodType<
  GetApiAgentProfileResponse$Outbound,
  z.ZodTypeDef,
  GetApiAgentProfileResponse
> = z.object({
  success: z.boolean().optional(),
  agent: z.lazy(() => GetApiAgentProfileAgent$outboundSchema).optional(),
  owner: z.lazy(() => Owner$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiAgentProfileResponse$ {
  /** @deprecated use `GetApiAgentProfileResponse$inboundSchema` instead. */
  export const inboundSchema = GetApiAgentProfileResponse$inboundSchema;
  /** @deprecated use `GetApiAgentProfileResponse$outboundSchema` instead. */
  export const outboundSchema = GetApiAgentProfileResponse$outboundSchema;
  /** @deprecated use `GetApiAgentProfileResponse$Outbound` instead. */
  export type Outbound = GetApiAgentProfileResponse$Outbound;
}

export function getApiAgentProfileResponseToJSON(
  getApiAgentProfileResponse: GetApiAgentProfileResponse,
): string {
  return JSON.stringify(
    GetApiAgentProfileResponse$outboundSchema.parse(getApiAgentProfileResponse),
  );
}

export function getApiAgentProfileResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetApiAgentProfileResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetApiAgentProfileResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetApiAgentProfileResponse' from JSON`,
  );
}
