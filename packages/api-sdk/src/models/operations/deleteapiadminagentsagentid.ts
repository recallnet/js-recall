/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";

import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteApiAdminAgentsAgentIdRequest = {
  /**
   * ID of the agent to delete
   */
  agentId: string;
};

/**
 * Agent deleted successfully
 */
export type DeleteApiAdminAgentsAgentIdResponse = {
  /**
   * Operation success status
   */
  success?: boolean | undefined;
  /**
   * Success message
   */
  message?: string | undefined;
};

/** @internal */
export const DeleteApiAdminAgentsAgentIdRequest$inboundSchema: z.ZodType<
  DeleteApiAdminAgentsAgentIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  agentId: z.string(),
});

/** @internal */
export type DeleteApiAdminAgentsAgentIdRequest$Outbound = {
  agentId: string;
};

/** @internal */
export const DeleteApiAdminAgentsAgentIdRequest$outboundSchema: z.ZodType<
  DeleteApiAdminAgentsAgentIdRequest$Outbound,
  z.ZodTypeDef,
  DeleteApiAdminAgentsAgentIdRequest
> = z.object({
  agentId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiAdminAgentsAgentIdRequest$ {
  /** @deprecated use `DeleteApiAdminAgentsAgentIdRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteApiAdminAgentsAgentIdRequest$inboundSchema;
  /** @deprecated use `DeleteApiAdminAgentsAgentIdRequest$outboundSchema` instead. */
  export const outboundSchema =
    DeleteApiAdminAgentsAgentIdRequest$outboundSchema;
  /** @deprecated use `DeleteApiAdminAgentsAgentIdRequest$Outbound` instead. */
  export type Outbound = DeleteApiAdminAgentsAgentIdRequest$Outbound;
}

export function deleteApiAdminAgentsAgentIdRequestToJSON(
  deleteApiAdminAgentsAgentIdRequest: DeleteApiAdminAgentsAgentIdRequest,
): string {
  return JSON.stringify(
    DeleteApiAdminAgentsAgentIdRequest$outboundSchema.parse(
      deleteApiAdminAgentsAgentIdRequest,
    ),
  );
}

export function deleteApiAdminAgentsAgentIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteApiAdminAgentsAgentIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      DeleteApiAdminAgentsAgentIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteApiAdminAgentsAgentIdRequest' from JSON`,
  );
}

/** @internal */
export const DeleteApiAdminAgentsAgentIdResponse$inboundSchema: z.ZodType<
  DeleteApiAdminAgentsAgentIdResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  success: z.boolean().optional(),
  message: z.string().optional(),
});

/** @internal */
export type DeleteApiAdminAgentsAgentIdResponse$Outbound = {
  success?: boolean | undefined;
  message?: string | undefined;
};

/** @internal */
export const DeleteApiAdminAgentsAgentIdResponse$outboundSchema: z.ZodType<
  DeleteApiAdminAgentsAgentIdResponse$Outbound,
  z.ZodTypeDef,
  DeleteApiAdminAgentsAgentIdResponse
> = z.object({
  success: z.boolean().optional(),
  message: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiAdminAgentsAgentIdResponse$ {
  /** @deprecated use `DeleteApiAdminAgentsAgentIdResponse$inboundSchema` instead. */
  export const inboundSchema =
    DeleteApiAdminAgentsAgentIdResponse$inboundSchema;
  /** @deprecated use `DeleteApiAdminAgentsAgentIdResponse$outboundSchema` instead. */
  export const outboundSchema =
    DeleteApiAdminAgentsAgentIdResponse$outboundSchema;
  /** @deprecated use `DeleteApiAdminAgentsAgentIdResponse$Outbound` instead. */
  export type Outbound = DeleteApiAdminAgentsAgentIdResponse$Outbound;
}

export function deleteApiAdminAgentsAgentIdResponseToJSON(
  deleteApiAdminAgentsAgentIdResponse: DeleteApiAdminAgentsAgentIdResponse,
): string {
  return JSON.stringify(
    DeleteApiAdminAgentsAgentIdResponse$outboundSchema.parse(
      deleteApiAdminAgentsAgentIdResponse,
    ),
  );
}

export function deleteApiAdminAgentsAgentIdResponseFromJSON(
  jsonString: string,
): SafeParseResult<DeleteApiAdminAgentsAgentIdResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      DeleteApiAdminAgentsAgentIdResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteApiAdminAgentsAgentIdResponse' from JSON`,
  );
}
