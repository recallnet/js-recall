/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";

import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type PutApiUserAgentsAgentIdProfileSecurity = {
  siweSession: string;
};

/**
 * Optional metadata for the agent
 */
export type PutApiUserAgentsAgentIdProfileMetadataRequest = {};

export type PutApiUserAgentsAgentIdProfileRequestBody = {
  /**
   * Agent's display name
   */
  name?: string | undefined;
  /**
   * Agent description
   */
  description?: string | undefined;
  /**
   * URL to agent's profile image
   */
  imageUrl?: string | undefined;
  /**
   * Agent email
   */
  email?: string | undefined;
  /**
   * Optional metadata for the agent
   */
  metadata?: PutApiUserAgentsAgentIdProfileMetadataRequest | undefined;
};

export type PutApiUserAgentsAgentIdProfileRequest = {
  /**
   * The ID of the agent to update
   */
  agentId: string;
  requestBody: PutApiUserAgentsAgentIdProfileRequestBody;
};

export type PutApiUserAgentsAgentIdProfileAgentMetadata = {};

export const PutApiUserAgentsAgentIdProfileStatus = {
  Active: "active",
  Inactive: "inactive",
  Suspended: "suspended",
  Deleted: "deleted",
} as const;
export type PutApiUserAgentsAgentIdProfileStatus = ClosedEnum<
  typeof PutApiUserAgentsAgentIdProfileStatus
>;

export type PutApiUserAgentsAgentIdProfileAgent = {
  id?: string | undefined;
  ownerId?: string | undefined;
  walletAddress?: string | null | undefined;
  name?: string | undefined;
  email?: string | null | undefined;
  description?: string | undefined;
  imageUrl?: string | undefined;
  metadata?: PutApiUserAgentsAgentIdProfileAgentMetadata | null | undefined;
  status?: PutApiUserAgentsAgentIdProfileStatus | undefined;
  /**
   * Reason for deactivation (if status is inactive)
   */
  deactivationReason?: string | null | undefined;
  /**
   * Date when agent was deactivated (if status is inactive)
   */
  deactivationDate?: Date | null | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
};

/**
 * Agent profile updated successfully
 */
export type PutApiUserAgentsAgentIdProfileResponse = {
  success?: boolean | undefined;
  agent?: PutApiUserAgentsAgentIdProfileAgent | undefined;
};

/** @internal */
export const PutApiUserAgentsAgentIdProfileSecurity$inboundSchema: z.ZodType<
  PutApiUserAgentsAgentIdProfileSecurity,
  z.ZodTypeDef,
  unknown
> = z
  .object({
    SIWESession: z.string(),
  })
  .transform((v) => {
    return remap$(v, {
      SIWESession: "siweSession",
    });
  });

/** @internal */
export type PutApiUserAgentsAgentIdProfileSecurity$Outbound = {
  SIWESession: string;
};

/** @internal */
export const PutApiUserAgentsAgentIdProfileSecurity$outboundSchema: z.ZodType<
  PutApiUserAgentsAgentIdProfileSecurity$Outbound,
  z.ZodTypeDef,
  PutApiUserAgentsAgentIdProfileSecurity
> = z
  .object({
    siweSession: z.string(),
  })
  .transform((v) => {
    return remap$(v, {
      siweSession: "SIWESession",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiUserAgentsAgentIdProfileSecurity$ {
  /** @deprecated use `PutApiUserAgentsAgentIdProfileSecurity$inboundSchema` instead. */
  export const inboundSchema =
    PutApiUserAgentsAgentIdProfileSecurity$inboundSchema;
  /** @deprecated use `PutApiUserAgentsAgentIdProfileSecurity$outboundSchema` instead. */
  export const outboundSchema =
    PutApiUserAgentsAgentIdProfileSecurity$outboundSchema;
  /** @deprecated use `PutApiUserAgentsAgentIdProfileSecurity$Outbound` instead. */
  export type Outbound = PutApiUserAgentsAgentIdProfileSecurity$Outbound;
}

export function putApiUserAgentsAgentIdProfileSecurityToJSON(
  putApiUserAgentsAgentIdProfileSecurity: PutApiUserAgentsAgentIdProfileSecurity,
): string {
  return JSON.stringify(
    PutApiUserAgentsAgentIdProfileSecurity$outboundSchema.parse(
      putApiUserAgentsAgentIdProfileSecurity,
    ),
  );
}

export function putApiUserAgentsAgentIdProfileSecurityFromJSON(
  jsonString: string,
): SafeParseResult<PutApiUserAgentsAgentIdProfileSecurity, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiUserAgentsAgentIdProfileSecurity$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PutApiUserAgentsAgentIdProfileSecurity' from JSON`,
  );
}

/** @internal */
export const PutApiUserAgentsAgentIdProfileMetadataRequest$inboundSchema: z.ZodType<
  PutApiUserAgentsAgentIdProfileMetadataRequest,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type PutApiUserAgentsAgentIdProfileMetadataRequest$Outbound = {};

/** @internal */
export const PutApiUserAgentsAgentIdProfileMetadataRequest$outboundSchema: z.ZodType<
  PutApiUserAgentsAgentIdProfileMetadataRequest$Outbound,
  z.ZodTypeDef,
  PutApiUserAgentsAgentIdProfileMetadataRequest
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiUserAgentsAgentIdProfileMetadataRequest$ {
  /** @deprecated use `PutApiUserAgentsAgentIdProfileMetadataRequest$inboundSchema` instead. */
  export const inboundSchema =
    PutApiUserAgentsAgentIdProfileMetadataRequest$inboundSchema;
  /** @deprecated use `PutApiUserAgentsAgentIdProfileMetadataRequest$outboundSchema` instead. */
  export const outboundSchema =
    PutApiUserAgentsAgentIdProfileMetadataRequest$outboundSchema;
  /** @deprecated use `PutApiUserAgentsAgentIdProfileMetadataRequest$Outbound` instead. */
  export type Outbound = PutApiUserAgentsAgentIdProfileMetadataRequest$Outbound;
}

export function putApiUserAgentsAgentIdProfileMetadataRequestToJSON(
  putApiUserAgentsAgentIdProfileMetadataRequest: PutApiUserAgentsAgentIdProfileMetadataRequest,
): string {
  return JSON.stringify(
    PutApiUserAgentsAgentIdProfileMetadataRequest$outboundSchema.parse(
      putApiUserAgentsAgentIdProfileMetadataRequest,
    ),
  );
}

export function putApiUserAgentsAgentIdProfileMetadataRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiUserAgentsAgentIdProfileMetadataRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiUserAgentsAgentIdProfileMetadataRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PutApiUserAgentsAgentIdProfileMetadataRequest' from JSON`,
  );
}

/** @internal */
export const PutApiUserAgentsAgentIdProfileRequestBody$inboundSchema: z.ZodType<
  PutApiUserAgentsAgentIdProfileRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string().optional(),
  description: z.string().optional(),
  imageUrl: z.string().optional(),
  email: z.string().optional(),
  metadata: z
    .lazy(() => PutApiUserAgentsAgentIdProfileMetadataRequest$inboundSchema)
    .optional(),
});

/** @internal */
export type PutApiUserAgentsAgentIdProfileRequestBody$Outbound = {
  name?: string | undefined;
  description?: string | undefined;
  imageUrl?: string | undefined;
  email?: string | undefined;
  metadata?: PutApiUserAgentsAgentIdProfileMetadataRequest$Outbound | undefined;
};

/** @internal */
export const PutApiUserAgentsAgentIdProfileRequestBody$outboundSchema: z.ZodType<
  PutApiUserAgentsAgentIdProfileRequestBody$Outbound,
  z.ZodTypeDef,
  PutApiUserAgentsAgentIdProfileRequestBody
> = z.object({
  name: z.string().optional(),
  description: z.string().optional(),
  imageUrl: z.string().optional(),
  email: z.string().optional(),
  metadata: z
    .lazy(() => PutApiUserAgentsAgentIdProfileMetadataRequest$outboundSchema)
    .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiUserAgentsAgentIdProfileRequestBody$ {
  /** @deprecated use `PutApiUserAgentsAgentIdProfileRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    PutApiUserAgentsAgentIdProfileRequestBody$inboundSchema;
  /** @deprecated use `PutApiUserAgentsAgentIdProfileRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    PutApiUserAgentsAgentIdProfileRequestBody$outboundSchema;
  /** @deprecated use `PutApiUserAgentsAgentIdProfileRequestBody$Outbound` instead. */
  export type Outbound = PutApiUserAgentsAgentIdProfileRequestBody$Outbound;
}

export function putApiUserAgentsAgentIdProfileRequestBodyToJSON(
  putApiUserAgentsAgentIdProfileRequestBody: PutApiUserAgentsAgentIdProfileRequestBody,
): string {
  return JSON.stringify(
    PutApiUserAgentsAgentIdProfileRequestBody$outboundSchema.parse(
      putApiUserAgentsAgentIdProfileRequestBody,
    ),
  );
}

export function putApiUserAgentsAgentIdProfileRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiUserAgentsAgentIdProfileRequestBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiUserAgentsAgentIdProfileRequestBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PutApiUserAgentsAgentIdProfileRequestBody' from JSON`,
  );
}

/** @internal */
export const PutApiUserAgentsAgentIdProfileRequest$inboundSchema: z.ZodType<
  PutApiUserAgentsAgentIdProfileRequest,
  z.ZodTypeDef,
  unknown
> = z
  .object({
    agentId: z.string(),
    RequestBody: z.lazy(
      () => PutApiUserAgentsAgentIdProfileRequestBody$inboundSchema,
    ),
  })
  .transform((v) => {
    return remap$(v, {
      RequestBody: "requestBody",
    });
  });

/** @internal */
export type PutApiUserAgentsAgentIdProfileRequest$Outbound = {
  agentId: string;
  RequestBody: PutApiUserAgentsAgentIdProfileRequestBody$Outbound;
};

/** @internal */
export const PutApiUserAgentsAgentIdProfileRequest$outboundSchema: z.ZodType<
  PutApiUserAgentsAgentIdProfileRequest$Outbound,
  z.ZodTypeDef,
  PutApiUserAgentsAgentIdProfileRequest
> = z
  .object({
    agentId: z.string(),
    requestBody: z.lazy(
      () => PutApiUserAgentsAgentIdProfileRequestBody$outboundSchema,
    ),
  })
  .transform((v) => {
    return remap$(v, {
      requestBody: "RequestBody",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiUserAgentsAgentIdProfileRequest$ {
  /** @deprecated use `PutApiUserAgentsAgentIdProfileRequest$inboundSchema` instead. */
  export const inboundSchema =
    PutApiUserAgentsAgentIdProfileRequest$inboundSchema;
  /** @deprecated use `PutApiUserAgentsAgentIdProfileRequest$outboundSchema` instead. */
  export const outboundSchema =
    PutApiUserAgentsAgentIdProfileRequest$outboundSchema;
  /** @deprecated use `PutApiUserAgentsAgentIdProfileRequest$Outbound` instead. */
  export type Outbound = PutApiUserAgentsAgentIdProfileRequest$Outbound;
}

export function putApiUserAgentsAgentIdProfileRequestToJSON(
  putApiUserAgentsAgentIdProfileRequest: PutApiUserAgentsAgentIdProfileRequest,
): string {
  return JSON.stringify(
    PutApiUserAgentsAgentIdProfileRequest$outboundSchema.parse(
      putApiUserAgentsAgentIdProfileRequest,
    ),
  );
}

export function putApiUserAgentsAgentIdProfileRequestFromJSON(
  jsonString: string,
): SafeParseResult<PutApiUserAgentsAgentIdProfileRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiUserAgentsAgentIdProfileRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PutApiUserAgentsAgentIdProfileRequest' from JSON`,
  );
}

/** @internal */
export const PutApiUserAgentsAgentIdProfileAgentMetadata$inboundSchema: z.ZodType<
  PutApiUserAgentsAgentIdProfileAgentMetadata,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type PutApiUserAgentsAgentIdProfileAgentMetadata$Outbound = {};

/** @internal */
export const PutApiUserAgentsAgentIdProfileAgentMetadata$outboundSchema: z.ZodType<
  PutApiUserAgentsAgentIdProfileAgentMetadata$Outbound,
  z.ZodTypeDef,
  PutApiUserAgentsAgentIdProfileAgentMetadata
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiUserAgentsAgentIdProfileAgentMetadata$ {
  /** @deprecated use `PutApiUserAgentsAgentIdProfileAgentMetadata$inboundSchema` instead. */
  export const inboundSchema =
    PutApiUserAgentsAgentIdProfileAgentMetadata$inboundSchema;
  /** @deprecated use `PutApiUserAgentsAgentIdProfileAgentMetadata$outboundSchema` instead. */
  export const outboundSchema =
    PutApiUserAgentsAgentIdProfileAgentMetadata$outboundSchema;
  /** @deprecated use `PutApiUserAgentsAgentIdProfileAgentMetadata$Outbound` instead. */
  export type Outbound = PutApiUserAgentsAgentIdProfileAgentMetadata$Outbound;
}

export function putApiUserAgentsAgentIdProfileAgentMetadataToJSON(
  putApiUserAgentsAgentIdProfileAgentMetadata: PutApiUserAgentsAgentIdProfileAgentMetadata,
): string {
  return JSON.stringify(
    PutApiUserAgentsAgentIdProfileAgentMetadata$outboundSchema.parse(
      putApiUserAgentsAgentIdProfileAgentMetadata,
    ),
  );
}

export function putApiUserAgentsAgentIdProfileAgentMetadataFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiUserAgentsAgentIdProfileAgentMetadata,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiUserAgentsAgentIdProfileAgentMetadata$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PutApiUserAgentsAgentIdProfileAgentMetadata' from JSON`,
  );
}

/** @internal */
export const PutApiUserAgentsAgentIdProfileStatus$inboundSchema: z.ZodNativeEnum<
  typeof PutApiUserAgentsAgentIdProfileStatus
> = z.nativeEnum(PutApiUserAgentsAgentIdProfileStatus);

/** @internal */
export const PutApiUserAgentsAgentIdProfileStatus$outboundSchema: z.ZodNativeEnum<
  typeof PutApiUserAgentsAgentIdProfileStatus
> = PutApiUserAgentsAgentIdProfileStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiUserAgentsAgentIdProfileStatus$ {
  /** @deprecated use `PutApiUserAgentsAgentIdProfileStatus$inboundSchema` instead. */
  export const inboundSchema =
    PutApiUserAgentsAgentIdProfileStatus$inboundSchema;
  /** @deprecated use `PutApiUserAgentsAgentIdProfileStatus$outboundSchema` instead. */
  export const outboundSchema =
    PutApiUserAgentsAgentIdProfileStatus$outboundSchema;
}

/** @internal */
export const PutApiUserAgentsAgentIdProfileAgent$inboundSchema: z.ZodType<
  PutApiUserAgentsAgentIdProfileAgent,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().optional(),
  ownerId: z.string().optional(),
  walletAddress: z.nullable(z.string()).optional(),
  name: z.string().optional(),
  email: z.nullable(z.string()).optional(),
  description: z.string().optional(),
  imageUrl: z.string().optional(),
  metadata: z
    .nullable(
      z.lazy(() => PutApiUserAgentsAgentIdProfileAgentMetadata$inboundSchema),
    )
    .optional(),
  status: PutApiUserAgentsAgentIdProfileStatus$inboundSchema.optional(),
  deactivationReason: z.nullable(z.string()).optional(),
  deactivationDate: z
    .nullable(
      z
        .string()
        .datetime({ offset: true })
        .transform((v) => new Date(v)),
    )
    .optional(),
  createdAt: z
    .string()
    .datetime({ offset: true })
    .transform((v) => new Date(v))
    .optional(),
  updatedAt: z
    .string()
    .datetime({ offset: true })
    .transform((v) => new Date(v))
    .optional(),
});

/** @internal */
export type PutApiUserAgentsAgentIdProfileAgent$Outbound = {
  id?: string | undefined;
  ownerId?: string | undefined;
  walletAddress?: string | null | undefined;
  name?: string | undefined;
  email?: string | null | undefined;
  description?: string | undefined;
  imageUrl?: string | undefined;
  metadata?:
    | PutApiUserAgentsAgentIdProfileAgentMetadata$Outbound
    | null
    | undefined;
  status?: string | undefined;
  deactivationReason?: string | null | undefined;
  deactivationDate?: string | null | undefined;
  createdAt?: string | undefined;
  updatedAt?: string | undefined;
};

/** @internal */
export const PutApiUserAgentsAgentIdProfileAgent$outboundSchema: z.ZodType<
  PutApiUserAgentsAgentIdProfileAgent$Outbound,
  z.ZodTypeDef,
  PutApiUserAgentsAgentIdProfileAgent
> = z.object({
  id: z.string().optional(),
  ownerId: z.string().optional(),
  walletAddress: z.nullable(z.string()).optional(),
  name: z.string().optional(),
  email: z.nullable(z.string()).optional(),
  description: z.string().optional(),
  imageUrl: z.string().optional(),
  metadata: z
    .nullable(
      z.lazy(() => PutApiUserAgentsAgentIdProfileAgentMetadata$outboundSchema),
    )
    .optional(),
  status: PutApiUserAgentsAgentIdProfileStatus$outboundSchema.optional(),
  deactivationReason: z.nullable(z.string()).optional(),
  deactivationDate: z
    .nullable(z.date().transform((v) => v.toISOString()))
    .optional(),
  createdAt: z
    .date()
    .transform((v) => v.toISOString())
    .optional(),
  updatedAt: z
    .date()
    .transform((v) => v.toISOString())
    .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiUserAgentsAgentIdProfileAgent$ {
  /** @deprecated use `PutApiUserAgentsAgentIdProfileAgent$inboundSchema` instead. */
  export const inboundSchema =
    PutApiUserAgentsAgentIdProfileAgent$inboundSchema;
  /** @deprecated use `PutApiUserAgentsAgentIdProfileAgent$outboundSchema` instead. */
  export const outboundSchema =
    PutApiUserAgentsAgentIdProfileAgent$outboundSchema;
  /** @deprecated use `PutApiUserAgentsAgentIdProfileAgent$Outbound` instead. */
  export type Outbound = PutApiUserAgentsAgentIdProfileAgent$Outbound;
}

export function putApiUserAgentsAgentIdProfileAgentToJSON(
  putApiUserAgentsAgentIdProfileAgent: PutApiUserAgentsAgentIdProfileAgent,
): string {
  return JSON.stringify(
    PutApiUserAgentsAgentIdProfileAgent$outboundSchema.parse(
      putApiUserAgentsAgentIdProfileAgent,
    ),
  );
}

export function putApiUserAgentsAgentIdProfileAgentFromJSON(
  jsonString: string,
): SafeParseResult<PutApiUserAgentsAgentIdProfileAgent, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiUserAgentsAgentIdProfileAgent$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PutApiUserAgentsAgentIdProfileAgent' from JSON`,
  );
}

/** @internal */
export const PutApiUserAgentsAgentIdProfileResponse$inboundSchema: z.ZodType<
  PutApiUserAgentsAgentIdProfileResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  success: z.boolean().optional(),
  agent: z
    .lazy(() => PutApiUserAgentsAgentIdProfileAgent$inboundSchema)
    .optional(),
});

/** @internal */
export type PutApiUserAgentsAgentIdProfileResponse$Outbound = {
  success?: boolean | undefined;
  agent?: PutApiUserAgentsAgentIdProfileAgent$Outbound | undefined;
};

/** @internal */
export const PutApiUserAgentsAgentIdProfileResponse$outboundSchema: z.ZodType<
  PutApiUserAgentsAgentIdProfileResponse$Outbound,
  z.ZodTypeDef,
  PutApiUserAgentsAgentIdProfileResponse
> = z.object({
  success: z.boolean().optional(),
  agent: z
    .lazy(() => PutApiUserAgentsAgentIdProfileAgent$outboundSchema)
    .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiUserAgentsAgentIdProfileResponse$ {
  /** @deprecated use `PutApiUserAgentsAgentIdProfileResponse$inboundSchema` instead. */
  export const inboundSchema =
    PutApiUserAgentsAgentIdProfileResponse$inboundSchema;
  /** @deprecated use `PutApiUserAgentsAgentIdProfileResponse$outboundSchema` instead. */
  export const outboundSchema =
    PutApiUserAgentsAgentIdProfileResponse$outboundSchema;
  /** @deprecated use `PutApiUserAgentsAgentIdProfileResponse$Outbound` instead. */
  export type Outbound = PutApiUserAgentsAgentIdProfileResponse$Outbound;
}

export function putApiUserAgentsAgentIdProfileResponseToJSON(
  putApiUserAgentsAgentIdProfileResponse: PutApiUserAgentsAgentIdProfileResponse,
): string {
  return JSON.stringify(
    PutApiUserAgentsAgentIdProfileResponse$outboundSchema.parse(
      putApiUserAgentsAgentIdProfileResponse,
    ),
  );
}

export function putApiUserAgentsAgentIdProfileResponseFromJSON(
  jsonString: string,
): SafeParseResult<PutApiUserAgentsAgentIdProfileResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiUserAgentsAgentIdProfileResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PutApiUserAgentsAgentIdProfileResponse' from JSON`,
  );
}
