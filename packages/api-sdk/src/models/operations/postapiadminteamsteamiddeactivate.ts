/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";

import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type PostApiAdminTeamsTeamIdDeactivateRequestBody = {
  /**
   * Reason for deactivation
   */
  reason: string;
};

export type PostApiAdminTeamsTeamIdDeactivateRequest = {
  /**
   * ID of the team to deactivate
   */
  teamId: string;
  requestBody: PostApiAdminTeamsTeamIdDeactivateRequestBody;
};

export type PostApiAdminTeamsTeamIdDeactivateTeam = {
  /**
   * Team ID
   */
  id?: string | undefined;
  /**
   * Team name
   */
  name?: string | undefined;
  /**
   * Active status (will be false)
   */
  active?: boolean | undefined;
  /**
   * Reason for deactivation
   */
  deactivationReason?: string | undefined;
  /**
   * Date of deactivation
   */
  deactivationDate?: Date | undefined;
};

/**
 * Team deactivated successfully
 */
export type PostApiAdminTeamsTeamIdDeactivateResponse = {
  /**
   * Operation success status
   */
  success?: boolean | undefined;
  team?: PostApiAdminTeamsTeamIdDeactivateTeam | undefined;
};

/** @internal */
export const PostApiAdminTeamsTeamIdDeactivateRequestBody$inboundSchema: z.ZodType<
  PostApiAdminTeamsTeamIdDeactivateRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  reason: z.string(),
});

/** @internal */
export type PostApiAdminTeamsTeamIdDeactivateRequestBody$Outbound = {
  reason: string;
};

/** @internal */
export const PostApiAdminTeamsTeamIdDeactivateRequestBody$outboundSchema: z.ZodType<
  PostApiAdminTeamsTeamIdDeactivateRequestBody$Outbound,
  z.ZodTypeDef,
  PostApiAdminTeamsTeamIdDeactivateRequestBody
> = z.object({
  reason: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiAdminTeamsTeamIdDeactivateRequestBody$ {
  /** @deprecated use `PostApiAdminTeamsTeamIdDeactivateRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    PostApiAdminTeamsTeamIdDeactivateRequestBody$inboundSchema;
  /** @deprecated use `PostApiAdminTeamsTeamIdDeactivateRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    PostApiAdminTeamsTeamIdDeactivateRequestBody$outboundSchema;
  /** @deprecated use `PostApiAdminTeamsTeamIdDeactivateRequestBody$Outbound` instead. */
  export type Outbound = PostApiAdminTeamsTeamIdDeactivateRequestBody$Outbound;
}

export function postApiAdminTeamsTeamIdDeactivateRequestBodyToJSON(
  postApiAdminTeamsTeamIdDeactivateRequestBody: PostApiAdminTeamsTeamIdDeactivateRequestBody,
): string {
  return JSON.stringify(
    PostApiAdminTeamsTeamIdDeactivateRequestBody$outboundSchema.parse(
      postApiAdminTeamsTeamIdDeactivateRequestBody,
    ),
  );
}

export function postApiAdminTeamsTeamIdDeactivateRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiAdminTeamsTeamIdDeactivateRequestBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiAdminTeamsTeamIdDeactivateRequestBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostApiAdminTeamsTeamIdDeactivateRequestBody' from JSON`,
  );
}

/** @internal */
export const PostApiAdminTeamsTeamIdDeactivateRequest$inboundSchema: z.ZodType<
  PostApiAdminTeamsTeamIdDeactivateRequest,
  z.ZodTypeDef,
  unknown
> = z
  .object({
    teamId: z.string(),
    RequestBody: z.lazy(
      () => PostApiAdminTeamsTeamIdDeactivateRequestBody$inboundSchema,
    ),
  })
  .transform((v) => {
    return remap$(v, {
      RequestBody: "requestBody",
    });
  });

/** @internal */
export type PostApiAdminTeamsTeamIdDeactivateRequest$Outbound = {
  teamId: string;
  RequestBody: PostApiAdminTeamsTeamIdDeactivateRequestBody$Outbound;
};

/** @internal */
export const PostApiAdminTeamsTeamIdDeactivateRequest$outboundSchema: z.ZodType<
  PostApiAdminTeamsTeamIdDeactivateRequest$Outbound,
  z.ZodTypeDef,
  PostApiAdminTeamsTeamIdDeactivateRequest
> = z
  .object({
    teamId: z.string(),
    requestBody: z.lazy(
      () => PostApiAdminTeamsTeamIdDeactivateRequestBody$outboundSchema,
    ),
  })
  .transform((v) => {
    return remap$(v, {
      requestBody: "RequestBody",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiAdminTeamsTeamIdDeactivateRequest$ {
  /** @deprecated use `PostApiAdminTeamsTeamIdDeactivateRequest$inboundSchema` instead. */
  export const inboundSchema =
    PostApiAdminTeamsTeamIdDeactivateRequest$inboundSchema;
  /** @deprecated use `PostApiAdminTeamsTeamIdDeactivateRequest$outboundSchema` instead. */
  export const outboundSchema =
    PostApiAdminTeamsTeamIdDeactivateRequest$outboundSchema;
  /** @deprecated use `PostApiAdminTeamsTeamIdDeactivateRequest$Outbound` instead. */
  export type Outbound = PostApiAdminTeamsTeamIdDeactivateRequest$Outbound;
}

export function postApiAdminTeamsTeamIdDeactivateRequestToJSON(
  postApiAdminTeamsTeamIdDeactivateRequest: PostApiAdminTeamsTeamIdDeactivateRequest,
): string {
  return JSON.stringify(
    PostApiAdminTeamsTeamIdDeactivateRequest$outboundSchema.parse(
      postApiAdminTeamsTeamIdDeactivateRequest,
    ),
  );
}

export function postApiAdminTeamsTeamIdDeactivateRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiAdminTeamsTeamIdDeactivateRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiAdminTeamsTeamIdDeactivateRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostApiAdminTeamsTeamIdDeactivateRequest' from JSON`,
  );
}

/** @internal */
export const PostApiAdminTeamsTeamIdDeactivateTeam$inboundSchema: z.ZodType<
  PostApiAdminTeamsTeamIdDeactivateTeam,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().optional(),
  name: z.string().optional(),
  active: z.boolean().optional(),
  deactivationReason: z.string().optional(),
  deactivationDate: z
    .string()
    .datetime({ offset: true })
    .transform((v) => new Date(v))
    .optional(),
});

/** @internal */
export type PostApiAdminTeamsTeamIdDeactivateTeam$Outbound = {
  id?: string | undefined;
  name?: string | undefined;
  active?: boolean | undefined;
  deactivationReason?: string | undefined;
  deactivationDate?: string | undefined;
};

/** @internal */
export const PostApiAdminTeamsTeamIdDeactivateTeam$outboundSchema: z.ZodType<
  PostApiAdminTeamsTeamIdDeactivateTeam$Outbound,
  z.ZodTypeDef,
  PostApiAdminTeamsTeamIdDeactivateTeam
> = z.object({
  id: z.string().optional(),
  name: z.string().optional(),
  active: z.boolean().optional(),
  deactivationReason: z.string().optional(),
  deactivationDate: z
    .date()
    .transform((v) => v.toISOString())
    .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiAdminTeamsTeamIdDeactivateTeam$ {
  /** @deprecated use `PostApiAdminTeamsTeamIdDeactivateTeam$inboundSchema` instead. */
  export const inboundSchema =
    PostApiAdminTeamsTeamIdDeactivateTeam$inboundSchema;
  /** @deprecated use `PostApiAdminTeamsTeamIdDeactivateTeam$outboundSchema` instead. */
  export const outboundSchema =
    PostApiAdminTeamsTeamIdDeactivateTeam$outboundSchema;
  /** @deprecated use `PostApiAdminTeamsTeamIdDeactivateTeam$Outbound` instead. */
  export type Outbound = PostApiAdminTeamsTeamIdDeactivateTeam$Outbound;
}

export function postApiAdminTeamsTeamIdDeactivateTeamToJSON(
  postApiAdminTeamsTeamIdDeactivateTeam: PostApiAdminTeamsTeamIdDeactivateTeam,
): string {
  return JSON.stringify(
    PostApiAdminTeamsTeamIdDeactivateTeam$outboundSchema.parse(
      postApiAdminTeamsTeamIdDeactivateTeam,
    ),
  );
}

export function postApiAdminTeamsTeamIdDeactivateTeamFromJSON(
  jsonString: string,
): SafeParseResult<PostApiAdminTeamsTeamIdDeactivateTeam, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiAdminTeamsTeamIdDeactivateTeam$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostApiAdminTeamsTeamIdDeactivateTeam' from JSON`,
  );
}

/** @internal */
export const PostApiAdminTeamsTeamIdDeactivateResponse$inboundSchema: z.ZodType<
  PostApiAdminTeamsTeamIdDeactivateResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  success: z.boolean().optional(),
  team: z
    .lazy(() => PostApiAdminTeamsTeamIdDeactivateTeam$inboundSchema)
    .optional(),
});

/** @internal */
export type PostApiAdminTeamsTeamIdDeactivateResponse$Outbound = {
  success?: boolean | undefined;
  team?: PostApiAdminTeamsTeamIdDeactivateTeam$Outbound | undefined;
};

/** @internal */
export const PostApiAdminTeamsTeamIdDeactivateResponse$outboundSchema: z.ZodType<
  PostApiAdminTeamsTeamIdDeactivateResponse$Outbound,
  z.ZodTypeDef,
  PostApiAdminTeamsTeamIdDeactivateResponse
> = z.object({
  success: z.boolean().optional(),
  team: z
    .lazy(() => PostApiAdminTeamsTeamIdDeactivateTeam$outboundSchema)
    .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiAdminTeamsTeamIdDeactivateResponse$ {
  /** @deprecated use `PostApiAdminTeamsTeamIdDeactivateResponse$inboundSchema` instead. */
  export const inboundSchema =
    PostApiAdminTeamsTeamIdDeactivateResponse$inboundSchema;
  /** @deprecated use `PostApiAdminTeamsTeamIdDeactivateResponse$outboundSchema` instead. */
  export const outboundSchema =
    PostApiAdminTeamsTeamIdDeactivateResponse$outboundSchema;
  /** @deprecated use `PostApiAdminTeamsTeamIdDeactivateResponse$Outbound` instead. */
  export type Outbound = PostApiAdminTeamsTeamIdDeactivateResponse$Outbound;
}

export function postApiAdminTeamsTeamIdDeactivateResponseToJSON(
  postApiAdminTeamsTeamIdDeactivateResponse: PostApiAdminTeamsTeamIdDeactivateResponse,
): string {
  return JSON.stringify(
    PostApiAdminTeamsTeamIdDeactivateResponse$outboundSchema.parse(
      postApiAdminTeamsTeamIdDeactivateResponse,
    ),
  );
}

export function postApiAdminTeamsTeamIdDeactivateResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiAdminTeamsTeamIdDeactivateResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiAdminTeamsTeamIdDeactivateResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostApiAdminTeamsTeamIdDeactivateResponse' from JSON`,
  );
}
