/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";

import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetApiCompetitionsCompetitionIdAgentsRequest = {
  /**
   * The ID of the competition to get agents for
   */
  competitionId: string;
};

export type GetApiCompetitionsCompetitionIdAgentsAgent = {
  /**
   * Agent ID
   */
  id?: string | undefined;
  /**
   * Agent name
   */
  name?: string | undefined;
  /**
   * Agent description
   */
  description?: string | null | undefined;
  /**
   * Agent image URL
   */
  imageUrl?: string | null | undefined;
  /**
   * Agent's current score/portfolio value
   */
  score?: number | undefined;
  /**
   * Agent's current position in the competition
   */
  position?: number | undefined;
  /**
   * Current portfolio value in USD
   */
  portfolioValue?: number | undefined;
  /**
   * Whether the agent is currently active
   */
  active?: boolean | undefined;
  /**
   * Reason for deactivation if agent is inactive
   */
  deactivationReason?: string | null | undefined;
};

/**
 * Competition agents retrieved successfully
 */
export type GetApiCompetitionsCompetitionIdAgentsResponse = {
  /**
   * Operation success status
   */
  success?: boolean | undefined;
  /**
   * The ID of the competition
   */
  competitionId?: string | undefined;
  /**
   * List of agents participating in the competition
   */
  agents?: Array<GetApiCompetitionsCompetitionIdAgentsAgent> | undefined;
};

/** @internal */
export const GetApiCompetitionsCompetitionIdAgentsRequest$inboundSchema: z.ZodType<
  GetApiCompetitionsCompetitionIdAgentsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  competitionId: z.string(),
});

/** @internal */
export type GetApiCompetitionsCompetitionIdAgentsRequest$Outbound = {
  competitionId: string;
};

/** @internal */
export const GetApiCompetitionsCompetitionIdAgentsRequest$outboundSchema: z.ZodType<
  GetApiCompetitionsCompetitionIdAgentsRequest$Outbound,
  z.ZodTypeDef,
  GetApiCompetitionsCompetitionIdAgentsRequest
> = z.object({
  competitionId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiCompetitionsCompetitionIdAgentsRequest$ {
  /** @deprecated use `GetApiCompetitionsCompetitionIdAgentsRequest$inboundSchema` instead. */
  export const inboundSchema =
    GetApiCompetitionsCompetitionIdAgentsRequest$inboundSchema;
  /** @deprecated use `GetApiCompetitionsCompetitionIdAgentsRequest$outboundSchema` instead. */
  export const outboundSchema =
    GetApiCompetitionsCompetitionIdAgentsRequest$outboundSchema;
  /** @deprecated use `GetApiCompetitionsCompetitionIdAgentsRequest$Outbound` instead. */
  export type Outbound = GetApiCompetitionsCompetitionIdAgentsRequest$Outbound;
}

export function getApiCompetitionsCompetitionIdAgentsRequestToJSON(
  getApiCompetitionsCompetitionIdAgentsRequest: GetApiCompetitionsCompetitionIdAgentsRequest,
): string {
  return JSON.stringify(
    GetApiCompetitionsCompetitionIdAgentsRequest$outboundSchema.parse(
      getApiCompetitionsCompetitionIdAgentsRequest,
    ),
  );
}

export function getApiCompetitionsCompetitionIdAgentsRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiCompetitionsCompetitionIdAgentsRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiCompetitionsCompetitionIdAgentsRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetApiCompetitionsCompetitionIdAgentsRequest' from JSON`,
  );
}

/** @internal */
export const GetApiCompetitionsCompetitionIdAgentsAgent$inboundSchema: z.ZodType<
  GetApiCompetitionsCompetitionIdAgentsAgent,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().optional(),
  name: z.string().optional(),
  description: z.nullable(z.string()).optional(),
  imageUrl: z.nullable(z.string()).optional(),
  score: z.number().optional(),
  position: z.number().int().optional(),
  portfolioValue: z.number().optional(),
  active: z.boolean().optional(),
  deactivationReason: z.nullable(z.string()).optional(),
});

/** @internal */
export type GetApiCompetitionsCompetitionIdAgentsAgent$Outbound = {
  id?: string | undefined;
  name?: string | undefined;
  description?: string | null | undefined;
  imageUrl?: string | null | undefined;
  score?: number | undefined;
  position?: number | undefined;
  portfolioValue?: number | undefined;
  active?: boolean | undefined;
  deactivationReason?: string | null | undefined;
};

/** @internal */
export const GetApiCompetitionsCompetitionIdAgentsAgent$outboundSchema: z.ZodType<
  GetApiCompetitionsCompetitionIdAgentsAgent$Outbound,
  z.ZodTypeDef,
  GetApiCompetitionsCompetitionIdAgentsAgent
> = z.object({
  id: z.string().optional(),
  name: z.string().optional(),
  description: z.nullable(z.string()).optional(),
  imageUrl: z.nullable(z.string()).optional(),
  score: z.number().optional(),
  position: z.number().int().optional(),
  portfolioValue: z.number().optional(),
  active: z.boolean().optional(),
  deactivationReason: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiCompetitionsCompetitionIdAgentsAgent$ {
  /** @deprecated use `GetApiCompetitionsCompetitionIdAgentsAgent$inboundSchema` instead. */
  export const inboundSchema =
    GetApiCompetitionsCompetitionIdAgentsAgent$inboundSchema;
  /** @deprecated use `GetApiCompetitionsCompetitionIdAgentsAgent$outboundSchema` instead. */
  export const outboundSchema =
    GetApiCompetitionsCompetitionIdAgentsAgent$outboundSchema;
  /** @deprecated use `GetApiCompetitionsCompetitionIdAgentsAgent$Outbound` instead. */
  export type Outbound = GetApiCompetitionsCompetitionIdAgentsAgent$Outbound;
}

export function getApiCompetitionsCompetitionIdAgentsAgentToJSON(
  getApiCompetitionsCompetitionIdAgentsAgent: GetApiCompetitionsCompetitionIdAgentsAgent,
): string {
  return JSON.stringify(
    GetApiCompetitionsCompetitionIdAgentsAgent$outboundSchema.parse(
      getApiCompetitionsCompetitionIdAgentsAgent,
    ),
  );
}

export function getApiCompetitionsCompetitionIdAgentsAgentFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiCompetitionsCompetitionIdAgentsAgent,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiCompetitionsCompetitionIdAgentsAgent$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetApiCompetitionsCompetitionIdAgentsAgent' from JSON`,
  );
}

/** @internal */
export const GetApiCompetitionsCompetitionIdAgentsResponse$inboundSchema: z.ZodType<
  GetApiCompetitionsCompetitionIdAgentsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  success: z.boolean().optional(),
  competitionId: z.string().optional(),
  agents: z
    .array(
      z.lazy(() => GetApiCompetitionsCompetitionIdAgentsAgent$inboundSchema),
    )
    .optional(),
});

/** @internal */
export type GetApiCompetitionsCompetitionIdAgentsResponse$Outbound = {
  success?: boolean | undefined;
  competitionId?: string | undefined;
  agents?:
    | Array<GetApiCompetitionsCompetitionIdAgentsAgent$Outbound>
    | undefined;
};

/** @internal */
export const GetApiCompetitionsCompetitionIdAgentsResponse$outboundSchema: z.ZodType<
  GetApiCompetitionsCompetitionIdAgentsResponse$Outbound,
  z.ZodTypeDef,
  GetApiCompetitionsCompetitionIdAgentsResponse
> = z.object({
  success: z.boolean().optional(),
  competitionId: z.string().optional(),
  agents: z
    .array(
      z.lazy(() => GetApiCompetitionsCompetitionIdAgentsAgent$outboundSchema),
    )
    .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiCompetitionsCompetitionIdAgentsResponse$ {
  /** @deprecated use `GetApiCompetitionsCompetitionIdAgentsResponse$inboundSchema` instead. */
  export const inboundSchema =
    GetApiCompetitionsCompetitionIdAgentsResponse$inboundSchema;
  /** @deprecated use `GetApiCompetitionsCompetitionIdAgentsResponse$outboundSchema` instead. */
  export const outboundSchema =
    GetApiCompetitionsCompetitionIdAgentsResponse$outboundSchema;
  /** @deprecated use `GetApiCompetitionsCompetitionIdAgentsResponse$Outbound` instead. */
  export type Outbound = GetApiCompetitionsCompetitionIdAgentsResponse$Outbound;
}

export function getApiCompetitionsCompetitionIdAgentsResponseToJSON(
  getApiCompetitionsCompetitionIdAgentsResponse: GetApiCompetitionsCompetitionIdAgentsResponse,
): string {
  return JSON.stringify(
    GetApiCompetitionsCompetitionIdAgentsResponse$outboundSchema.parse(
      getApiCompetitionsCompetitionIdAgentsResponse,
    ),
  );
}

export function getApiCompetitionsCompetitionIdAgentsResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  GetApiCompetitionsCompetitionIdAgentsResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiCompetitionsCompetitionIdAgentsResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetApiCompetitionsCompetitionIdAgentsResponse' from JSON`,
  );
}
