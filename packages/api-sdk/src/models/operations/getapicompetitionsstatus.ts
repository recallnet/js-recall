/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";

import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Competition status
 */
export const GetApiCompetitionsStatusStatus = {
  Pending: "pending",
  Active: "active",
  Completed: "completed",
} as const;
/**
 * Competition status
 */
export type GetApiCompetitionsStatusStatus = ClosedEnum<
  typeof GetApiCompetitionsStatusStatus
>;

/**
 * The type of cross-chain trading allowed in this competition
 */
export const GetApiCompetitionsStatusCrossChainTradingType = {
  DisallowAll: "disallowAll",
  DisallowXParent: "disallowXParent",
  Allow: "allow",
} as const;
/**
 * The type of cross-chain trading allowed in this competition
 */
export type GetApiCompetitionsStatusCrossChainTradingType = ClosedEnum<
  typeof GetApiCompetitionsStatusCrossChainTradingType
>;

export type GetApiCompetitionsStatusCompetition = {
  /**
   * Competition ID
   */
  id?: string | undefined;
  /**
   * Competition name
   */
  name?: string | undefined;
  /**
   * Competition description
   */
  description?: string | null | undefined;
  /**
   * External URL for competition details
   */
  externalLink?: string | null | undefined;
  /**
   * URL to competition image
   */
  imageUrl?: string | null | undefined;
  /**
   * Competition start date
   */
  startDate?: Date | undefined;
  /**
   * Competition end date
   */
  endDate?: Date | null | undefined;
  /**
   * Competition status
   */
  status?: GetApiCompetitionsStatusStatus | undefined;
  /**
   * The type of cross-chain trading allowed in this competition
   */
  crossChainTradingType?:
    | GetApiCompetitionsStatusCrossChainTradingType
    | undefined;
  /**
   * When the competition was created
   */
  createdAt?: Date | undefined;
  /**
   * When the competition was last updated
   */
  updatedAt?: Date | undefined;
};

/**
 * Competition status
 */
export type GetApiCompetitionsStatusResponse = {
  /**
   * Operation success status
   */
  success?: boolean | undefined;
  /**
   * Whether there is an active competition
   */
  active?: boolean | undefined;
  competition?: GetApiCompetitionsStatusCompetition | null | undefined;
  /**
   * Additional information about the competition status
   */
  message?: string | null | undefined;
  /**
   * Whether the authenticated agent is participating in the competition
   */
  participating?: boolean | null | undefined;
};

/** @internal */
export const GetApiCompetitionsStatusStatus$inboundSchema: z.ZodNativeEnum<
  typeof GetApiCompetitionsStatusStatus
> = z.nativeEnum(GetApiCompetitionsStatusStatus);

/** @internal */
export const GetApiCompetitionsStatusStatus$outboundSchema: z.ZodNativeEnum<
  typeof GetApiCompetitionsStatusStatus
> = GetApiCompetitionsStatusStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiCompetitionsStatusStatus$ {
  /** @deprecated use `GetApiCompetitionsStatusStatus$inboundSchema` instead. */
  export const inboundSchema = GetApiCompetitionsStatusStatus$inboundSchema;
  /** @deprecated use `GetApiCompetitionsStatusStatus$outboundSchema` instead. */
  export const outboundSchema = GetApiCompetitionsStatusStatus$outboundSchema;
}

/** @internal */
export const GetApiCompetitionsStatusCrossChainTradingType$inboundSchema: z.ZodNativeEnum<
  typeof GetApiCompetitionsStatusCrossChainTradingType
> = z.nativeEnum(GetApiCompetitionsStatusCrossChainTradingType);

/** @internal */
export const GetApiCompetitionsStatusCrossChainTradingType$outboundSchema: z.ZodNativeEnum<
  typeof GetApiCompetitionsStatusCrossChainTradingType
> = GetApiCompetitionsStatusCrossChainTradingType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiCompetitionsStatusCrossChainTradingType$ {
  /** @deprecated use `GetApiCompetitionsStatusCrossChainTradingType$inboundSchema` instead. */
  export const inboundSchema =
    GetApiCompetitionsStatusCrossChainTradingType$inboundSchema;
  /** @deprecated use `GetApiCompetitionsStatusCrossChainTradingType$outboundSchema` instead. */
  export const outboundSchema =
    GetApiCompetitionsStatusCrossChainTradingType$outboundSchema;
}

/** @internal */
export const GetApiCompetitionsStatusCompetition$inboundSchema: z.ZodType<
  GetApiCompetitionsStatusCompetition,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().optional(),
  name: z.string().optional(),
  description: z.nullable(z.string()).optional(),
  externalLink: z.nullable(z.string()).optional(),
  imageUrl: z.nullable(z.string()).optional(),
  startDate: z
    .string()
    .datetime({ offset: true })
    .transform((v) => new Date(v))
    .optional(),
  endDate: z
    .nullable(
      z
        .string()
        .datetime({ offset: true })
        .transform((v) => new Date(v)),
    )
    .optional(),
  status: GetApiCompetitionsStatusStatus$inboundSchema.optional(),
  crossChainTradingType:
    GetApiCompetitionsStatusCrossChainTradingType$inboundSchema.optional(),
  createdAt: z
    .string()
    .datetime({ offset: true })
    .transform((v) => new Date(v))
    .optional(),
  updatedAt: z
    .string()
    .datetime({ offset: true })
    .transform((v) => new Date(v))
    .optional(),
});

/** @internal */
export type GetApiCompetitionsStatusCompetition$Outbound = {
  id?: string | undefined;
  name?: string | undefined;
  description?: string | null | undefined;
  externalLink?: string | null | undefined;
  imageUrl?: string | null | undefined;
  startDate?: string | undefined;
  endDate?: string | null | undefined;
  status?: string | undefined;
  crossChainTradingType?: string | undefined;
  createdAt?: string | undefined;
  updatedAt?: string | undefined;
};

/** @internal */
export const GetApiCompetitionsStatusCompetition$outboundSchema: z.ZodType<
  GetApiCompetitionsStatusCompetition$Outbound,
  z.ZodTypeDef,
  GetApiCompetitionsStatusCompetition
> = z.object({
  id: z.string().optional(),
  name: z.string().optional(),
  description: z.nullable(z.string()).optional(),
  externalLink: z.nullable(z.string()).optional(),
  imageUrl: z.nullable(z.string()).optional(),
  startDate: z
    .date()
    .transform((v) => v.toISOString())
    .optional(),
  endDate: z.nullable(z.date().transform((v) => v.toISOString())).optional(),
  status: GetApiCompetitionsStatusStatus$outboundSchema.optional(),
  crossChainTradingType:
    GetApiCompetitionsStatusCrossChainTradingType$outboundSchema.optional(),
  createdAt: z
    .date()
    .transform((v) => v.toISOString())
    .optional(),
  updatedAt: z
    .date()
    .transform((v) => v.toISOString())
    .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiCompetitionsStatusCompetition$ {
  /** @deprecated use `GetApiCompetitionsStatusCompetition$inboundSchema` instead. */
  export const inboundSchema =
    GetApiCompetitionsStatusCompetition$inboundSchema;
  /** @deprecated use `GetApiCompetitionsStatusCompetition$outboundSchema` instead. */
  export const outboundSchema =
    GetApiCompetitionsStatusCompetition$outboundSchema;
  /** @deprecated use `GetApiCompetitionsStatusCompetition$Outbound` instead. */
  export type Outbound = GetApiCompetitionsStatusCompetition$Outbound;
}

export function getApiCompetitionsStatusCompetitionToJSON(
  getApiCompetitionsStatusCompetition: GetApiCompetitionsStatusCompetition,
): string {
  return JSON.stringify(
    GetApiCompetitionsStatusCompetition$outboundSchema.parse(
      getApiCompetitionsStatusCompetition,
    ),
  );
}

export function getApiCompetitionsStatusCompetitionFromJSON(
  jsonString: string,
): SafeParseResult<GetApiCompetitionsStatusCompetition, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiCompetitionsStatusCompetition$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetApiCompetitionsStatusCompetition' from JSON`,
  );
}

/** @internal */
export const GetApiCompetitionsStatusResponse$inboundSchema: z.ZodType<
  GetApiCompetitionsStatusResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  success: z.boolean().optional(),
  active: z.boolean().optional(),
  competition: z
    .nullable(z.lazy(() => GetApiCompetitionsStatusCompetition$inboundSchema))
    .optional(),
  message: z.nullable(z.string()).optional(),
  participating: z.nullable(z.boolean()).optional(),
});

/** @internal */
export type GetApiCompetitionsStatusResponse$Outbound = {
  success?: boolean | undefined;
  active?: boolean | undefined;
  competition?: GetApiCompetitionsStatusCompetition$Outbound | null | undefined;
  message?: string | null | undefined;
  participating?: boolean | null | undefined;
};

/** @internal */
export const GetApiCompetitionsStatusResponse$outboundSchema: z.ZodType<
  GetApiCompetitionsStatusResponse$Outbound,
  z.ZodTypeDef,
  GetApiCompetitionsStatusResponse
> = z.object({
  success: z.boolean().optional(),
  active: z.boolean().optional(),
  competition: z
    .nullable(z.lazy(() => GetApiCompetitionsStatusCompetition$outboundSchema))
    .optional(),
  message: z.nullable(z.string()).optional(),
  participating: z.nullable(z.boolean()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiCompetitionsStatusResponse$ {
  /** @deprecated use `GetApiCompetitionsStatusResponse$inboundSchema` instead. */
  export const inboundSchema = GetApiCompetitionsStatusResponse$inboundSchema;
  /** @deprecated use `GetApiCompetitionsStatusResponse$outboundSchema` instead. */
  export const outboundSchema = GetApiCompetitionsStatusResponse$outboundSchema;
  /** @deprecated use `GetApiCompetitionsStatusResponse$Outbound` instead. */
  export type Outbound = GetApiCompetitionsStatusResponse$Outbound;
}

export function getApiCompetitionsStatusResponseToJSON(
  getApiCompetitionsStatusResponse: GetApiCompetitionsStatusResponse,
): string {
  return JSON.stringify(
    GetApiCompetitionsStatusResponse$outboundSchema.parse(
      getApiCompetitionsStatusResponse,
    ),
  );
}

export function getApiCompetitionsStatusResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetApiCompetitionsStatusResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetApiCompetitionsStatusResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetApiCompetitionsStatusResponse' from JSON`,
  );
}
