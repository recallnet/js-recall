/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";

import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type PostApiAdminCompetitionCreateRequest = {
  /**
   * Competition name
   */
  name: string;
  /**
   * Competition description
   */
  description?: string | undefined;
  /**
   * Whether to allow cross-chain trading in this competition
   */
  allowCrossChainTrading?: boolean | undefined;
};

/**
 * Competition status
 */
export const PostApiAdminCompetitionCreateStatus = {
  Pending: "PENDING",
  Active: "ACTIVE",
  Completed: "COMPLETED",
} as const;
/**
 * Competition status
 */
export type PostApiAdminCompetitionCreateStatus = ClosedEnum<
  typeof PostApiAdminCompetitionCreateStatus
>;

export type PostApiAdminCompetitionCreateCompetition = {
  /**
   * Competition ID
   */
  id?: string | undefined;
  /**
   * Competition name
   */
  name?: string | undefined;
  /**
   * Competition description
   */
  description?: string | undefined;
  /**
   * Competition status
   */
  status?: PostApiAdminCompetitionCreateStatus | undefined;
  /**
   * Whether cross-chain trading is allowed in this competition
   */
  allowCrossChainTrading?: boolean | undefined;
  /**
   * Competition creation date
   */
  createdAt?: Date | undefined;
};

/**
 * Competition created successfully
 */
export type PostApiAdminCompetitionCreateResponse = {
  /**
   * Operation success status
   */
  success?: boolean | undefined;
  competition?: PostApiAdminCompetitionCreateCompetition | undefined;
};

/** @internal */
export const PostApiAdminCompetitionCreateRequest$inboundSchema: z.ZodType<
  PostApiAdminCompetitionCreateRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
  description: z.string().optional(),
  allowCrossChainTrading: z.boolean().default(false),
});

/** @internal */
export type PostApiAdminCompetitionCreateRequest$Outbound = {
  name: string;
  description?: string | undefined;
  allowCrossChainTrading: boolean;
};

/** @internal */
export const PostApiAdminCompetitionCreateRequest$outboundSchema: z.ZodType<
  PostApiAdminCompetitionCreateRequest$Outbound,
  z.ZodTypeDef,
  PostApiAdminCompetitionCreateRequest
> = z.object({
  name: z.string(),
  description: z.string().optional(),
  allowCrossChainTrading: z.boolean().default(false),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiAdminCompetitionCreateRequest$ {
  /** @deprecated use `PostApiAdminCompetitionCreateRequest$inboundSchema` instead. */
  export const inboundSchema =
    PostApiAdminCompetitionCreateRequest$inboundSchema;
  /** @deprecated use `PostApiAdminCompetitionCreateRequest$outboundSchema` instead. */
  export const outboundSchema =
    PostApiAdminCompetitionCreateRequest$outboundSchema;
  /** @deprecated use `PostApiAdminCompetitionCreateRequest$Outbound` instead. */
  export type Outbound = PostApiAdminCompetitionCreateRequest$Outbound;
}

export function postApiAdminCompetitionCreateRequestToJSON(
  postApiAdminCompetitionCreateRequest: PostApiAdminCompetitionCreateRequest,
): string {
  return JSON.stringify(
    PostApiAdminCompetitionCreateRequest$outboundSchema.parse(
      postApiAdminCompetitionCreateRequest,
    ),
  );
}

export function postApiAdminCompetitionCreateRequestFromJSON(
  jsonString: string,
): SafeParseResult<PostApiAdminCompetitionCreateRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiAdminCompetitionCreateRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostApiAdminCompetitionCreateRequest' from JSON`,
  );
}

/** @internal */
export const PostApiAdminCompetitionCreateStatus$inboundSchema: z.ZodNativeEnum<
  typeof PostApiAdminCompetitionCreateStatus
> = z.nativeEnum(PostApiAdminCompetitionCreateStatus);

/** @internal */
export const PostApiAdminCompetitionCreateStatus$outboundSchema: z.ZodNativeEnum<
  typeof PostApiAdminCompetitionCreateStatus
> = PostApiAdminCompetitionCreateStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiAdminCompetitionCreateStatus$ {
  /** @deprecated use `PostApiAdminCompetitionCreateStatus$inboundSchema` instead. */
  export const inboundSchema =
    PostApiAdminCompetitionCreateStatus$inboundSchema;
  /** @deprecated use `PostApiAdminCompetitionCreateStatus$outboundSchema` instead. */
  export const outboundSchema =
    PostApiAdminCompetitionCreateStatus$outboundSchema;
}

/** @internal */
export const PostApiAdminCompetitionCreateCompetition$inboundSchema: z.ZodType<
  PostApiAdminCompetitionCreateCompetition,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().optional(),
  name: z.string().optional(),
  description: z.string().optional(),
  status: PostApiAdminCompetitionCreateStatus$inboundSchema.optional(),
  allowCrossChainTrading: z.boolean().optional(),
  createdAt: z
    .string()
    .datetime({ offset: true })
    .transform((v) => new Date(v))
    .optional(),
});

/** @internal */
export type PostApiAdminCompetitionCreateCompetition$Outbound = {
  id?: string | undefined;
  name?: string | undefined;
  description?: string | undefined;
  status?: string | undefined;
  allowCrossChainTrading?: boolean | undefined;
  createdAt?: string | undefined;
};

/** @internal */
export const PostApiAdminCompetitionCreateCompetition$outboundSchema: z.ZodType<
  PostApiAdminCompetitionCreateCompetition$Outbound,
  z.ZodTypeDef,
  PostApiAdminCompetitionCreateCompetition
> = z.object({
  id: z.string().optional(),
  name: z.string().optional(),
  description: z.string().optional(),
  status: PostApiAdminCompetitionCreateStatus$outboundSchema.optional(),
  allowCrossChainTrading: z.boolean().optional(),
  createdAt: z
    .date()
    .transform((v) => v.toISOString())
    .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiAdminCompetitionCreateCompetition$ {
  /** @deprecated use `PostApiAdminCompetitionCreateCompetition$inboundSchema` instead. */
  export const inboundSchema =
    PostApiAdminCompetitionCreateCompetition$inboundSchema;
  /** @deprecated use `PostApiAdminCompetitionCreateCompetition$outboundSchema` instead. */
  export const outboundSchema =
    PostApiAdminCompetitionCreateCompetition$outboundSchema;
  /** @deprecated use `PostApiAdminCompetitionCreateCompetition$Outbound` instead. */
  export type Outbound = PostApiAdminCompetitionCreateCompetition$Outbound;
}

export function postApiAdminCompetitionCreateCompetitionToJSON(
  postApiAdminCompetitionCreateCompetition: PostApiAdminCompetitionCreateCompetition,
): string {
  return JSON.stringify(
    PostApiAdminCompetitionCreateCompetition$outboundSchema.parse(
      postApiAdminCompetitionCreateCompetition,
    ),
  );
}

export function postApiAdminCompetitionCreateCompetitionFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiAdminCompetitionCreateCompetition,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiAdminCompetitionCreateCompetition$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostApiAdminCompetitionCreateCompetition' from JSON`,
  );
}

/** @internal */
export const PostApiAdminCompetitionCreateResponse$inboundSchema: z.ZodType<
  PostApiAdminCompetitionCreateResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  success: z.boolean().optional(),
  competition: z
    .lazy(() => PostApiAdminCompetitionCreateCompetition$inboundSchema)
    .optional(),
});

/** @internal */
export type PostApiAdminCompetitionCreateResponse$Outbound = {
  success?: boolean | undefined;
  competition?: PostApiAdminCompetitionCreateCompetition$Outbound | undefined;
};

/** @internal */
export const PostApiAdminCompetitionCreateResponse$outboundSchema: z.ZodType<
  PostApiAdminCompetitionCreateResponse$Outbound,
  z.ZodTypeDef,
  PostApiAdminCompetitionCreateResponse
> = z.object({
  success: z.boolean().optional(),
  competition: z
    .lazy(() => PostApiAdminCompetitionCreateCompetition$outboundSchema)
    .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiAdminCompetitionCreateResponse$ {
  /** @deprecated use `PostApiAdminCompetitionCreateResponse$inboundSchema` instead. */
  export const inboundSchema =
    PostApiAdminCompetitionCreateResponse$inboundSchema;
  /** @deprecated use `PostApiAdminCompetitionCreateResponse$outboundSchema` instead. */
  export const outboundSchema =
    PostApiAdminCompetitionCreateResponse$outboundSchema;
  /** @deprecated use `PostApiAdminCompetitionCreateResponse$Outbound` instead. */
  export type Outbound = PostApiAdminCompetitionCreateResponse$Outbound;
}

export function postApiAdminCompetitionCreateResponseToJSON(
  postApiAdminCompetitionCreateResponse: PostApiAdminCompetitionCreateResponse,
): string {
  return JSON.stringify(
    PostApiAdminCompetitionCreateResponse$outboundSchema.parse(
      postApiAdminCompetitionCreateResponse,
    ),
  );
}

export function postApiAdminCompetitionCreateResponseFromJSON(
  jsonString: string,
): SafeParseResult<PostApiAdminCompetitionCreateResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiAdminCompetitionCreateResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostApiAdminCompetitionCreateResponse' from JSON`,
  );
}
