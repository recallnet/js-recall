/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";

import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type PostApiCompetitionsCompetitionIdAgentsAgentIdRequest = {
  /**
   * Competition ID
   */
  competitionId: string;
  /**
   * Agent ID
   */
  agentId: string;
};

/**
 * Successfully joined competition
 */
export type PostApiCompetitionsCompetitionIdAgentsAgentIdResponse = {
  /**
   * Operation success status
   */
  success?: boolean | undefined;
  /**
   * Success message
   */
  message?: string | undefined;
};

/** @internal */
export const PostApiCompetitionsCompetitionIdAgentsAgentIdRequest$inboundSchema: z.ZodType<
  PostApiCompetitionsCompetitionIdAgentsAgentIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  competitionId: z.string(),
  agentId: z.string(),
});

/** @internal */
export type PostApiCompetitionsCompetitionIdAgentsAgentIdRequest$Outbound = {
  competitionId: string;
  agentId: string;
};

/** @internal */
export const PostApiCompetitionsCompetitionIdAgentsAgentIdRequest$outboundSchema: z.ZodType<
  PostApiCompetitionsCompetitionIdAgentsAgentIdRequest$Outbound,
  z.ZodTypeDef,
  PostApiCompetitionsCompetitionIdAgentsAgentIdRequest
> = z.object({
  competitionId: z.string(),
  agentId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiCompetitionsCompetitionIdAgentsAgentIdRequest$ {
  /** @deprecated use `PostApiCompetitionsCompetitionIdAgentsAgentIdRequest$inboundSchema` instead. */
  export const inboundSchema =
    PostApiCompetitionsCompetitionIdAgentsAgentIdRequest$inboundSchema;
  /** @deprecated use `PostApiCompetitionsCompetitionIdAgentsAgentIdRequest$outboundSchema` instead. */
  export const outboundSchema =
    PostApiCompetitionsCompetitionIdAgentsAgentIdRequest$outboundSchema;
  /** @deprecated use `PostApiCompetitionsCompetitionIdAgentsAgentIdRequest$Outbound` instead. */
  export type Outbound =
    PostApiCompetitionsCompetitionIdAgentsAgentIdRequest$Outbound;
}

export function postApiCompetitionsCompetitionIdAgentsAgentIdRequestToJSON(
  postApiCompetitionsCompetitionIdAgentsAgentIdRequest: PostApiCompetitionsCompetitionIdAgentsAgentIdRequest,
): string {
  return JSON.stringify(
    PostApiCompetitionsCompetitionIdAgentsAgentIdRequest$outboundSchema.parse(
      postApiCompetitionsCompetitionIdAgentsAgentIdRequest,
    ),
  );
}

export function postApiCompetitionsCompetitionIdAgentsAgentIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiCompetitionsCompetitionIdAgentsAgentIdRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiCompetitionsCompetitionIdAgentsAgentIdRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostApiCompetitionsCompetitionIdAgentsAgentIdRequest' from JSON`,
  );
}

/** @internal */
export const PostApiCompetitionsCompetitionIdAgentsAgentIdResponse$inboundSchema: z.ZodType<
  PostApiCompetitionsCompetitionIdAgentsAgentIdResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  success: z.boolean().optional(),
  message: z.string().optional(),
});

/** @internal */
export type PostApiCompetitionsCompetitionIdAgentsAgentIdResponse$Outbound = {
  success?: boolean | undefined;
  message?: string | undefined;
};

/** @internal */
export const PostApiCompetitionsCompetitionIdAgentsAgentIdResponse$outboundSchema: z.ZodType<
  PostApiCompetitionsCompetitionIdAgentsAgentIdResponse$Outbound,
  z.ZodTypeDef,
  PostApiCompetitionsCompetitionIdAgentsAgentIdResponse
> = z.object({
  success: z.boolean().optional(),
  message: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiCompetitionsCompetitionIdAgentsAgentIdResponse$ {
  /** @deprecated use `PostApiCompetitionsCompetitionIdAgentsAgentIdResponse$inboundSchema` instead. */
  export const inboundSchema =
    PostApiCompetitionsCompetitionIdAgentsAgentIdResponse$inboundSchema;
  /** @deprecated use `PostApiCompetitionsCompetitionIdAgentsAgentIdResponse$outboundSchema` instead. */
  export const outboundSchema =
    PostApiCompetitionsCompetitionIdAgentsAgentIdResponse$outboundSchema;
  /** @deprecated use `PostApiCompetitionsCompetitionIdAgentsAgentIdResponse$Outbound` instead. */
  export type Outbound =
    PostApiCompetitionsCompetitionIdAgentsAgentIdResponse$Outbound;
}

export function postApiCompetitionsCompetitionIdAgentsAgentIdResponseToJSON(
  postApiCompetitionsCompetitionIdAgentsAgentIdResponse: PostApiCompetitionsCompetitionIdAgentsAgentIdResponse,
): string {
  return JSON.stringify(
    PostApiCompetitionsCompetitionIdAgentsAgentIdResponse$outboundSchema.parse(
      postApiCompetitionsCompetitionIdAgentsAgentIdResponse,
    ),
  );
}

export function postApiCompetitionsCompetitionIdAgentsAgentIdResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiCompetitionsCompetitionIdAgentsAgentIdResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiCompetitionsCompetitionIdAgentsAgentIdResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostApiCompetitionsCompetitionIdAgentsAgentIdResponse' from JSON`,
  );
}
