/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";

import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type PostApiAdminCompetitionEndRequest = {
  /**
   * ID of the competition to end
   */
  competitionId: string;
};

/**
 * Competition status (completed)
 */
export const PostApiAdminCompetitionEndStatus = {
  Pending: "pending",
  Active: "active",
  Completed: "completed",
} as const;
/**
 * Competition status (completed)
 */
export type PostApiAdminCompetitionEndStatus = ClosedEnum<
  typeof PostApiAdminCompetitionEndStatus
>;

/**
 * Type of cross-chain trading allowed in this competition
 */
export const PostApiAdminCompetitionEndCrossChainTradingType = {
  DisallowAll: "disallowAll",
  DisallowXParent: "disallowXParent",
  Allow: "allow",
} as const;
/**
 * Type of cross-chain trading allowed in this competition
 */
export type PostApiAdminCompetitionEndCrossChainTradingType = ClosedEnum<
  typeof PostApiAdminCompetitionEndCrossChainTradingType
>;

export type PostApiAdminCompetitionEndCompetition = {
  /**
   * Competition ID
   */
  id?: string | undefined;
  /**
   * Competition name
   */
  name?: string | undefined;
  /**
   * Competition description
   */
  description?: string | undefined;
  /**
   * Competition start date
   */
  startDate?: Date | undefined;
  /**
   * Competition end date
   */
  endDate?: Date | undefined;
  /**
   * External URL for competition details
   */
  externalLink?: string | null | undefined;
  /**
   * URL to competition image
   */
  imageUrl?: string | null | undefined;
  /**
   * Competition status (completed)
   */
  status?: PostApiAdminCompetitionEndStatus | undefined;
  /**
   * Type of cross-chain trading allowed in this competition
   */
  crossChainTradingType?:
    | PostApiAdminCompetitionEndCrossChainTradingType
    | undefined;
};

export type PostApiAdminCompetitionEndLeaderboard = {
  /**
   * Agent ID
   */
  agentId?: string | undefined;
  /**
   * Final portfolio value
   */
  value?: number | undefined;
};

/**
 * Competition ended successfully
 */
export type PostApiAdminCompetitionEndResponse = {
  /**
   * Operation success status
   */
  success?: boolean | undefined;
  competition?: PostApiAdminCompetitionEndCompetition | undefined;
  leaderboard?: Array<PostApiAdminCompetitionEndLeaderboard> | undefined;
};

/** @internal */
export const PostApiAdminCompetitionEndRequest$inboundSchema: z.ZodType<
  PostApiAdminCompetitionEndRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  competitionId: z.string(),
});

/** @internal */
export type PostApiAdminCompetitionEndRequest$Outbound = {
  competitionId: string;
};

/** @internal */
export const PostApiAdminCompetitionEndRequest$outboundSchema: z.ZodType<
  PostApiAdminCompetitionEndRequest$Outbound,
  z.ZodTypeDef,
  PostApiAdminCompetitionEndRequest
> = z.object({
  competitionId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiAdminCompetitionEndRequest$ {
  /** @deprecated use `PostApiAdminCompetitionEndRequest$inboundSchema` instead. */
  export const inboundSchema = PostApiAdminCompetitionEndRequest$inboundSchema;
  /** @deprecated use `PostApiAdminCompetitionEndRequest$outboundSchema` instead. */
  export const outboundSchema =
    PostApiAdminCompetitionEndRequest$outboundSchema;
  /** @deprecated use `PostApiAdminCompetitionEndRequest$Outbound` instead. */
  export type Outbound = PostApiAdminCompetitionEndRequest$Outbound;
}

export function postApiAdminCompetitionEndRequestToJSON(
  postApiAdminCompetitionEndRequest: PostApiAdminCompetitionEndRequest,
): string {
  return JSON.stringify(
    PostApiAdminCompetitionEndRequest$outboundSchema.parse(
      postApiAdminCompetitionEndRequest,
    ),
  );
}

export function postApiAdminCompetitionEndRequestFromJSON(
  jsonString: string,
): SafeParseResult<PostApiAdminCompetitionEndRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostApiAdminCompetitionEndRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostApiAdminCompetitionEndRequest' from JSON`,
  );
}

/** @internal */
export const PostApiAdminCompetitionEndStatus$inboundSchema: z.ZodNativeEnum<
  typeof PostApiAdminCompetitionEndStatus
> = z.nativeEnum(PostApiAdminCompetitionEndStatus);

/** @internal */
export const PostApiAdminCompetitionEndStatus$outboundSchema: z.ZodNativeEnum<
  typeof PostApiAdminCompetitionEndStatus
> = PostApiAdminCompetitionEndStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiAdminCompetitionEndStatus$ {
  /** @deprecated use `PostApiAdminCompetitionEndStatus$inboundSchema` instead. */
  export const inboundSchema = PostApiAdminCompetitionEndStatus$inboundSchema;
  /** @deprecated use `PostApiAdminCompetitionEndStatus$outboundSchema` instead. */
  export const outboundSchema = PostApiAdminCompetitionEndStatus$outboundSchema;
}

/** @internal */
export const PostApiAdminCompetitionEndCrossChainTradingType$inboundSchema: z.ZodNativeEnum<
  typeof PostApiAdminCompetitionEndCrossChainTradingType
> = z.nativeEnum(PostApiAdminCompetitionEndCrossChainTradingType);

/** @internal */
export const PostApiAdminCompetitionEndCrossChainTradingType$outboundSchema: z.ZodNativeEnum<
  typeof PostApiAdminCompetitionEndCrossChainTradingType
> = PostApiAdminCompetitionEndCrossChainTradingType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiAdminCompetitionEndCrossChainTradingType$ {
  /** @deprecated use `PostApiAdminCompetitionEndCrossChainTradingType$inboundSchema` instead. */
  export const inboundSchema =
    PostApiAdminCompetitionEndCrossChainTradingType$inboundSchema;
  /** @deprecated use `PostApiAdminCompetitionEndCrossChainTradingType$outboundSchema` instead. */
  export const outboundSchema =
    PostApiAdminCompetitionEndCrossChainTradingType$outboundSchema;
}

/** @internal */
export const PostApiAdminCompetitionEndCompetition$inboundSchema: z.ZodType<
  PostApiAdminCompetitionEndCompetition,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().optional(),
  name: z.string().optional(),
  description: z.string().optional(),
  startDate: z
    .string()
    .datetime({ offset: true })
    .transform((v) => new Date(v))
    .optional(),
  endDate: z
    .string()
    .datetime({ offset: true })
    .transform((v) => new Date(v))
    .optional(),
  externalLink: z.nullable(z.string()).optional(),
  imageUrl: z.nullable(z.string()).optional(),
  status: PostApiAdminCompetitionEndStatus$inboundSchema.optional(),
  crossChainTradingType:
    PostApiAdminCompetitionEndCrossChainTradingType$inboundSchema.optional(),
});

/** @internal */
export type PostApiAdminCompetitionEndCompetition$Outbound = {
  id?: string | undefined;
  name?: string | undefined;
  description?: string | undefined;
  startDate?: string | undefined;
  endDate?: string | undefined;
  externalLink?: string | null | undefined;
  imageUrl?: string | null | undefined;
  status?: string | undefined;
  crossChainTradingType?: string | undefined;
};

/** @internal */
export const PostApiAdminCompetitionEndCompetition$outboundSchema: z.ZodType<
  PostApiAdminCompetitionEndCompetition$Outbound,
  z.ZodTypeDef,
  PostApiAdminCompetitionEndCompetition
> = z.object({
  id: z.string().optional(),
  name: z.string().optional(),
  description: z.string().optional(),
  startDate: z
    .date()
    .transform((v) => v.toISOString())
    .optional(),
  endDate: z
    .date()
    .transform((v) => v.toISOString())
    .optional(),
  externalLink: z.nullable(z.string()).optional(),
  imageUrl: z.nullable(z.string()).optional(),
  status: PostApiAdminCompetitionEndStatus$outboundSchema.optional(),
  crossChainTradingType:
    PostApiAdminCompetitionEndCrossChainTradingType$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiAdminCompetitionEndCompetition$ {
  /** @deprecated use `PostApiAdminCompetitionEndCompetition$inboundSchema` instead. */
  export const inboundSchema =
    PostApiAdminCompetitionEndCompetition$inboundSchema;
  /** @deprecated use `PostApiAdminCompetitionEndCompetition$outboundSchema` instead. */
  export const outboundSchema =
    PostApiAdminCompetitionEndCompetition$outboundSchema;
  /** @deprecated use `PostApiAdminCompetitionEndCompetition$Outbound` instead. */
  export type Outbound = PostApiAdminCompetitionEndCompetition$Outbound;
}

export function postApiAdminCompetitionEndCompetitionToJSON(
  postApiAdminCompetitionEndCompetition: PostApiAdminCompetitionEndCompetition,
): string {
  return JSON.stringify(
    PostApiAdminCompetitionEndCompetition$outboundSchema.parse(
      postApiAdminCompetitionEndCompetition,
    ),
  );
}

export function postApiAdminCompetitionEndCompetitionFromJSON(
  jsonString: string,
): SafeParseResult<PostApiAdminCompetitionEndCompetition, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiAdminCompetitionEndCompetition$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostApiAdminCompetitionEndCompetition' from JSON`,
  );
}

/** @internal */
export const PostApiAdminCompetitionEndLeaderboard$inboundSchema: z.ZodType<
  PostApiAdminCompetitionEndLeaderboard,
  z.ZodTypeDef,
  unknown
> = z.object({
  agentId: z.string().optional(),
  value: z.number().optional(),
});

/** @internal */
export type PostApiAdminCompetitionEndLeaderboard$Outbound = {
  agentId?: string | undefined;
  value?: number | undefined;
};

/** @internal */
export const PostApiAdminCompetitionEndLeaderboard$outboundSchema: z.ZodType<
  PostApiAdminCompetitionEndLeaderboard$Outbound,
  z.ZodTypeDef,
  PostApiAdminCompetitionEndLeaderboard
> = z.object({
  agentId: z.string().optional(),
  value: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiAdminCompetitionEndLeaderboard$ {
  /** @deprecated use `PostApiAdminCompetitionEndLeaderboard$inboundSchema` instead. */
  export const inboundSchema =
    PostApiAdminCompetitionEndLeaderboard$inboundSchema;
  /** @deprecated use `PostApiAdminCompetitionEndLeaderboard$outboundSchema` instead. */
  export const outboundSchema =
    PostApiAdminCompetitionEndLeaderboard$outboundSchema;
  /** @deprecated use `PostApiAdminCompetitionEndLeaderboard$Outbound` instead. */
  export type Outbound = PostApiAdminCompetitionEndLeaderboard$Outbound;
}

export function postApiAdminCompetitionEndLeaderboardToJSON(
  postApiAdminCompetitionEndLeaderboard: PostApiAdminCompetitionEndLeaderboard,
): string {
  return JSON.stringify(
    PostApiAdminCompetitionEndLeaderboard$outboundSchema.parse(
      postApiAdminCompetitionEndLeaderboard,
    ),
  );
}

export function postApiAdminCompetitionEndLeaderboardFromJSON(
  jsonString: string,
): SafeParseResult<PostApiAdminCompetitionEndLeaderboard, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiAdminCompetitionEndLeaderboard$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostApiAdminCompetitionEndLeaderboard' from JSON`,
  );
}

/** @internal */
export const PostApiAdminCompetitionEndResponse$inboundSchema: z.ZodType<
  PostApiAdminCompetitionEndResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  success: z.boolean().optional(),
  competition: z
    .lazy(() => PostApiAdminCompetitionEndCompetition$inboundSchema)
    .optional(),
  leaderboard: z
    .array(z.lazy(() => PostApiAdminCompetitionEndLeaderboard$inboundSchema))
    .optional(),
});

/** @internal */
export type PostApiAdminCompetitionEndResponse$Outbound = {
  success?: boolean | undefined;
  competition?: PostApiAdminCompetitionEndCompetition$Outbound | undefined;
  leaderboard?:
    | Array<PostApiAdminCompetitionEndLeaderboard$Outbound>
    | undefined;
};

/** @internal */
export const PostApiAdminCompetitionEndResponse$outboundSchema: z.ZodType<
  PostApiAdminCompetitionEndResponse$Outbound,
  z.ZodTypeDef,
  PostApiAdminCompetitionEndResponse
> = z.object({
  success: z.boolean().optional(),
  competition: z
    .lazy(() => PostApiAdminCompetitionEndCompetition$outboundSchema)
    .optional(),
  leaderboard: z
    .array(z.lazy(() => PostApiAdminCompetitionEndLeaderboard$outboundSchema))
    .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiAdminCompetitionEndResponse$ {
  /** @deprecated use `PostApiAdminCompetitionEndResponse$inboundSchema` instead. */
  export const inboundSchema = PostApiAdminCompetitionEndResponse$inboundSchema;
  /** @deprecated use `PostApiAdminCompetitionEndResponse$outboundSchema` instead. */
  export const outboundSchema =
    PostApiAdminCompetitionEndResponse$outboundSchema;
  /** @deprecated use `PostApiAdminCompetitionEndResponse$Outbound` instead. */
  export type Outbound = PostApiAdminCompetitionEndResponse$Outbound;
}

export function postApiAdminCompetitionEndResponseToJSON(
  postApiAdminCompetitionEndResponse: PostApiAdminCompetitionEndResponse,
): string {
  return JSON.stringify(
    PostApiAdminCompetitionEndResponse$outboundSchema.parse(
      postApiAdminCompetitionEndResponse,
    ),
  );
}

export function postApiAdminCompetitionEndResponseFromJSON(
  jsonString: string,
): SafeParseResult<PostApiAdminCompetitionEndResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiAdminCompetitionEndResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostApiAdminCompetitionEndResponse' from JSON`,
  );
}
