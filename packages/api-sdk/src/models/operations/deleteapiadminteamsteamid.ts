/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";

import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteApiAdminTeamsTeamIdRequest = {
  /**
   * ID of the team to delete
   */
  teamId: string;
};

/**
 * Team deleted successfully
 */
export type DeleteApiAdminTeamsTeamIdResponse = {
  /**
   * Operation success status
   */
  success?: boolean | undefined;
  /**
   * Success message
   */
  message?: string | undefined;
};

/** @internal */
export const DeleteApiAdminTeamsTeamIdRequest$inboundSchema: z.ZodType<
  DeleteApiAdminTeamsTeamIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  teamId: z.string(),
});

/** @internal */
export type DeleteApiAdminTeamsTeamIdRequest$Outbound = {
  teamId: string;
};

/** @internal */
export const DeleteApiAdminTeamsTeamIdRequest$outboundSchema: z.ZodType<
  DeleteApiAdminTeamsTeamIdRequest$Outbound,
  z.ZodTypeDef,
  DeleteApiAdminTeamsTeamIdRequest
> = z.object({
  teamId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiAdminTeamsTeamIdRequest$ {
  /** @deprecated use `DeleteApiAdminTeamsTeamIdRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteApiAdminTeamsTeamIdRequest$inboundSchema;
  /** @deprecated use `DeleteApiAdminTeamsTeamIdRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteApiAdminTeamsTeamIdRequest$outboundSchema;
  /** @deprecated use `DeleteApiAdminTeamsTeamIdRequest$Outbound` instead. */
  export type Outbound = DeleteApiAdminTeamsTeamIdRequest$Outbound;
}

export function deleteApiAdminTeamsTeamIdRequestToJSON(
  deleteApiAdminTeamsTeamIdRequest: DeleteApiAdminTeamsTeamIdRequest,
): string {
  return JSON.stringify(
    DeleteApiAdminTeamsTeamIdRequest$outboundSchema.parse(
      deleteApiAdminTeamsTeamIdRequest,
    ),
  );
}

export function deleteApiAdminTeamsTeamIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteApiAdminTeamsTeamIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteApiAdminTeamsTeamIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteApiAdminTeamsTeamIdRequest' from JSON`,
  );
}

/** @internal */
export const DeleteApiAdminTeamsTeamIdResponse$inboundSchema: z.ZodType<
  DeleteApiAdminTeamsTeamIdResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  success: z.boolean().optional(),
  message: z.string().optional(),
});

/** @internal */
export type DeleteApiAdminTeamsTeamIdResponse$Outbound = {
  success?: boolean | undefined;
  message?: string | undefined;
};

/** @internal */
export const DeleteApiAdminTeamsTeamIdResponse$outboundSchema: z.ZodType<
  DeleteApiAdminTeamsTeamIdResponse$Outbound,
  z.ZodTypeDef,
  DeleteApiAdminTeamsTeamIdResponse
> = z.object({
  success: z.boolean().optional(),
  message: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiAdminTeamsTeamIdResponse$ {
  /** @deprecated use `DeleteApiAdminTeamsTeamIdResponse$inboundSchema` instead. */
  export const inboundSchema = DeleteApiAdminTeamsTeamIdResponse$inboundSchema;
  /** @deprecated use `DeleteApiAdminTeamsTeamIdResponse$outboundSchema` instead. */
  export const outboundSchema =
    DeleteApiAdminTeamsTeamIdResponse$outboundSchema;
  /** @deprecated use `DeleteApiAdminTeamsTeamIdResponse$Outbound` instead. */
  export type Outbound = DeleteApiAdminTeamsTeamIdResponse$Outbound;
}

export function deleteApiAdminTeamsTeamIdResponseToJSON(
  deleteApiAdminTeamsTeamIdResponse: DeleteApiAdminTeamsTeamIdResponse,
): string {
  return JSON.stringify(
    DeleteApiAdminTeamsTeamIdResponse$outboundSchema.parse(
      deleteApiAdminTeamsTeamIdResponse,
    ),
  );
}

export function deleteApiAdminTeamsTeamIdResponseFromJSON(
  jsonString: string,
): SafeParseResult<DeleteApiAdminTeamsTeamIdResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteApiAdminTeamsTeamIdResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteApiAdminTeamsTeamIdResponse' from JSON`,
  );
}
