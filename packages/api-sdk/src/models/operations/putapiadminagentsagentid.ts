/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";

import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Agent's new metadata
 */
export type PutApiAdminAgentsAgentIdMetadataRequest = {};

export type PutApiAdminAgentsAgentIdRequestBody = {
  /**
   * Agent's new name
   */
  name?: string | undefined;
  /**
   * Agent's new description
   */
  description?: string | undefined;
  /**
   * URL to agent's new profile image
   */
  imageUrl?: string | undefined;
  /**
   * Agent's new email
   */
  email?: string | undefined;
  /**
   * Agent's new metadata
   */
  metadata?: PutApiAdminAgentsAgentIdMetadataRequest | undefined;
};

export type PutApiAdminAgentsAgentIdRequest = {
  /**
   * ID of the agent to update
   */
  agentId: string;
  requestBody: PutApiAdminAgentsAgentIdRequestBody;
};

/**
 * Agent metadata
 */
export type PutApiAdminAgentsAgentIdAgentMetadata = {};

export type PutApiAdminAgentsAgentIdAgent = {
  /**
   * Agent ID
   */
  id?: string | undefined;
  /**
   * Agent owner ID
   */
  ownerId?: string | undefined;
  /**
   * Agent wallet address
   */
  walletAddress?: string | null | undefined;
  /**
   * Agent name
   */
  name?: string | undefined;
  /**
   * Agent handle
   */
  handle?: string | undefined;
  /**
   * Agent email
   */
  email?: string | null | undefined;
  /**
   * Agent description
   */
  description?: string | null | undefined;
  /**
   * Agent status
   */
  status?: string | undefined;
  /**
   * URL to the agent's image
   */
  imageUrl?: string | null | undefined;
  /**
   * Agent metadata
   */
  metadata?: PutApiAdminAgentsAgentIdAgentMetadata | null | undefined;
  /**
   * Agent creation timestamp
   */
  createdAt?: Date | undefined;
  /**
   * Agent update timestamp
   */
  updatedAt?: Date | undefined;
};

/**
 * Agent updated successfully
 */
export type PutApiAdminAgentsAgentIdResponse = {
  /**
   * Operation success status
   */
  success?: boolean | undefined;
  agent?: PutApiAdminAgentsAgentIdAgent | undefined;
};

/** @internal */
export const PutApiAdminAgentsAgentIdMetadataRequest$inboundSchema: z.ZodType<
  PutApiAdminAgentsAgentIdMetadataRequest,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type PutApiAdminAgentsAgentIdMetadataRequest$Outbound = {};

/** @internal */
export const PutApiAdminAgentsAgentIdMetadataRequest$outboundSchema: z.ZodType<
  PutApiAdminAgentsAgentIdMetadataRequest$Outbound,
  z.ZodTypeDef,
  PutApiAdminAgentsAgentIdMetadataRequest
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiAdminAgentsAgentIdMetadataRequest$ {
  /** @deprecated use `PutApiAdminAgentsAgentIdMetadataRequest$inboundSchema` instead. */
  export const inboundSchema =
    PutApiAdminAgentsAgentIdMetadataRequest$inboundSchema;
  /** @deprecated use `PutApiAdminAgentsAgentIdMetadataRequest$outboundSchema` instead. */
  export const outboundSchema =
    PutApiAdminAgentsAgentIdMetadataRequest$outboundSchema;
  /** @deprecated use `PutApiAdminAgentsAgentIdMetadataRequest$Outbound` instead. */
  export type Outbound = PutApiAdminAgentsAgentIdMetadataRequest$Outbound;
}

export function putApiAdminAgentsAgentIdMetadataRequestToJSON(
  putApiAdminAgentsAgentIdMetadataRequest: PutApiAdminAgentsAgentIdMetadataRequest,
): string {
  return JSON.stringify(
    PutApiAdminAgentsAgentIdMetadataRequest$outboundSchema.parse(
      putApiAdminAgentsAgentIdMetadataRequest,
    ),
  );
}

export function putApiAdminAgentsAgentIdMetadataRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  PutApiAdminAgentsAgentIdMetadataRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiAdminAgentsAgentIdMetadataRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PutApiAdminAgentsAgentIdMetadataRequest' from JSON`,
  );
}

/** @internal */
export const PutApiAdminAgentsAgentIdRequestBody$inboundSchema: z.ZodType<
  PutApiAdminAgentsAgentIdRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string().optional(),
  description: z.string().optional(),
  imageUrl: z.string().optional(),
  email: z.string().optional(),
  metadata: z
    .lazy(() => PutApiAdminAgentsAgentIdMetadataRequest$inboundSchema)
    .optional(),
});

/** @internal */
export type PutApiAdminAgentsAgentIdRequestBody$Outbound = {
  name?: string | undefined;
  description?: string | undefined;
  imageUrl?: string | undefined;
  email?: string | undefined;
  metadata?: PutApiAdminAgentsAgentIdMetadataRequest$Outbound | undefined;
};

/** @internal */
export const PutApiAdminAgentsAgentIdRequestBody$outboundSchema: z.ZodType<
  PutApiAdminAgentsAgentIdRequestBody$Outbound,
  z.ZodTypeDef,
  PutApiAdminAgentsAgentIdRequestBody
> = z.object({
  name: z.string().optional(),
  description: z.string().optional(),
  imageUrl: z.string().optional(),
  email: z.string().optional(),
  metadata: z
    .lazy(() => PutApiAdminAgentsAgentIdMetadataRequest$outboundSchema)
    .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiAdminAgentsAgentIdRequestBody$ {
  /** @deprecated use `PutApiAdminAgentsAgentIdRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    PutApiAdminAgentsAgentIdRequestBody$inboundSchema;
  /** @deprecated use `PutApiAdminAgentsAgentIdRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    PutApiAdminAgentsAgentIdRequestBody$outboundSchema;
  /** @deprecated use `PutApiAdminAgentsAgentIdRequestBody$Outbound` instead. */
  export type Outbound = PutApiAdminAgentsAgentIdRequestBody$Outbound;
}

export function putApiAdminAgentsAgentIdRequestBodyToJSON(
  putApiAdminAgentsAgentIdRequestBody: PutApiAdminAgentsAgentIdRequestBody,
): string {
  return JSON.stringify(
    PutApiAdminAgentsAgentIdRequestBody$outboundSchema.parse(
      putApiAdminAgentsAgentIdRequestBody,
    ),
  );
}

export function putApiAdminAgentsAgentIdRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<PutApiAdminAgentsAgentIdRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiAdminAgentsAgentIdRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PutApiAdminAgentsAgentIdRequestBody' from JSON`,
  );
}

/** @internal */
export const PutApiAdminAgentsAgentIdRequest$inboundSchema: z.ZodType<
  PutApiAdminAgentsAgentIdRequest,
  z.ZodTypeDef,
  unknown
> = z
  .object({
    agentId: z.string(),
    RequestBody: z.lazy(
      () => PutApiAdminAgentsAgentIdRequestBody$inboundSchema,
    ),
  })
  .transform((v) => {
    return remap$(v, {
      RequestBody: "requestBody",
    });
  });

/** @internal */
export type PutApiAdminAgentsAgentIdRequest$Outbound = {
  agentId: string;
  RequestBody: PutApiAdminAgentsAgentIdRequestBody$Outbound;
};

/** @internal */
export const PutApiAdminAgentsAgentIdRequest$outboundSchema: z.ZodType<
  PutApiAdminAgentsAgentIdRequest$Outbound,
  z.ZodTypeDef,
  PutApiAdminAgentsAgentIdRequest
> = z
  .object({
    agentId: z.string(),
    requestBody: z.lazy(
      () => PutApiAdminAgentsAgentIdRequestBody$outboundSchema,
    ),
  })
  .transform((v) => {
    return remap$(v, {
      requestBody: "RequestBody",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiAdminAgentsAgentIdRequest$ {
  /** @deprecated use `PutApiAdminAgentsAgentIdRequest$inboundSchema` instead. */
  export const inboundSchema = PutApiAdminAgentsAgentIdRequest$inboundSchema;
  /** @deprecated use `PutApiAdminAgentsAgentIdRequest$outboundSchema` instead. */
  export const outboundSchema = PutApiAdminAgentsAgentIdRequest$outboundSchema;
  /** @deprecated use `PutApiAdminAgentsAgentIdRequest$Outbound` instead. */
  export type Outbound = PutApiAdminAgentsAgentIdRequest$Outbound;
}

export function putApiAdminAgentsAgentIdRequestToJSON(
  putApiAdminAgentsAgentIdRequest: PutApiAdminAgentsAgentIdRequest,
): string {
  return JSON.stringify(
    PutApiAdminAgentsAgentIdRequest$outboundSchema.parse(
      putApiAdminAgentsAgentIdRequest,
    ),
  );
}

export function putApiAdminAgentsAgentIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<PutApiAdminAgentsAgentIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PutApiAdminAgentsAgentIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PutApiAdminAgentsAgentIdRequest' from JSON`,
  );
}

/** @internal */
export const PutApiAdminAgentsAgentIdAgentMetadata$inboundSchema: z.ZodType<
  PutApiAdminAgentsAgentIdAgentMetadata,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type PutApiAdminAgentsAgentIdAgentMetadata$Outbound = {};

/** @internal */
export const PutApiAdminAgentsAgentIdAgentMetadata$outboundSchema: z.ZodType<
  PutApiAdminAgentsAgentIdAgentMetadata$Outbound,
  z.ZodTypeDef,
  PutApiAdminAgentsAgentIdAgentMetadata
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiAdminAgentsAgentIdAgentMetadata$ {
  /** @deprecated use `PutApiAdminAgentsAgentIdAgentMetadata$inboundSchema` instead. */
  export const inboundSchema =
    PutApiAdminAgentsAgentIdAgentMetadata$inboundSchema;
  /** @deprecated use `PutApiAdminAgentsAgentIdAgentMetadata$outboundSchema` instead. */
  export const outboundSchema =
    PutApiAdminAgentsAgentIdAgentMetadata$outboundSchema;
  /** @deprecated use `PutApiAdminAgentsAgentIdAgentMetadata$Outbound` instead. */
  export type Outbound = PutApiAdminAgentsAgentIdAgentMetadata$Outbound;
}

export function putApiAdminAgentsAgentIdAgentMetadataToJSON(
  putApiAdminAgentsAgentIdAgentMetadata: PutApiAdminAgentsAgentIdAgentMetadata,
): string {
  return JSON.stringify(
    PutApiAdminAgentsAgentIdAgentMetadata$outboundSchema.parse(
      putApiAdminAgentsAgentIdAgentMetadata,
    ),
  );
}

export function putApiAdminAgentsAgentIdAgentMetadataFromJSON(
  jsonString: string,
): SafeParseResult<PutApiAdminAgentsAgentIdAgentMetadata, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PutApiAdminAgentsAgentIdAgentMetadata$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PutApiAdminAgentsAgentIdAgentMetadata' from JSON`,
  );
}

/** @internal */
export const PutApiAdminAgentsAgentIdAgent$inboundSchema: z.ZodType<
  PutApiAdminAgentsAgentIdAgent,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().optional(),
  ownerId: z.string().optional(),
  walletAddress: z.nullable(z.string()).optional(),
  name: z.string().optional(),
  handle: z.string().optional(),
  email: z.nullable(z.string()).optional(),
  description: z.nullable(z.string()).optional(),
  status: z.string().optional(),
  imageUrl: z.nullable(z.string()).optional(),
  metadata: z
    .nullable(z.lazy(() => PutApiAdminAgentsAgentIdAgentMetadata$inboundSchema))
    .optional(),
  createdAt: z
    .string()
    .datetime({ offset: true })
    .transform((v) => new Date(v))
    .optional(),
  updatedAt: z
    .string()
    .datetime({ offset: true })
    .transform((v) => new Date(v))
    .optional(),
});

/** @internal */
export type PutApiAdminAgentsAgentIdAgent$Outbound = {
  id?: string | undefined;
  ownerId?: string | undefined;
  walletAddress?: string | null | undefined;
  name?: string | undefined;
  handle?: string | undefined;
  email?: string | null | undefined;
  description?: string | null | undefined;
  status?: string | undefined;
  imageUrl?: string | null | undefined;
  metadata?: PutApiAdminAgentsAgentIdAgentMetadata$Outbound | null | undefined;
  createdAt?: string | undefined;
  updatedAt?: string | undefined;
};

/** @internal */
export const PutApiAdminAgentsAgentIdAgent$outboundSchema: z.ZodType<
  PutApiAdminAgentsAgentIdAgent$Outbound,
  z.ZodTypeDef,
  PutApiAdminAgentsAgentIdAgent
> = z.object({
  id: z.string().optional(),
  ownerId: z.string().optional(),
  walletAddress: z.nullable(z.string()).optional(),
  name: z.string().optional(),
  handle: z.string().optional(),
  email: z.nullable(z.string()).optional(),
  description: z.nullable(z.string()).optional(),
  status: z.string().optional(),
  imageUrl: z.nullable(z.string()).optional(),
  metadata: z
    .nullable(
      z.lazy(() => PutApiAdminAgentsAgentIdAgentMetadata$outboundSchema),
    )
    .optional(),
  createdAt: z
    .date()
    .transform((v) => v.toISOString())
    .optional(),
  updatedAt: z
    .date()
    .transform((v) => v.toISOString())
    .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiAdminAgentsAgentIdAgent$ {
  /** @deprecated use `PutApiAdminAgentsAgentIdAgent$inboundSchema` instead. */
  export const inboundSchema = PutApiAdminAgentsAgentIdAgent$inboundSchema;
  /** @deprecated use `PutApiAdminAgentsAgentIdAgent$outboundSchema` instead. */
  export const outboundSchema = PutApiAdminAgentsAgentIdAgent$outboundSchema;
  /** @deprecated use `PutApiAdminAgentsAgentIdAgent$Outbound` instead. */
  export type Outbound = PutApiAdminAgentsAgentIdAgent$Outbound;
}

export function putApiAdminAgentsAgentIdAgentToJSON(
  putApiAdminAgentsAgentIdAgent: PutApiAdminAgentsAgentIdAgent,
): string {
  return JSON.stringify(
    PutApiAdminAgentsAgentIdAgent$outboundSchema.parse(
      putApiAdminAgentsAgentIdAgent,
    ),
  );
}

export function putApiAdminAgentsAgentIdAgentFromJSON(
  jsonString: string,
): SafeParseResult<PutApiAdminAgentsAgentIdAgent, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PutApiAdminAgentsAgentIdAgent$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PutApiAdminAgentsAgentIdAgent' from JSON`,
  );
}

/** @internal */
export const PutApiAdminAgentsAgentIdResponse$inboundSchema: z.ZodType<
  PutApiAdminAgentsAgentIdResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  success: z.boolean().optional(),
  agent: z.lazy(() => PutApiAdminAgentsAgentIdAgent$inboundSchema).optional(),
});

/** @internal */
export type PutApiAdminAgentsAgentIdResponse$Outbound = {
  success?: boolean | undefined;
  agent?: PutApiAdminAgentsAgentIdAgent$Outbound | undefined;
};

/** @internal */
export const PutApiAdminAgentsAgentIdResponse$outboundSchema: z.ZodType<
  PutApiAdminAgentsAgentIdResponse$Outbound,
  z.ZodTypeDef,
  PutApiAdminAgentsAgentIdResponse
> = z.object({
  success: z.boolean().optional(),
  agent: z.lazy(() => PutApiAdminAgentsAgentIdAgent$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutApiAdminAgentsAgentIdResponse$ {
  /** @deprecated use `PutApiAdminAgentsAgentIdResponse$inboundSchema` instead. */
  export const inboundSchema = PutApiAdminAgentsAgentIdResponse$inboundSchema;
  /** @deprecated use `PutApiAdminAgentsAgentIdResponse$outboundSchema` instead. */
  export const outboundSchema = PutApiAdminAgentsAgentIdResponse$outboundSchema;
  /** @deprecated use `PutApiAdminAgentsAgentIdResponse$Outbound` instead. */
  export type Outbound = PutApiAdminAgentsAgentIdResponse$Outbound;
}

export function putApiAdminAgentsAgentIdResponseToJSON(
  putApiAdminAgentsAgentIdResponse: PutApiAdminAgentsAgentIdResponse,
): string {
  return JSON.stringify(
    PutApiAdminAgentsAgentIdResponse$outboundSchema.parse(
      putApiAdminAgentsAgentIdResponse,
    ),
  );
}

export function putApiAdminAgentsAgentIdResponseFromJSON(
  jsonString: string,
): SafeParseResult<PutApiAdminAgentsAgentIdResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PutApiAdminAgentsAgentIdResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PutApiAdminAgentsAgentIdResponse' from JSON`,
  );
}
