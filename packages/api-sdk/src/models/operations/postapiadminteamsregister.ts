/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";

import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Optional metadata about the team's agent
 */
export type PostApiAdminTeamsRegisterMetadataRequest = {};

export type PostApiAdminTeamsRegisterRequest = {
  /**
   * Name of the team
   */
  teamName: string;
  /**
   * Team email address
   */
  email: string;
  /**
   * Name of the contact person
   */
  contactPerson: string;
  /**
   * Ethereum wallet address (must start with 0x)
   */
  walletAddress: string;
  /**
   * Optional metadata about the team's agent
   */
  metadata?: PostApiAdminTeamsRegisterMetadataRequest | undefined;
  /**
   * URL to the team's image
   */
  imageUrl?: string | undefined;
};

/**
 * Optional agent metadata if provided
 */
export type PostApiAdminTeamsRegisterMetadataResponse = {};

export type PostApiAdminTeamsRegisterTeam = {
  /**
   * Team ID
   */
  id?: string | undefined;
  /**
   * Team name
   */
  name?: string | undefined;
  /**
   * Team email
   */
  email?: string | undefined;
  /**
   * Contact person name
   */
  contactPerson?: string | undefined;
  /**
   * Ethereum wallet address
   */
  walletAddress?: string | undefined;
  /**
   * API key for the team to use with Bearer authentication. Admin should securely provide this to the team.
   */
  apiKey?: string | undefined;
  /**
   * URL to the team's image
   */
  imageUrl?: string | null | undefined;
  /**
   * Optional agent metadata if provided
   */
  metadata?: PostApiAdminTeamsRegisterMetadataResponse | undefined;
  /**
   * Account creation timestamp
   */
  createdAt?: Date | undefined;
};

/**
 * Team registered successfully
 */
export type PostApiAdminTeamsRegisterResponse = {
  /**
   * Operation success status
   */
  success?: boolean | undefined;
  team?: PostApiAdminTeamsRegisterTeam | undefined;
};

/** @internal */
export const PostApiAdminTeamsRegisterMetadataRequest$inboundSchema: z.ZodType<
  PostApiAdminTeamsRegisterMetadataRequest,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type PostApiAdminTeamsRegisterMetadataRequest$Outbound = {};

/** @internal */
export const PostApiAdminTeamsRegisterMetadataRequest$outboundSchema: z.ZodType<
  PostApiAdminTeamsRegisterMetadataRequest$Outbound,
  z.ZodTypeDef,
  PostApiAdminTeamsRegisterMetadataRequest
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiAdminTeamsRegisterMetadataRequest$ {
  /** @deprecated use `PostApiAdminTeamsRegisterMetadataRequest$inboundSchema` instead. */
  export const inboundSchema =
    PostApiAdminTeamsRegisterMetadataRequest$inboundSchema;
  /** @deprecated use `PostApiAdminTeamsRegisterMetadataRequest$outboundSchema` instead. */
  export const outboundSchema =
    PostApiAdminTeamsRegisterMetadataRequest$outboundSchema;
  /** @deprecated use `PostApiAdminTeamsRegisterMetadataRequest$Outbound` instead. */
  export type Outbound = PostApiAdminTeamsRegisterMetadataRequest$Outbound;
}

export function postApiAdminTeamsRegisterMetadataRequestToJSON(
  postApiAdminTeamsRegisterMetadataRequest: PostApiAdminTeamsRegisterMetadataRequest,
): string {
  return JSON.stringify(
    PostApiAdminTeamsRegisterMetadataRequest$outboundSchema.parse(
      postApiAdminTeamsRegisterMetadataRequest,
    ),
  );
}

export function postApiAdminTeamsRegisterMetadataRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiAdminTeamsRegisterMetadataRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiAdminTeamsRegisterMetadataRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostApiAdminTeamsRegisterMetadataRequest' from JSON`,
  );
}

/** @internal */
export const PostApiAdminTeamsRegisterRequest$inboundSchema: z.ZodType<
  PostApiAdminTeamsRegisterRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  teamName: z.string(),
  email: z.string(),
  contactPerson: z.string(),
  walletAddress: z.string(),
  metadata: z
    .lazy(() => PostApiAdminTeamsRegisterMetadataRequest$inboundSchema)
    .optional(),
  imageUrl: z.string().optional(),
});

/** @internal */
export type PostApiAdminTeamsRegisterRequest$Outbound = {
  teamName: string;
  email: string;
  contactPerson: string;
  walletAddress: string;
  metadata?: PostApiAdminTeamsRegisterMetadataRequest$Outbound | undefined;
  imageUrl?: string | undefined;
};

/** @internal */
export const PostApiAdminTeamsRegisterRequest$outboundSchema: z.ZodType<
  PostApiAdminTeamsRegisterRequest$Outbound,
  z.ZodTypeDef,
  PostApiAdminTeamsRegisterRequest
> = z.object({
  teamName: z.string(),
  email: z.string(),
  contactPerson: z.string(),
  walletAddress: z.string(),
  metadata: z
    .lazy(() => PostApiAdminTeamsRegisterMetadataRequest$outboundSchema)
    .optional(),
  imageUrl: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiAdminTeamsRegisterRequest$ {
  /** @deprecated use `PostApiAdminTeamsRegisterRequest$inboundSchema` instead. */
  export const inboundSchema = PostApiAdminTeamsRegisterRequest$inboundSchema;
  /** @deprecated use `PostApiAdminTeamsRegisterRequest$outboundSchema` instead. */
  export const outboundSchema = PostApiAdminTeamsRegisterRequest$outboundSchema;
  /** @deprecated use `PostApiAdminTeamsRegisterRequest$Outbound` instead. */
  export type Outbound = PostApiAdminTeamsRegisterRequest$Outbound;
}

export function postApiAdminTeamsRegisterRequestToJSON(
  postApiAdminTeamsRegisterRequest: PostApiAdminTeamsRegisterRequest,
): string {
  return JSON.stringify(
    PostApiAdminTeamsRegisterRequest$outboundSchema.parse(
      postApiAdminTeamsRegisterRequest,
    ),
  );
}

export function postApiAdminTeamsRegisterRequestFromJSON(
  jsonString: string,
): SafeParseResult<PostApiAdminTeamsRegisterRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostApiAdminTeamsRegisterRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostApiAdminTeamsRegisterRequest' from JSON`,
  );
}

/** @internal */
export const PostApiAdminTeamsRegisterMetadataResponse$inboundSchema: z.ZodType<
  PostApiAdminTeamsRegisterMetadataResponse,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type PostApiAdminTeamsRegisterMetadataResponse$Outbound = {};

/** @internal */
export const PostApiAdminTeamsRegisterMetadataResponse$outboundSchema: z.ZodType<
  PostApiAdminTeamsRegisterMetadataResponse$Outbound,
  z.ZodTypeDef,
  PostApiAdminTeamsRegisterMetadataResponse
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiAdminTeamsRegisterMetadataResponse$ {
  /** @deprecated use `PostApiAdminTeamsRegisterMetadataResponse$inboundSchema` instead. */
  export const inboundSchema =
    PostApiAdminTeamsRegisterMetadataResponse$inboundSchema;
  /** @deprecated use `PostApiAdminTeamsRegisterMetadataResponse$outboundSchema` instead. */
  export const outboundSchema =
    PostApiAdminTeamsRegisterMetadataResponse$outboundSchema;
  /** @deprecated use `PostApiAdminTeamsRegisterMetadataResponse$Outbound` instead. */
  export type Outbound = PostApiAdminTeamsRegisterMetadataResponse$Outbound;
}

export function postApiAdminTeamsRegisterMetadataResponseToJSON(
  postApiAdminTeamsRegisterMetadataResponse: PostApiAdminTeamsRegisterMetadataResponse,
): string {
  return JSON.stringify(
    PostApiAdminTeamsRegisterMetadataResponse$outboundSchema.parse(
      postApiAdminTeamsRegisterMetadataResponse,
    ),
  );
}

export function postApiAdminTeamsRegisterMetadataResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  PostApiAdminTeamsRegisterMetadataResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiAdminTeamsRegisterMetadataResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostApiAdminTeamsRegisterMetadataResponse' from JSON`,
  );
}

/** @internal */
export const PostApiAdminTeamsRegisterTeam$inboundSchema: z.ZodType<
  PostApiAdminTeamsRegisterTeam,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().optional(),
  name: z.string().optional(),
  email: z.string().optional(),
  contactPerson: z.string().optional(),
  walletAddress: z.string().optional(),
  apiKey: z.string().optional(),
  imageUrl: z.nullable(z.string()).optional(),
  metadata: z
    .lazy(() => PostApiAdminTeamsRegisterMetadataResponse$inboundSchema)
    .optional(),
  createdAt: z
    .string()
    .datetime({ offset: true })
    .transform((v) => new Date(v))
    .optional(),
});

/** @internal */
export type PostApiAdminTeamsRegisterTeam$Outbound = {
  id?: string | undefined;
  name?: string | undefined;
  email?: string | undefined;
  contactPerson?: string | undefined;
  walletAddress?: string | undefined;
  apiKey?: string | undefined;
  imageUrl?: string | null | undefined;
  metadata?: PostApiAdminTeamsRegisterMetadataResponse$Outbound | undefined;
  createdAt?: string | undefined;
};

/** @internal */
export const PostApiAdminTeamsRegisterTeam$outboundSchema: z.ZodType<
  PostApiAdminTeamsRegisterTeam$Outbound,
  z.ZodTypeDef,
  PostApiAdminTeamsRegisterTeam
> = z.object({
  id: z.string().optional(),
  name: z.string().optional(),
  email: z.string().optional(),
  contactPerson: z.string().optional(),
  walletAddress: z.string().optional(),
  apiKey: z.string().optional(),
  imageUrl: z.nullable(z.string()).optional(),
  metadata: z
    .lazy(() => PostApiAdminTeamsRegisterMetadataResponse$outboundSchema)
    .optional(),
  createdAt: z
    .date()
    .transform((v) => v.toISOString())
    .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiAdminTeamsRegisterTeam$ {
  /** @deprecated use `PostApiAdminTeamsRegisterTeam$inboundSchema` instead. */
  export const inboundSchema = PostApiAdminTeamsRegisterTeam$inboundSchema;
  /** @deprecated use `PostApiAdminTeamsRegisterTeam$outboundSchema` instead. */
  export const outboundSchema = PostApiAdminTeamsRegisterTeam$outboundSchema;
  /** @deprecated use `PostApiAdminTeamsRegisterTeam$Outbound` instead. */
  export type Outbound = PostApiAdminTeamsRegisterTeam$Outbound;
}

export function postApiAdminTeamsRegisterTeamToJSON(
  postApiAdminTeamsRegisterTeam: PostApiAdminTeamsRegisterTeam,
): string {
  return JSON.stringify(
    PostApiAdminTeamsRegisterTeam$outboundSchema.parse(
      postApiAdminTeamsRegisterTeam,
    ),
  );
}

export function postApiAdminTeamsRegisterTeamFromJSON(
  jsonString: string,
): SafeParseResult<PostApiAdminTeamsRegisterTeam, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostApiAdminTeamsRegisterTeam$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostApiAdminTeamsRegisterTeam' from JSON`,
  );
}

/** @internal */
export const PostApiAdminTeamsRegisterResponse$inboundSchema: z.ZodType<
  PostApiAdminTeamsRegisterResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  success: z.boolean().optional(),
  team: z.lazy(() => PostApiAdminTeamsRegisterTeam$inboundSchema).optional(),
});

/** @internal */
export type PostApiAdminTeamsRegisterResponse$Outbound = {
  success?: boolean | undefined;
  team?: PostApiAdminTeamsRegisterTeam$Outbound | undefined;
};

/** @internal */
export const PostApiAdminTeamsRegisterResponse$outboundSchema: z.ZodType<
  PostApiAdminTeamsRegisterResponse$Outbound,
  z.ZodTypeDef,
  PostApiAdminTeamsRegisterResponse
> = z.object({
  success: z.boolean().optional(),
  team: z.lazy(() => PostApiAdminTeamsRegisterTeam$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiAdminTeamsRegisterResponse$ {
  /** @deprecated use `PostApiAdminTeamsRegisterResponse$inboundSchema` instead. */
  export const inboundSchema = PostApiAdminTeamsRegisterResponse$inboundSchema;
  /** @deprecated use `PostApiAdminTeamsRegisterResponse$outboundSchema` instead. */
  export const outboundSchema =
    PostApiAdminTeamsRegisterResponse$outboundSchema;
  /** @deprecated use `PostApiAdminTeamsRegisterResponse$Outbound` instead. */
  export type Outbound = PostApiAdminTeamsRegisterResponse$Outbound;
}

export function postApiAdminTeamsRegisterResponseToJSON(
  postApiAdminTeamsRegisterResponse: PostApiAdminTeamsRegisterResponse,
): string {
  return JSON.stringify(
    PostApiAdminTeamsRegisterResponse$outboundSchema.parse(
      postApiAdminTeamsRegisterResponse,
    ),
  );
}

export function postApiAdminTeamsRegisterResponseFromJSON(
  jsonString: string,
): SafeParseResult<PostApiAdminTeamsRegisterResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostApiAdminTeamsRegisterResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostApiAdminTeamsRegisterResponse' from JSON`,
  );
}
