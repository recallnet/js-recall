/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";

/**
 * Internal server error
 */
export type GetApiAuthNonceInternalServerErrorData = {
  error?: string | undefined;
};

/**
 * Internal server error
 */
export class GetApiAuthNonceInternalServerError extends Error {
  error?: string | undefined;

  /** The original data that was passed to this error instance. */
  data$: GetApiAuthNonceInternalServerErrorData;

  constructor(err: GetApiAuthNonceInternalServerErrorData) {
    const message =
      "message" in err && typeof err.message === "string"
        ? err.message
        : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    if (err.error != null) this.error = err.error;

    this.name = "GetApiAuthNonceInternalServerError";
  }
}

/** @internal */
export const GetApiAuthNonceInternalServerError$inboundSchema: z.ZodType<
  GetApiAuthNonceInternalServerError,
  z.ZodTypeDef,
  unknown
> = z
  .object({
    error: z.string().optional(),
  })
  .transform((v) => {
    return new GetApiAuthNonceInternalServerError(v);
  });

/** @internal */
export type GetApiAuthNonceInternalServerError$Outbound = {
  error?: string | undefined;
};

/** @internal */
export const GetApiAuthNonceInternalServerError$outboundSchema: z.ZodType<
  GetApiAuthNonceInternalServerError$Outbound,
  z.ZodTypeDef,
  GetApiAuthNonceInternalServerError
> = z
  .instanceof(GetApiAuthNonceInternalServerError)
  .transform((v) => v.data$)
  .pipe(
    z.object({
      error: z.string().optional(),
    }),
  );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiAuthNonceInternalServerError$ {
  /** @deprecated use `GetApiAuthNonceInternalServerError$inboundSchema` instead. */
  export const inboundSchema = GetApiAuthNonceInternalServerError$inboundSchema;
  /** @deprecated use `GetApiAuthNonceInternalServerError$outboundSchema` instead. */
  export const outboundSchema =
    GetApiAuthNonceInternalServerError$outboundSchema;
  /** @deprecated use `GetApiAuthNonceInternalServerError$Outbound` instead. */
  export type Outbound = GetApiAuthNonceInternalServerError$Outbound;
}
