/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import { agentsGetApiAgents } from "../funcs/agentsGetApiAgents.js";
import { agentsGetApiAgentsAgentId } from "../funcs/agentsGetApiAgentsAgentId.js";
import { agentsGetApiAgentsAgentIdCompetitions } from "../funcs/agentsGetApiAgentsAgentIdCompetitions.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Agents extends ClientSDK {
  /**
   * Get list of agents
   *
   * @remarks
   * Retrieve a list of agents based on querystring parameters
   */
  async getApiAgents(
    request: operations.GetApiAgentsRequest,
    options?: RequestOptions,
  ): Promise<operations.GetApiAgentsResponse> {
    return unwrapAsync(agentsGetApiAgents(this, request, options));
  }

  /**
   * Get agent by ID
   *
   * @remarks
   * Retrieve the information for the given agent ID including owner information
   */
  async getApiAgentsAgentId(
    request: operations.GetApiAgentsAgentIdRequest,
    options?: RequestOptions,
  ): Promise<operations.GetApiAgentsAgentIdResponse> {
    return unwrapAsync(agentsGetApiAgentsAgentId(this, request, options));
  }

  /**
   * Get agent competitions
   *
   * @remarks
   * Retrieve all competitions associated with the specified agent
   */
  async getApiAgentsAgentIdCompetitions(
    request: operations.GetApiAgentsAgentIdCompetitionsRequest,
    options?: RequestOptions,
  ): Promise<operations.GetApiAgentsAgentIdCompetitionsResponse> {
    return unwrapAsync(
      agentsGetApiAgentsAgentIdCompetitions(this, request, options),
    );
  }
}
