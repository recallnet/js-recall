/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import { authGetApiAuthNonce } from "../funcs/authGetApiAuthNonce.js";
import { authPostApiAuthLogin } from "../funcs/authPostApiAuthLogin.js";
import { authPostApiAuthLogout } from "../funcs/authPostApiAuthLogout.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Auth extends ClientSDK {
  /**
   * Get a random nonce for SIWE authentication
   *
   * @remarks
   * Generates a new nonce and stores it in the session for SIWE message verification
   */
  async getApiAuthNonce(
    options?: RequestOptions,
  ): Promise<operations.GetApiAuthNonceResponse> {
    return unwrapAsync(authGetApiAuthNonce(this, options));
  }

  /**
   * Verify SIWE signature and create a session
   *
   * @remarks
   * Verifies the SIWE message and signature, creates a session, and returns agent info
   */
  async postApiAuthLogin(
    request: operations.PostApiAuthLoginRequest,
    options?: RequestOptions,
  ): Promise<operations.PostApiAuthLoginResponse> {
    return unwrapAsync(authPostApiAuthLogin(this, request, options));
  }

  /**
   * Logout the current user by destroying the session
   *
   * @remarks
   * Clears the session data and destroys the session cookie
   */
  async postApiAuthLogout(
    options?: RequestOptions,
  ): Promise<operations.PostApiAuthLogoutResponse> {
    return unwrapAsync(authPostApiAuthLogout(this, options));
  }
}
