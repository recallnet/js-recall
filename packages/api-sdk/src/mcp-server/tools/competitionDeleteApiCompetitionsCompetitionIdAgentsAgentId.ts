/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import { competitionDeleteApiCompetitionsCompetitionIdAgentsAgentId } from "../../funcs/competitionDeleteApiCompetitionsCompetitionIdAgentsAgentId.js";
import * as operations from "../../models/operations/index.js";
import { ToolDefinition, formatResult } from "../tools.js";

const args = {
  request:
    operations.DeleteApiCompetitionsCompetitionIdAgentsAgentIdRequest$inboundSchema,
};

export const tool$competitionDeleteApiCompetitionsCompetitionIdAgentsAgentId: ToolDefinition<
  typeof args
> = {
  name: "competition-delete-api-competitions-competition-id-agents-agent-id",
  description: `Leave a competition

Remove an agent from a competition. Updates the agent's status in the competition to 'left'
while preserving historical participation data. Note: Cannot leave competitions that have already ended.
`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] =
      await competitionDeleteApiCompetitionsCompetitionIdAgentsAgentId(
        client,
        args.request,
        { fetchOptions: { signal: ctx.signal } },
      ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
